
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Generative Programming: Methods, Tools, and Applications
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201309777" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxMzA5Nzc3LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEdlbmVyYXRpdmUgUHJvZ3JhbW1pbmc6IE1ldGhvZHMsIFRvb2xzLCBhbmQgQXBwbGljYXRpb25zOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxLcnp5c3p0b2YgQ3phcm5lY2tpLCBVbHJpY2ggRWlzZW5lY2tlciwgS3J6eXN6dG9mIEN6YXJuZWNraTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDU0Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDcuMjk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDMuNTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8MTc7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDIwMTMwOTc3Ny9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PDtsPGk8MD47aTwxPjs+O2w8dDxAPEJvb2sgRGVzY3JpcHRpb247Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoZSBhdXRob3JzIHByZXNlbnQgYSBncmFuZCB0b3VyIG9mIEdlbmVyYXRpdmUgUHJvZ3JhbW1pbmcgdGhhdCBpcyBib3VuZCB0byBiZWNvbWUgYSBjbGFzc2ljLiBUaGV5IC4gLiAuIGZvY3VzIG9uIHRoZSBnZW5lcmFsbHkgdW5hcHByZWNpYXRlZCBjb25uZWN0aW9uIGJldHdlZW4gRG9tYWluIFNwZWNpZmljIExhbmd1YWdlcyBhbmQgR2VuZXJhdGl2ZSBQcm9ncmFtbWluZyBhcyBhIG1vdGl2YXRpb24gZm9yIGZ1dHVyZSBkZXZlbG9wbWVudC4gVGhlaXIgd2lkZS1yYW5naW5nIGFuZCBwcmFjdGljYWwgbWV0aG9kcyBmb3IgRG9tYWluIEFuYWx5c2lzIGFuZCBEb21haW4gRW5naW5lZXJpbmcgZGVzY3JpYmUgdGhlIGZpcnN0IHN0ZXBzIHRoYXQgZGV2ZWxvcGVycyBjYW4gdGFrZSByaWdodCBub3cgLiAuIC4gYW5kIGFyZSB2YWx1YWJsZSBib3RoIHdoZW4gZXhpc3Rpbmcgc3lzdGVtcyBhcmUgdXNlZCBvciBpbiBwcmVwYXJhdGlvbiBmb3IgZW1lcmdpbmcgbmV3IGdlbmVyYXRpdmUgdGVjaG5vbG9naWVzLiIgLS1DaGFybGVzIFNpbW9ueWksIENoaWVmIEFyY2hpdGVjdCBhdCBNaWNyb3NvZnQgUmVzZWFyY2ggYW5kIHRoZSBpbnZlbnRvciBvZiBJbnRlbnRpb25hbCBQcm9ncmFtbWluZyAgIlRoZSBib29rIGRldmVsb3BzIHN0cm9uZyB0aGVtZXMgYXJvdW5kIHVuaWZ5aW5nIHByaW5jaXBsZXMgdGhhdCB0aWUgdGhlIHBpZWNlcyB0b2dldGhlciwgbW9zdCBub3RhYmx5IGRvbWFpbiBlbmdpbmVlcmluZyBhbmQgbWV0YXByb2dyYW1taW5nLiBJdCBpcyBjcnVjaWFsIHRvIHVuZGVyc3RhbmQgdGhhdCB0aGlzIGJvb2sgaXMgbm90IGp1c3Qgc29tZSByZWZyZXNoaW5nIGRpdmVyc2lvbiwgbm9yIGp1c3QgYW4gZXhwb3NpdGlvbiBvZiBzb21lIG5vdGV3b3J0aHkgbmljaGUgdGVjaG5pcXVlczogSXQgaXMgYSBoYXJiaW5nZXIgb2YgYSBicm9hZGVyIGVubGlnaHRlbm1lbnQgdGhhdCBvcGVucyB0aGUgZG9vciB0byBhIG5ldyBhZ2UuIiAtLUZyb20gdGhlIEZvcmV3b3JkIGJ5IEphbWVzIENvcGxpZW4sIGEgRGlzdGluZ3Vpc2hlZCBNZW1iZXIgb2YgVGVjaG5pY2FsIFN0YWZmIGF0IEx1Y2VudCBUZWNobm9sb2dpZXMsIEJlbGwgTGFib3JhdG9yaWVzICBcPFBcPkdlbmVyYXRpdmUgUHJvZ3JhbW1pbmcgKEdQKSBvZmZlcnMgZ3JlYXQgcHJvbWlzZSB0byBhcHBsaWNhdGlvbiBkZXZlbG9wZXJzLiBJdCBtYWtlcyB0aGUgaWRlYSBvZiBtb3ZpbmcgZnJvbSBvbmUtb2YtYS1raW5kIHNvZnR3YXJlIHN5c3RlbXMgdG8gdGhlIHNlbWktYXV0b21hdGVkIG1hbnVmYWN0dXJlIG9mIHdpZGUgdmFyaWV0aWVzIG9mIHNvZnR3YXJlIHF1aXRlIHJlYWwuIEluIHNob3J0LCBHUCBpcyBhYm91dCByZWNvZ25pemluZyB0aGUgYmVuZWZpdHMgb2YgYXV0b21hdGlvbiBpbiBzb2Z0d2FyZSBkZXZlbG9wbWVudC4gR2VuZXJhdGl2ZSBQcm9ncmFtbWluZyBjb3ZlcnMgbWV0aG9kcyBhbmQgdG9vbHMgdGhhdCB3aWxsIGhlbHAgeW91IGRlc2lnbiBhbmQgaW1wbGVtZW50IHRoZSByaWdodCBjb21wb25lbnRzIGZvciBhIHN5c3RlbSBmYW1pbHkgYW5kIGF1dG9tYXRlIGNvbXBvbmVudCBhc3NlbWJseS4gVGhlIG1ldGhvZHMgcHJlc2VudGVkIGhlcmUgYXJlIGFwcGxpY2FibGUgZm9yIGFsbCBjb21tZXJjaWFsIGRldmVsb3BtZW50LS1mcm9tICJwcm9ncmFtbWluZyBpbiB0aGUgc21hbGwsIiBhdCB0aGUgbGV2ZWwgb2YgY2xhc3NlcyBhbmQgcHJvY2VkdXJlcy0tdG8gInByb2dyYW1taW5nIGluIHRoZSBsYXJnZSwiIG9yIGRldmVsb3BpbmcgZmFtaWxpZXMgb2YgbGFyZ2Ugc3lzdGVtcy4gICBcPFBcPkdlbmVyYXRpdmUgUHJvZ3JhbW1pbmcgaXMgeW91ciBjb21wbGV0ZSBndWlkZSBhbmQgcmVmZXJlbmNlIHRvIHRoaXMgZW1lcmdpbmcgZGlzY2lwbGluZS4gSXQgcHJvdmlkZXMgaW4tZGVwdGggdHJlYXRtZW50IG9mIGNyaXRpY2FsIHRlY2hub2xvZ2llcyBhbmQgdG9waWNzIGluY2x1ZGluZzogIERvbWFpbiBFbmdpbmVlcmluZyAgRmVhdHVyZSBNb2RlbGluZyAgR2VuZXJpYyBQcm9ncmFtbWluZyAgQXNwZWN0LU9yaWVudGVkIFByb2dyYW1taW5nICBUZW1wbGF0ZSBNZXRhcHJvZ3JhbW1pbmcgaW4gQysrICBHZW5lcmF0b3JzICBNaWNyb3NvZnQncyBJbnRlbnRpb25hbCBQcm9ncmFtbWluZyAgVXNpbmcgdGhpcyBib29rIHlvdSB3aWxsIGxlYXJuIGhvdyB0aGVzZSB0ZWNobmlxdWVzIGZpdCB0b2dldGhlciBhbmQsIG1vcmUgaW1wb3J0YW50bHksIGhvdyB0byBhcHBseSB0aGVtIGluIHByYWN0aWNlLiBUaGUgdGV4dCBjb250YWlucyB0aHJlZSBjb21wcmVoZW5zaXZlIGNhc2Ugc3R1ZGllcyBpbiB0aHJlZSBkaWZmZXJlbnQgZG9tYWluczogcHJvZ3JhbW1pbmcgZG9tYWluIChjb250YWluZXIgZGF0YSBzdHJ1Y3R1cmVzKSwgYnVzaW5lc3MgZG9tYWluIChiYW5raW5nKSwgYW5kIHNjaWVudGlmaWMgY29tcHV0aW5nIChtYXRyaXggY29tcHV0YXRpb25zKS47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+BghcwnelKwNftK6EPCj6vQ5yMtQ=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201309777.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Generative Programming: Methods, Tools, and Applications</span>
        <div class="ItemDetail">By
          <span id="Authors">Krzysztof Czarnecki, Ulrich Eisenecker, Krzysztof Czarnecki</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$54.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$47.29</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">3.5</span>
          based on
          <span id="TotalReviews">17</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201309777/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">The authors present a grand tour of Generative Programming that is bound to become a classic. They . . . focus on the generally unappreciated connection between Domain Specific Languages and Generative Programming as a motivation for future development. Their wide-ranging and practical methods for Domain Analysis and Domain Engineering describe the first steps that developers can take right now . . . and are valuable both when existing systems are used or in preparation for emerging new generative technologies." --Charles Simonyi, Chief Architect at Microsoft Research and the inventor of Intentional Programming  "The book develops strong themes around unifying principles that tie the pieces together, most notably domain engineering and metaprogramming. It is crucial to understand that this book is not just some refreshing diversion, nor just an exposition of some noteworthy niche techniques: It is a harbinger of a broader enlightenment that opens the door to a new age." --From the Foreword by James Coplien, a Distinguished Member of Technical Staff at Lucent Technologies, Bell Laboratories  <P>Generative Programming (GP) offers great promise to application developers. It makes the idea of moving from one-of-a-kind software systems to the semi-automated manufacture of wide varieties of software quite real. In short, GP is about recognizing the benefits of automation in software development. Generative Programming covers methods and tools that will help you design and implement the right components for a system family and automate component assembly. The methods presented here are applicable for all commercial development--from "programming in the small," at the level of classes and procedures--to "programming in the large," or developing families of large systems.   <P>Generative Programming is your complete guide and reference to this emerging discipline. It provides in-depth treatment of critical technologies and topics including:  Domain Engineering  Feature Modeling  Generic Programming  Aspect-Oriented Programming  Template Metaprogramming in C++  Generators  Microsoft's Intentional Programming  Using this book you will learn how these techniques fit together and, more importantly, how to apply them in practice. The text contains three comprehensive case studies in three different domains: programming domain (container data structures), business domain (banking), and scientific computing (matrix computations).</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">There's more than one way to skin a cat.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2005-03-14</span>
                    </div>
                    <span>I found the chapters on Domain Analysis to be the most useful to me since I was in the middle of designing software for a new product that required many variations.  The technique of Feature Diagrams was a welcome addition to UML-like techniques.  
<br />
<br />But these chapters are merely there for motivation.  The book shows us how to write programs that can manage potentially hundreds of application variants, without all those if-then-else statements at run time.  Instead we substitute patterns and recursion at compile-time.
<br />
<br />What it really comes down to is this:  The authors exploit an obscure aspect of C++ template programming-template specialization and recursion within the body of templates.  This adds up to an embedded compile time functional programming language for parametric class generation.  Translated, this means:  In addition to writing template classes varied parametrically by type, you can vary the content and behavior of the class, too.  For example, given a class of programming languages as the application variants, you could write a compiler-compiler with this technique.  
<br />
<br />Now I'm being obscure.  If you don't have a clue as to what I'm trying to say, don't buy the book.  Readers familiar with Common Lisp and CLOS may feel strange haunting sensations.  It was easy for me to grasp the concepts of generative programming only because of previous work with pattern matching languages and meta-programming languages like CLOS.  
<br />
<br />Most of the book is about the applications of this simple idea. Hence, we have yet another 1000 pages to read.  I would have given the book a better score, otherwise.  However, the book is no less obscure or verbose than the C++ programming language, itself.  C++ may be a living language, but it's killing me!
<br /></span>
                  
                    <div class="CustomerReviewSummary">Strangely boring</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-24</span>
                    </div>
                    <span>I bought this book because I was looking for a language-agnostic guide to generic and aspect-oriented programming. Its scope includes these subjects in the broader topic of building software that builds software; a search for yet higher level tools and methods.<p>While this is undoubtedly an important area, there is something strangely boring about this books presentation of the topic. I have found it sits unread on my desk. I think it's because the book is often rather vaugue and conceptual in its discussion of the issues, and Im unable to relate the material to the practical challenges and solutions I have encountered in my day to day work in Java enterprise systems development. <p>The authors can be tediously verbose. Each chapter starts with a section "Why you should read this chapter" which describes the contents, then goes on to an Introduction that describes the contents again. The very need to individually justify each chapter suggests Im not the only one who has found it a lottle bit dull.</span>
                  
                    <div class="CustomerReviewSummary">An advanced work on Code Generation</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-13</span>
                    </div>
                    <span>This is a solid book of the theory behind code generation. Definitely worth the look if you are interested in extending your build process with code generation or are looking at template drive programming.</span>
                  
                    <div class="CustomerReviewSummary">good book</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-01-02</span>
                    </div>
                    <span>This is a good book. It can be an even better one if the chapter on 'Intentional Programming' can be cut in half or more. I don't mind reading about the ideas of intentional programming, but the first half of the chapter reads like a manual for a particular software. "Click this button to compile, that button to do some other stuff..." For a theory flavored book I was surprised it included this kind of stuff. <p>The rest of the book is fine. It's a good survey of programming methodologies with an extensive list of literature. The discussion on generative programming and templates are inspiring. One thing to keep in mind is in a lot of places the book talks about the ideals of how programming should be, which is why it may sound silver-bulletish. But it didn't claim to have reached all those ideals. So you need to think for yourself what can be solved by using the techniques introduced in this book. Unlike some other reviewers, the academic style is ok with me. I'd rather a technical book to be a little too serious than too comical.</span>
                  
                    <div class="CustomerReviewSummary">Too much fluff</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>13</span>
                      /
                      <span>21</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-05-29</span>
                    </div>
                    <span>I bought the book with much hope... yet I was unhappy with it. I am looking for new, improved ways to design and implement programs using C++, and sadly this book doesn't offer much help in that direction. <p>The book is a bit silver-bulletish: pompous terms, academic "serious" style, predictions, they're all there. Yet the practical examples the authors give are not very conclusive. <p>The book is too long. A very hard, and not much rewarding, read. And the forward references are really annoying. Practically the first half of the book keeps saying that the details about X, or even the full definition of X, will be found in a subsequent chapter...<p>Too hard to read, too little outcome for me as a reader. The information is there but it's drawned in mere fluff.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1930110979'>
                      Code Generation in Action
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 19 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201734842'>
                      C++ Templates: The Complete Guide
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 16 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321227255'>
                      C++ Template Metaprogramming : Concepts, Tools, and Techniques from Boost and Beyond (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 3 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471202843'>
                      Software Factories: Assembling Applications with Patterns, Models, Frameworks, and Tools
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 1 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321113586'>
                      C++ Coding Standards : 101 Rules, Guidelines, and Best Practices (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 14 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

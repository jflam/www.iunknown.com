
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Decompiling Java
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=1590592654" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8xNTkwNTkyNjU0LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPERlY29tcGlsaW5nIEphdmE7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEdvZGZyZXkgTm9sYW47Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQzOS45OTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDM1LjE2Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0LjU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDc7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMTU5MDU5MjY1NC9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PHA8cDxsPFZpc2libGU7PjtsPG88Zj47Pj47PjtsPGk8MD47aTwxPjs+O2w8dDxAPFxlOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxcZTs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz7+a+JRvLzj5mj3c9uK/w80NrHsWg==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/1590592654.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Decompiling Java</span>
        <div class="ItemDetail">By
          <span id="Authors">Godfrey Nolan</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$39.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$35.16</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">7</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/1590592654/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Unique reference on decompilers and obfuscators</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>7</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-10-12</span>
                    </div>
                    <span>This is a fantastic in-depth book on decompilers and code obfuscation tools for Java. It covers the structure of Java code files, the opcodes, and the all of the tools required to decompile classes, and to obfuscate existing code. It's an invaluable reference for anyone who has to deploy Java in a non-secure environment, or for those that want to learn how the language really works.
<br />
<br />There is a lot of code to pour though, and there are no illustrations. I think the text could have used some illustrations, but that's not a big sticking point for me.
<br />
<br />If you are a serious Java gearhead you should have a look at this book. And if you have a specific interest in either de-compiling some Java or obscuring your deployed Java bytecode then this is a must have.</span>
                  
                    <div class="CustomerReviewSummary">Interesting and intriguing, but a bit too light on details</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>9</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-20</span>
                    </div>
                    <span>"Decompiling Java" is an interesting piece of work. In just 250 or so pages, you'll go through legalities related to decompiling Java code, learn the basics of Java's class file format, get a brief run-down of tools available for decompiling and obfuscating Java code, all the way through different methods employed by obfuscation tools. Finally, Nolan goes through the design of a basic Java decompiler implementation using JLex and CUP open source compiler compiler tools.
<br />
<br />The brevity of the book is both its best and worst characteristic. It's great because I certainly wouldn't have wanted a bible on copyright and patent laws in different parts of the world, but it's unfortunate because the topic you're interested in is bound to be slightly too superficial or detached from the rest of the book. For example, I would've liked to read a lot more about the actual class file format and the internals of a JVM in the book itself instead of having to read from a specification on the web. On the other hand, the author managed to light some bulbs in my head along the way and I actually enjoyed reading his text - especially the chapter about creating a decompiler using JLex and CUP (which I've also found a bit too intimidating to actually look into).
<br />
<br />In summary, "Decompiling Java" is a good overview of decompilation in Java and it has a couple of real gems inside, but if you're looking for a manual for dissecting class files or the JVM, it might not the book you're looking for.</span>
                  
                    <div class="CustomerReviewSummary">Fully compile down to assembler binary</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>18</span>
                      /
                      <span>19</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-18</span>
                    </div>
                    <span>Decompilers are something of a black box to most programmers. Not unlike compilers. Actually Nolan shows us that the 2 are very similar in their lexical methods. 
<br />
<br />In the specific case of Java, this book may well cause unease in the reader, if you program in Java and are worried about protecting your source code. After all, it probably has proprietary methods that are not covered by any patents you might have. While you can copyright the source, Nolan points out that this may not stop someone from decompiling and reimplementing your "secret" methods.
<br />
<br />The book shows that the big problem with Java bytecode is that decompilers for it have a far easier time than decompilers for actual assembly code, whatever the specific hardware for the latter. The basic reason is that the bytecode retains extra information that a decompiler can use, whereas assembly does not have this. Like the fact that the bytecode separates data from instructions. A vital simplification to a decompiler. 
<br />
<br />Nolan shows countermeasures. At the source code level, there are several good obfuscation techniques, described well enough for you to try. And these may be better than buying a commercial decompiler.
<br />
<br />Also, Nolan suggests fully compiling your Java into specific assembly binaries. One for each combination of microprocessor and operating system that you need to support. More work. But it makes a decompilation far harder. Besides, these days, you may only have to support a few combinations. The hardware may be a Pentium or a Sparc or an IBM cpu. If a Pentium, then you might only support a recent linux or Microsoft OS on top of it. If a Sparc, then you need only support a recent Solaris. While for an IBM cpu, the only choice is AIX or Apple's OS. </span>
                  
                    <div class="CustomerReviewSummary">Comprehensive coverage</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>9</span>
                      /
                      <span>19</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-08-24</span>
                    </div>
                    <span>I've just put this book down after reading it right through nonstop
<br />for four days.  I haven't done that with a technical book since
<br />Learning Perl. Most techie book these days are quickie grab bags and
<br />you end up paying for a lot of dead trees that you aren't interested
<br />in.
<br />
<br />Well, if you are interested in decompiling Java, then this book tell
<br />you exactly how to do that. There's no fluff and every chapter
<br />counts. I can safely concur that Fiachra's observations are indeed
<br />correct. You'd better be prepared for some serious hard core details,
<br />but then that's what you'd paid for. It is really great to read a book
<br />that doesn't end each chapter with a few links to the real material
<br />becuase the author could be bothered to write it up.
<br />
<br />So what do you get? As a battle-hardened Java coder of not a few years
<br />programming, I wanted to find out about the gory details of bytecodes
<br />and how to get at them. Now it's a subject I always knew I should know
<br />about, but never took the time to read up on it. Decompiling Java puts
<br />all that knowledge into one place.
<br />
<br />Here's a quick run through of the chapters so you know what you're
<br />getting:
<br />
<br />Ch.1 Introduction 
<br />Decompilation isn't just another coding tool - there are other, real
<br />world issues like ending up in jail to think about. Godfrey proposes a
<br />sort of code-of-honour for decompilers. This book could so easily have
<br />been positioned afor the fr33ky kod3r skript kiddie market, and I'm
<br />glad that the author and publishers took a mature and sensible
<br />approach to the subject. I have had to decompile purchased code
<br />because of bugs and I'm glad that someone took the time to think about
<br />an ethical framework for doing this.
<br />
<br />Ch.2 Ghost in the Machine
<br />A good and solid introduction to the JVM and the classfile format. If
<br />you're in the market for this book, you probably already know most of
<br />this, but a refresher course is always good. For me, it definitely
<br />sorted out a lot on internal hand-waving on the subject.  Just
<br />remember kids, the only thing to fear is fear itself - it's only
<br />binary data after all.
<br />
<br />Ch.3 Tools of the Trade
<br />Although the author builds his only decompiler later in the book, it
<br />nice to get a chapter devoted to the existing toolset and the Java
<br />decompiler schene.
<br />
<br />Ch. 4 Protecting your Source
<br />For the honest developer, knowing how to decompile code is more about
<br />protecting your own source code than breaking someone elses (who wants
<br />to read other people's smelly code anyway!). This chapter is one of
<br />the most directly practical. I had always assumed that obfuscation was
<br />a magic fix that I could apply if necessary. In reality, good
<br />obfuscation is just like good encryption (that is, uncommon, difficult
<br />to verify, and still subject to lateral attacks). Even compiled
<br />bytecode has relatively low entropy, so the value of obfuscation must
<br />be considered carefully.
<br />
<br />Ch.5 Decompiler Design
<br />This is were it starts getting a wee bit technical. Decompilation, as
<br />you can imagine, is a bit of a black art, and there are many ways of
<br />doing it. Some of them involve scary maths and some involve scary
<br />coding and the rest both. But that's why you don't meet many people
<br />who can write deocmpilers. Godfrey does a great job of taking you on a
<br />practical run through this fog of decompilers. At the end of this
<br />chapter you wil be able to decide for yourself what approach is best
<br />suited to your problem domain. Again, this material can be challenging
<br />but it's like boot camp: You just gotta.
<br />
<br />Ch.6 Decompiler Implementation
<br />If the previous chapter hurt your brain and scared you silly then this
<br />chapter will have you weeping for joy. The author takes a practical,
<br />effective, and most importantly, understandable approach to actually
<br />implementing a compiler. Now, as he freely admits, his design may
<br />encounter difficulties with edge effects and infrequently used idioms,
<br />but it will take you to the point where you can solve them yourself.
<br />I really had to smile at how simple and effective the approach taken
<br />here is - instead of the expected multiple passes and mind bending
<br />parse tree manipulation, we have a single-pass, source-generating
<br />decompiler for Java. You won't follow it all first time, but it does
<br />work and you can verify it for yourself. Like I said at the start, you
<br />don't get that empty feeling from this book, and this chapter is
<br />pretty much why. I bought a book about decompiling Java and now I can.
<br />
<br />Ch.7 Case Studies
<br />
<br />This chapter addresses the "why" of decompiling, returning again to
<br />the moral questions raised at the start. It's more food for thought
<br />than prescriptive preaching though, which again is refreshing. I have
<br />admit to dipping into this chapter while reading the rest of the book
<br />- the human interest angle always works a treat!
<br />
<br />Decompiling Java is a great addition to that section of your bookshelf
<br />dedicated to serious books that will be around for a while.  The JVM
<br />specification and Java bytecode are not going to change that much, so
<br />this book is something you'll be able to use for a long time.
<br />Personally the best thing about this book for me was that it took me
<br />to the next level. Not many books can do this. As a working coder, I
<br />pretty much put things like decompilation into the "too hard, just for
<br />academics, and I could never grok it", category. It's great when a
<br />book comes along that can can you out of that comfort zone.</span>
                  
                    <div class="CustomerReviewSummary">I would be very surprised if this books wasn't well-written</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>17</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-08-06</span>
                    </div>
                    <span>I do not believe (previous review) that: "The book lacks focus, cohesivness, and has an awkward style which caused me to lose focus reading it." 
<br />
<br />I used to commission articles from Godfrey Nolan for Ireland's leading daily newspaper. At the time, I co-edited its computing and communications section. 
<br />
<br />Godfrey's copy was always well-presented - something any editor values. Not only was it free of spelling and grammatical mistakes, it was also: 
<br />
<br />* Tightly written, with no waffle;
<br />* Clear and readable;
<br />* Well-structured, with a strong, attention-grabbing lead and an inverted pyramid build-up;
<br />* Accurate and perceptive.
<br />
<br />So, I would be very surprised if this book did not share these strengths. </span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0672326388'>
                      Covert Java : Techniques for Decompiling, Patching, and Reverse Engineering
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 2 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=193239415X'>
                      Hibernate in Action (In Action series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 29 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1932394184'>
                      Java Reflection in Action (In Action series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596007388'>
                      Java 5.0 Tiger: A Developer's Notebook
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 16 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596006764'>
                      Better, Faster, Lighter Java
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 26 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

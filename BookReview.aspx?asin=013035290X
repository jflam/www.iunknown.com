
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Java Transaction Processing : Design and Implementation
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=013035290X" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMTMwMzUyOTBYLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEphdmEgVHJhbnNhY3Rpb24gUHJvY2Vzc2luZyA6IERlc2lnbiBhbmQgSW1wbGVtZW50YXRpb247Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPE1hcmsgTGl0dGxlLCBKb24gTWFyb24sIEdyZWcgUGF2bGlrOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDkuOTk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQzNS4yODs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NC41Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwxMTs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMTMwMzUyOTBYL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8Qm9vayBEZXNjcmlwdGlvbjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8UHJvdmlkZXMgYSBjb21wcmVoZW5zaXZlIGV4cGxhbmF0aW9uIG9mIEoyRUUgYW5kIEphdmEgZnJvbSBhIHRyYW5zYWN0aW9uYWwgcGVyc3BlY3RpdmUtLW5lZWRlZCB0byBleHBsb2l0IHRoZSB0ZWNobm9sb2d5IGNvcnJlY3RseS4gICBcPFBcPkV4cGxhaW5zIHRyYW5zYWN0aW9uIHByb2Nlc3NpbmcgaW4gdGhlb3J5IGFuZCBwcmFjdGljZSBieSBoaWdobGlnaHRpbmcgdGhlICJ1bmRlciB0aGUgaG9vZCIgYXNwZWN0cyBvZiBhcHBsaWNhdGlvbiBzZXJ2ZXJzIGFuZCBKMkVFIEFQSXMuICBcPEJSXD5Hb2VzIGJleW9uZCBKMkVFLCBhbGxvd2luZyBKYXZhIGRldmVsb3BlcnMgdG8gaW50ZXJvcGVyYXRlIHdpdGggb3RoZXIgc3lzdGVtcyB3aGlsZSB0YWNrbGluZyBpc3N1ZXMgd2l0aCB3ZWIgc2VydmljZXMgYW5kIFhNTC4gIFw8QlJcPkF1dGhvcmVkIGJ5IHZpc2libGUgbWVtYmVycyBvZiB0aGUgSmF2YSBjb21tdW5pdHktLWhlYXZpbHkgaW52b2x2ZWQgd2l0aCB0aGUgSmF2YSBwbGF0Zm9ybSBhdCBIZXdsZXR0IFBhY2thcmQuICAgXDxQXD5UcmFuc2FjdGlvbiBwcm9jZXNzaW5nIGlzIGF0IHRoZSBoZWFydCBvZiBtb2Rlcm4gZW50ZXJwcmlzZSBzeXN0ZW1zLiBUaGlzIGJvb2sgZXhwbGFpbnMgaW4gZGVwdGggdHJhbnNhY3Rpb24gcHJvY2Vzc2luZyB0ZWNobm9sb2d5IGFuZCBob3cgaXQgY2FuIGJlIGxldmVyYWdlZCBpbiB0aGUgSmF2YSBwbGF0Zm9ybS4gSXQgcHJvdmlkZXMgYSBjb21wcmVoZW5zaXZlIGV4cGxhbmF0aW9uIG9mIHRoZSB1bmRlcmx5aW5nIGNvbmNlcHRzIGluIHRyYW5zYWN0aW9ucyB0aGF0IGFyZSBuZWVkZWQgdG8gdW5kZXJzdGFuZCBhbmQgZXhwbG9pdCB0aGUgdGVjaG5vbG9neSBjb3JyZWN0bHkuIEFsbCB0ZWNobmljYWwgaW5mb3JtYXRpb24gZGVsaXZlcmVkIGluIHRoZSBib29rIGNvcnJlc3BvbmRzIGRpcmVjdGx5IHRvIHRoZSBsYXRlc3QgcmV2aXNpb24gb2YgSmF2YS4gVGhlIGF1dGhvcnMgY292ZXIgaG93IHRyYW5zYWN0aW9uYWwgYXNwZWN0cyBvZiBhbGwgdGhlIG1ham9yIEoyRUUgY29tcG9uZW50cyB3b3JrIGFuZCB0aGUgcHJhY3RpY2FsIGNvbnNlcXVlbmNlcyBvZiBpbXBsZW1lbnRhdGlvbiBjaG9pY2VzLiBJbiBhZGRpdGlvbiwgdGhpcyB0ZXh0IGxvb2tzIGJleW9uZCBKYXZhIGF0IHN0YW5kYXJkcyBhbmQgaW1wbGVtZW50YXRpb25zIHRoYXQgcHJvdmlkZSBmb3IgYnJvYWQgaW50ZXJvcGVyYWJpbGl0eSBhY3Jvc3MgaGV0ZXJvZ2VuZW91cyBhcHBsaWNhdGlvbiBlbnZpcm9ubWVudHMuIEZpbmFsbHksIHRoZSBib29rIHByb3ZpZGVzIGEgbG9vayBhdCBob3cgZW1lcmdpbmcgd2ViIHNlcnZpY2VzIHN0YW5kYXJkcyB3aWxsIGFkZHJlc3MgdGhlIG5leHQgZ2VuZXJhdGlvbiBvZiByZWxpYWJsZSBpbmZvcm1hdGlvbiBzeXN0ZW1zOz4+Oz47Oz47Pj47Pj47Pj47Pt6Im1pEG4hem/BYjqDxeqRX8Irv" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/013035290X.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Java Transaction Processing : Design and Implementation</span>
        <div class="ItemDetail">By
          <span id="Authors">Mark Little, Jon Maron, Greg Pavlik</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$49.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$35.28</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">11</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/013035290X/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">Provides a comprehensive explanation of J2EE and Java from a transactional perspective--needed to exploit the technology correctly.   <P>Explains transaction processing in theory and practice by highlighting the "under the hood" aspects of application servers and J2EE APIs.  <BR>Goes beyond J2EE, allowing Java developers to interoperate with other systems while tackling issues with web services and XML.  <BR>Authored by visible members of the Java community--heavily involved with the Java platform at Hewlett Packard.   <P>Transaction processing is at the heart of modern enterprise systems. This book explains in depth transaction processing technology and how it can be leveraged in the Java platform. It provides a comprehensive explanation of the underlying concepts in transactions that are needed to understand and exploit the technology correctly. All technical information delivered in the book corresponds directly to the latest revision of Java. The authors cover how transactional aspects of all the major J2EE components work and the practical consequences of implementation choices. In addition, this text looks beyond Java at standards and implementations that provide for broad interoperability across heterogeneous application environments. Finally, the book provides a look at how emerging web services standards will address the next generation of reliable information systems</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Required Enterprise Transactions Reading</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-12</span>
                    </div>
                    <span>This book is the only text that I know of that addresses the enterprise-level issues of transactioning in the J2EE space. While the authors do not coddle the reader (and thus it would be tough going for newbies) for those with a background in enterprise systems, it is invaluable.
<br />There is little in this book (with the exception of the Web Services aspects) which a developer cannot take and use immediately in enterprise-grade projects. The signal to noise ratio is simply extremely high.
<br />As a whole the text flows well and the book could reasonably be read cover to cover giving the full story of transactions in the Java space. However to my mind its strength is as reference material: it is accessible, concise, and accurate. 
<br />In short, if you need J2EE transactions, you need this book.</span>
                  
                    <div class="CustomerReviewSummary">All J2EE developers should read this book.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-02</span>
                    </div>
                    <span>This is not a book for beginners.  It assumes knowledge of Java and as well as a fairly broad knowledge of various other technologies.  However, I did find it to be quite readable considering its complex subject matter, with an excellent balance between theory, practice, and illustrative examples.  Many J2EE application developers do not understand two phase commit transactions, and hence have little understanding of, for example, the consequences of involving messaging and database operations in the one transction.  I would highly recommend this book to all J2EE developers as an excellent way to address this ignorance, and as an eye opener to the possibilities of alternative transaction models.
<br />
<br />Much of the book is devoted to two phase commit transactions:
<br /> - How they are implemented. Almost enough information to implement one yourself (though they strongly recommend against trying!)
<br /> - The Object Transaction Service Architecture on which the Java Transaction API is based: this section has considerable detail made surprisingly readable by numerous sequence diagrams.
<br /> - Heuristic Decisions: detailing the meanings of the different heuristic outcomes, such as heurist-rollback, heuristic-commit, heuristic-mixed, and heuristic-hazard.
<br /> - Optimizations: presumed-abort; one-phase; read-only; and last-resource-commit.
<br /> - The implications for database access and messaging (JMS), and information on the approaches taken by different vendors.
<br /> - The implications for EJB and other J2EE programming.
<br /> - Optimistic vs pessimistic locking schemes, commit options, isolation levels, and transaction context propagation.
<br /> - The J2EE Connector Architecture (JCA): its API's and what's involved in creating a resource adaptor.
<br />
<br />Other topics are covered in considerable depth, including:
<br /> - The J2EE Activity Service as a framework for supporting alternative transaction models to the standard ACID model.  For example, it lets you define a transaction in terms of a sequence of actions and any required compensation actions required upon failures.
<br /> - Transactions & Web Services: describing a number of different specificiations that have been defined and implemented for supporting distributed transactions over web services.</span>
                  
                    <div class="CustomerReviewSummary">Covers all I wanted to know about transactions--and more</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>8</span>
                      /
                      <span>8</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-08-16</span>
                    </div>
                    <span>Since many financial institutions have standardized on it, I hear Java is the new COBOL. Whether or not this is true, if Java is to become the business language of choice, transaction support is crucial. (By 'transaction,' I mean 'allowing two or more decisions to me made under ACID constraints: atomically, consistently, (as) in isolation and durably'.) Over the last five ears, the Java platform has grown by leaps and bounds, not least in this area.
<br />
<br />Java Transaction Processing by Mark Little, Jon Maron and Greg Pavlik, explores transactions and their relationship with the Java language and libraries. Starting with basic concepts of transactions, both local and distributed, including the roles of participant and coordinator, and the idea of transaction context, the book covers much old but useful ground. Then, by covering the Java Transaction API (JTA) as well as OTS, the OMG's transaction API which is JTA's foundation, this book provides a solid understanding of the complexities of transactions for Java programmers who haven't dealt with anything more complex than a single RDBMS. I'd say these complexities could be summed up simply: failures happen; how can you deal with them reliably and quickly?
<br />
<br />The book then goes on to examine transactions and the part they play in major J2EE APIs: Java Database Connectivity (JDBC), Java Message Service (JMS), Enterprise Java Beans (EJB) and J2EE Connector Architecture (JCA). These chapters were interesting overviews of these technologies, and would be sufficient to begin programming in them. However, they are complex, and a single chapter certainly can't do justice to any of the APIs. If you're new to them, expect to buy another book.
<br />
<br />In the last section, the authors discuss the future of transactions, especially long running activities (the Java Activity Service) and web services. This was the most interesting section to me, but also is the most likely to age poorly. These technologies are all still under development; the basic concepts, however, seem likely to remain useful for some time. And, if you need to decide on a web service transaction API yesterday, don't build your own, read chapter 10.
<br />
<br />There were some things I didn't like about Java Transaction Processing. Some of the editing was sloppy-periods or words missing. This wasn't too big a problem for me, since the publisher provided me a free copy for review, but if I were paying list price ($50) I'd be a bit miffed. A larger annoyance was incorrect UML and Java code snippets. Again, the meaning can be figured out from the text, but it's a bit frustrating. Finally, while the authors raise some very valid points about trusting, or not, the transaction system software provider, I felt the constant trumpeting of HP and Arjuna technologies was a bit tedious. Perhaps these companies are on the forefront of Java transactions (possible); perhaps the authors are most familiar with the products of these companies (looking at the biographies, this is likely). The warnings-find out who is writing the transaction software, which is probably at the heart of your business, and how often they've written such software before-were useful, if a bit repetitive.
<br />
<br />That said, this book was still a good read, if a bit long (~360 pages). I think that Java Transaction Processing would be especially useful for an enterprise architect looking to leverage existing (expensive) transactional systems with more modern technology, and trying to see how Java and its myriad APIs fit into the mix. (This is what I imagine, because I'm not an enterprise architect.) I also think this book would be useful to DBAs; knowing about the Java APIs and how they deal with transactions would definitely help a DBA discuss software issues with a typical Java developer.
<br />
<br />To me, an average Java developer, the first section of the book was the most useful. While transactions are fairly simple to explain (consider the canonical bank account example), this section illuminated complexities I'd not even thought of-optimizations, heuristic outcomes, failure recovery. These issues occur even in fairly simple setups-I'm working at a client who wants to update two databases with different views of the same information, but make sure that both are updated or neither; this seems to be a typical distributed transaction. The easiest way to deal with this is to pretend that such updates will always be successful, and then accept small discrepancies. That's fine with click-throughs-money is a different matter.
<br />
<br />However, if you are a typical web developer, I'm not sure this book is worth the price. I would borrow it from your company's enterprise architect, as reading it will make you a better programmer (as well as giving you a sense of history-transactions have been around for a long time). But, after digesting fundamental distributed transaction concepts, I won't be referencing this book anytime soon, since the scenarios simply don't happen that often (and when they do, they're often ignored, as outlined above). </span>
                  
                    <div class="CustomerReviewSummary">Required reading for all J2EE developers/architects</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-31</span>
                    </div>
                    <span>"Java Transaction Processing" provides a clear-cut, understandable journey through the nether-world of transaction processing. This information is critical to the development of robust applications and Mr's Little, Maron, and Pavlick have brigdged the gap between the "standard-speak" of XOPEN and the vagueness of the JTA specifications. Highly recommended.</span>
                  
                    <div class="CustomerReviewSummary">Superior guide for advanced developers</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-30</span>
                    </div>
                    <span>This book offers a thorough snapshot of transaction concepts in Java.  There's no fluff in this book, just solid explanations and examples.  Excellent work.  That being said, I am pleased also to see the topics in the appendices, including lessons learned and a history of transaction systems; they wrap things up neatly in context. </span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0764558315'>
                      Expert One-on-One J2EE Development without EJB
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 21 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=193239415X'>
                      Hibernate in Action (In Action series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 23 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596007388'>
                      Java 5.0 Tiger : A Developer's Notebook
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 11 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1558604154'>
                      Principles of Transaction Processing
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321130006'>
                      Effective Enterprise Java
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 13 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Concurrent Programming in Java(TM): Design Principles and Pattern (2nd Edition)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201310090" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxMzEwMDkwLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPENvbmN1cnJlbnQgUHJvZ3JhbW1pbmcgaW4gSmF2YShUTSk6IERlc2lnbiBQcmluY2lwbGVzIGFuZCBQYXR0ZXJuICgybmQgRWRpdGlvbik7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPERvdWcgTGVhOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDkuOTk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ0My4xMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NC4wOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0NTs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMjAxMzEwMDkwL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8QW1hem9uLmNvbTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8XDxJXD5Db25jdXJyZW50IFByb2dyYW1taW5nIGluIEphdmEsIDJuZCBFZGl0aW9uXDwvSVw+IHN1cnZleXMgYSB3aWRlIGZpZWxkIG9mIHJlc2VhcmNoIGluIHBhcmFsbGVsaXNtIGFuZCBjb25jdXJyZW5jeSBhbmQgc2hvd3MgaG93IHRvIGRvIG1vcmUgd2l0aCBtdWx0aXRocmVhZGluZyBpbiBKYXZhIHdpdGggZG96ZW5zIG9mIHBhdHRlcm5zIGFuZCBkZXNpZ24gdGlwcy4gV3JpdHRlbiBmb3IgdGhlIGFkdmFuY2VkIEphdmEgZGV2ZWxvcGVyLCB0aGlzIGJvb2sgb2ZmZXJzIGEgY29tcHJlaGVuc2l2ZSB0b3VyIG9mIGxlYWRpbmctZWRnZSB0aGlua2luZyBhYm91dCBwYXJhbGxlbCBjb2RpbmcgcHJvY2Vzc2VzLlw8cFw+IFdpdGhpbiB0aGUgZG96ZW5zIG9mIHRlY2huaXF1ZXMgYW5kIHRpcHMgb2ZmZXJlZCBoZXJlLCB0aGlzIGJvb2sgYWNjb21wbGlzaGVzIGF0IGxlYXN0IHR3byBnb2Fscy4gRmlyc3QsIGl0IHNob3dzIGhvdyBjb25jdXJyZW5jeSBpcyBpbXBsZW1lbnRlZCBieSBkZWZhdWx0IHdpdGhpbiBKYXZhLCB3aXRoIG1hdGVyaWFsIG9uIGhvdyBidWlsdC1pbiBmZWF0dXJlcyAobGlrZSB0aGUgXDxJXD5zeW5jaHJvbml6ZWRcPC9JXD4ga2V5d29yZCBhbmQgaXRzIG1lbW9yeSBtb2RlbCkgY2FuIGJlIGV4cGVjdGVkIHRvIHBlcmZvcm0gd2hlbiBkZWFsaW5nIHdpdGggbXVsdGlwbGUgdGhyZWFkcy4gTmF0dXJhbGx5LCBKYXZhIHRocmVhZHMgdGhlbXNlbHZlcyBhcmUgYWxzbyBjb3ZlcmVkLCBpbmNsdWRpbmcgcHJpb3JpdGllcywgc2NoZWR1bGluZywgYW5kIHRoZSBsaWtlLiBcPHBcPiBNdWNoIG9mIHRoaXMgYm9vayBsb29rcyBhdCB3YXlzIHRvIGltcHJvdmUgcGVyZm9ybWFuY2Ugb2YgY29uY3VycmVudCBjb2RlIGJleW9uZCB0aGUgc2ltcGxlIGRlZmF1bHQgc3RyYXRlZ2llcy4gQWZ0ZXIgZGVmaW5pbmcgY3JpdGVyaWEgZm9yIG1lYXN1cmluZyBjb25jdXJyZW50IGNvZGUgKHN1Y2ggYXMgc2FmZXR5IGFuZCAibGl2ZW5lc3MsIiBhIG1lYXN1cmUgb2YgcnVubmluZyBsaXZlIHRocmVhZHMgZWZmZWN0aXZlbHkpLCB0aGUgYm9vayBwcmVzZW50cyBkb3plbnMgb2YgdGVjaG5pcXVlcyBmb3IgbGV0dGluZyB0aHJlYWRzIHdvcmsgdG9nZXRoZXIgc2FmZWx5LiBGb3IgdGhlIHdvcmtpbmcgSmF2YSBwcm9ncmFtbWVyLCBjb3ZlcmFnZSBvZiBwYXR0ZXJucyB0aGF0IGhhdmUgYmVlbiBpbXBsZW1lbnRlZCBpbiB0aGUgZG93bmxvYWRhYmxlIFw8SVw+amF2YS5jb25jdXJyZW5jeVw8L0lcPiBwYWNrYWdlIHdpbGwgYmUgdGhlIG1vc3QgaW1tZWRpYXRlbHkgdXNlZnVsLiAoV2l0aGluIHRoaXMgbmVhcmx5IGVuY3ljbG9wZWRpYyBzdXJ2ZXksIHNob3J0IGNvZGUgc25pcHBldHMgYXJlIHVzZWQgZm9yIGV2ZXJ5IHBhdHRlcm4gYW5kIGNvbmNlcHQuKSBcPHBcPlRob3VnaCB0aGVvcmV0aWNhbCBhdCB0aW1lcywgdGhpcyBib29rIG9mZmVycyBwbGVudHkgb2YgaWRlYXMgYW5kIHNhbXBsZSBjb2RlIHRvIGdldCB5b3Ugc3RhcnRlZCB0aGlua2luZyBvZiB3YXlzIHRvIGltcHJvdmUgbXVsdGl0aHJlYWRlZCBjb2RlLiBcPHBcPiBJbXByZXNzaXZlbHkgY29tcHJlaGVuc2l2ZSwgXDxJXD5Db25jdXJyZW50IFByb2dyYW1taW5nIGluIEphdmFcPC9JXD4gb2ZmZXJzIGEgdmVyaXRhYmxlIGJpYmxlIG9mIHRlY2huaXF1ZXMgZm9yIGRvaW5nIHR3byB0aGluZ3MgYXQgb25jZSB3aXRoIHRocmVhZHMgaW4gSmF2YS4gSXQncyBhIHdvcnRod2hpbGUgZ3VpZGUgdG8gdGhlIHN0YXRlLW9mLXRoZS1hcnQgc3RyYXRlZ2llcyBmb3IgaW1wcm92aW5nIHRoZSBwZXJmb3JtYW5jZSBvZiB5b3VyIEphdmEgdGhyZWFkcy4gXDxJXD4tLVJpY2hhcmQgRHJhZ2FuXDwvSVw+XDxwXD4gXDxCXD5Ub3BpY3MgY292ZXJlZFw8L0JcPjogVGhyZWFkcyBhbmQgY29uY3VycmVuY3kgaW4gSmF2YSwgZGVzaWduIGNvbnNpZGVyYXRpb25zIChzYWZldHksIGxpdmVuZXNzLCBhbmQgcGVyZm9ybWFuY2UpLCBCZWZvcmUvQWZ0ZXIgUGF0dGVybnMsIGxheWVyaW5nLCBhZGFwdGVycywgaW1tdXRhYmlsaXR5IGFuZCBzeW5jaHJvbml6YXRpb24sIGRlYWRsb2NrLCByZXNvdXJjZSBvcmRlcmluZywgdGhlIEphdmEgTWVtb3J5IE1vZGVsIGFuZCBjb25jdXJyZW5jeSwgdXNpbmcgdGhlIFw8SVw+amF2YS5jb25jdXJyZW5jeVw8L0lcPiBwYWNrYWdlLCBjb25maW5lbWVudCwgcmVmYWN0b3JpbmcgZm9yIGNvbmN1cnJlbmN5LCBtdXRleGVzLCByZWFkLXdyaXRlIGxvY2tzLCByZWNvdmVyaW5nIGZyb20gZmFpbHVyZSwgbm90aWZpY2F0aW9ucywgc2VtYXBob3JlcywgbGF0Y2hlcywgZXhjaGFuZ2VzLCB0cmFuc2FjdGlvbnMsIG9uZS13YXkgbWVzc2FnZXMsIHdvcmtlciB0aHJlYWRzLCBwb2xsaW5nIGFuZCBldmVudC1kcml2ZW4gSS9PLCBwYXJhbGxlbGlzbSB0ZWNobmlxdWVzIChmb3JrL2pvaW4sIGNvbXB1dGF0aW9uIHRyZWVzLCBhbmQgYmFycmllcnMpLCBDb21tdW5pY2F0aW5nIFNlcXVlbnRpYWwgUHJvY2Vzc2VzIChDU1ApLjs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz7Sw+jz4J+WtsLPlYUqfoOIpR35Bw==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201310090.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Concurrent Programming in Java(TM): Design Principles and Pattern (2nd Edition)</span>
        <div class="ItemDetail">By
          <span id="Authors">Doug Lea</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$49.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$43.10</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.0</span>
          based on
          <span id="TotalReviews">45</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201310090/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1"><I>Concurrent Programming in Java, 2nd Edition</I> surveys a wide field of research in parallelism and concurrency and shows how to do more with multithreading in Java with dozens of patterns and design tips. Written for the advanced Java developer, this book offers a comprehensive tour of leading-edge thinking about parallel coding processes.<p> Within the dozens of techniques and tips offered here, this book accomplishes at least two goals. First, it shows how concurrency is implemented by default within Java, with material on how built-in features (like the <I>synchronized</I> keyword and its memory model) can be expected to perform when dealing with multiple threads. Naturally, Java threads themselves are also covered, including priorities, scheduling, and the like. <p> Much of this book looks at ways to improve performance of concurrent code beyond the simple default strategies. After defining criteria for measuring concurrent code (such as safety and "liveness," a measure of running live threads effectively), the book presents dozens of techniques for letting threads work together safely. For the working Java programmer, coverage of patterns that have been implemented in the downloadable <I>java.concurrency</I> package will be the most immediately useful. (Within this nearly encyclopedic survey, short code snippets are used for every pattern and concept.) <p>Though theoretical at times, this book offers plenty of ideas and sample code to get you started thinking of ways to improve multithreaded code. <p> Impressively comprehensive, <I>Concurrent Programming in Java</I> offers a veritable bible of techniques for doing two things at once with threads in Java. It's a worthwhile guide to the state-of-the-art strategies for improving the performance of your Java threads. <I>--Richard Dragan</I><p> <B>Topics covered</B>: Threads and concurrency in Java, design considerations (safety, liveness, and performance), Before/After Patterns, layering, adapters, immutability and synchronization, deadlock, resource ordering, the Java Memory Model and concurrency, using the <I>java.concurrency</I> package, confinement, refactoring for concurrency, mutexes, read-write locks, recovering from failure, notifications, semaphores, latches, exchanges, transactions, one-way messages, worker threads, polling and event-driven I/O, parallelism techniques (fork/join, computation trees, and barriers), Communicating Sequential Processes (CSP).</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Will make you a better programmer, but not for beginners.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-10-30</span>
                    </div>
                    <span>This book is great but don't read it as your first introduction to Java threads.
<br />
<br />This book is not about Java threads per se, but more about design patterns and good object oriented programming practices as applied to concurrent programming (hence the title). Doug Lea is a university professor and this book has a very academic style, including a ton of references to an impressive array of concurrency and object oriented research. While this makes the material somewhat dense, it is very thorough and thankfully supplemented by actual code snippets (Doug Lea also makes significant contributions to the Java SDK and writes great code).
<br />
<br />Especially notable are the sections on semaphores and locking in general. Users of util.concurrent (which directly supplements this book), and even the new Java 5.0 concurrency utilities (which were written by Lea and company), will get tremendous value out of these chapters as the locking strategies form the backbone of the higher level classes found in those packages.
<br />
<br />For beginners, read "Java Thread Programming" by Paul Hyde, and then try this book.</span>
                  
                    <div class="CustomerReviewSummary">"This is Phylosophy of concurrency".</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>10</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-05</span>
                    </div>
                    <span>This is not "concurrent programming".This is only "philosophy of concurrency".I think so too.</span>
                  
                    <div class="CustomerReviewSummary">Excellent, Deep & Clear</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-15</span>
                    </div>
                    <span>Doug Lea does an excellent work.<br>On the one hand, he does much more than cover the API. He teaches you to *think* & understand multithreades. Example: he doesn't just state the java API won't let you modify a datastructure while iterating on it. He goes further to explain *how* java prevents this, and then details several methods to work around it. This particular example has greatly helped me with a project I'm on.<br>On the other hand, I found the explanations clear and easy to follow. Great book...</span>
                  
                    <div class="CustomerReviewSummary">Everything you need to know about concurrency in Java</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>9</span>
                      /
                      <span>10</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-04-11</span>
                    </div>
                    <span>Concurrent programming is fraught with peril.  It's much more complex than sequential programming in every meaningful way from specification to unit testing.  But if you want to do it right, meaning balancing liveness with safety for efficient and robust multi-threaded applications, you need Doug Lea's "Concurrent Programming in Java".  Especially if you need to design an extensible framework with concurrency; well-known examples of such frameworks incluce Swing, most of java.net, and just about every aspect of J2EE.<p>Lea provides an intense introduction at the level of an advanced undergraduate course.  It's fairly academic in tone, because he takes the time to provide thorough definitions and detailed examples.  As a former academic who now designs and programs for a living, this is just what I was looking for. But don't buy this book expecting a cookbook of code to cut and paste.  It's much more about providing you the fundamental tools to design your own concurrent classes, applications and frameworks.  <p>Lea presupposes the user is fluent in Java, knows a bit about concurrent programming patterns involving mutexes, semaphores, etc, and is familiar with the basic object-oriented design patterns.  If you're not up to speed in these areas, the path I followed was reading the following:<p>* Lewis's "Threads Primer" (warning: it's C/unix-based), <p>* Gosling and Joy's "Java Programming Language",<p>* Bloch's "Effective Java", and <p>* Gamma et al.'s "Design Patterns".<p>Even if you don't buy this book, consider using Lea's concurrent.util package available from his web site.  It provides solid implementations of everything from simple mutexes to concurrent read-single write wrappers for Java collections (Sun's own wrappers simply synchronize all methods, which suffers reduced liveness compared to CRSW designs).  And it's both elegantly designed and thoroughly javadoc-ed. <p>The first edition was great, and I've just finished reading the second edition cover to cover and it has taken my understanding of concurrent design to a new level.  Just be warned that this book's not for novices or hobbyists; it's for programmers who need to design the guts of concurrent systems the "right" way and then implement them in Java, especially for extensible frameworks.</span>
                  
                    <div class="CustomerReviewSummary">Good for experienced programmers, but not as intro</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>14</span>
                      /
                      <span>14</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-04-06</span>
                    </div>
                    <span>The book is a valuable resource for experienced programmers who are trying to write large, complex, real-life concurrent Java programs. The book discusses in depth many concurrency-specific issues you can run into, especially with Java. It gives tons of useful advice (in rather abstract form), both in text and in code (see the book's website for more complete examples). The book is full of useful frameworks and patterns. <p>However, it make take you a while to understand most of them. The author is fairly careless about the reader, and lets the reader do all the work. To understand one paragraph you may have to browse through 10 other pages, because that parargraph would reference them directly or indirectly. For example, to understand what is meant by "volatile" or "ThreadLocal", it helps to read several pages that precede these terms (and in other instances, you'd have to read several pages that follow). In other words, the book is not easily digestible, and many sections have to be chewed and re-chewed. The best way to approach the book would be to read it in "circles/spirals" and "in no particular order".<p>On the whole, the knowledge and understanding you get out of the book is worth the effort, but, I wish the author showed a bit more understanding for the reader. With a bit more work, the book could have been not only informative but also readable. For now, its readability is on par with a dictionary.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1893115100'>
                      Taming Java Threads
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 12 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0672315858'>
                      Java Thread Programming
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 25 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0764543857'>
                      Expert One-on-One J2EE Design and Development (Programmer to Programmer)
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 25 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0764558315'>
                      Expert One-on-One J2EE Development without EJB
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 21 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=193239415X'>
                      Hibernate in Action (In Action series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 22 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

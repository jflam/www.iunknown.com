
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Software Test Automation (ACM Press)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201331403" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxMzMxNDAzLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFNvZnR3YXJlIFRlc3QgQXV0b21hdGlvbiAoQUNNIFByZXNzKTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8TWFyayBGZXdzdGVyLCBEb3JvdGh5IEdyYWhhbTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDQ2Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMzEuMDE7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDQuNTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8Nzs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMjAxMzMxNDAzL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8QW1hem9uLmNvbTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8WW91IGNhbid0IGp1c3QgYnV5IGFuIGF1dG9tYXRlZCB0ZXN0aW5nIHRvb2wgYW5kIGV4cGVjdCB0byBpbXByb3ZlIHlvdXIgb3JnYW5pemF0aW9uJ3MgdGVzdGluZyBwcm9jZXNzIHdpdGhvdXQgc29tZSByZWFsIGVmZm9ydCwgYXQgbGVhc3QgdGhhdCBpcyB3aGF0IHRoZSBhdXRob3JzIG9mIFw8SVw+U29mdHdhcmUgVGVzdCBBdXRvbWF0aW9uXDwvSVw+IGFyZ3VlLiBXcml0dGVuIGZvciBhbnkgdGVzdCBtYW5hZ2VyIG9yIGVuZ2luZWVyLCB0aGlzIHByYWN0aWNhbC1taW5kZWQgZ3VpZGUgc2hvd3MgdGhlIHJpZ2h0IHdheSB0byBhdXRvbWF0ZSB0ZXN0aW5nIHRvIGJyaW5nIGRvd24gY29zdHMgYW5kIGltcHJvdmUgb3ZlcmFsbCBzb2Z0d2FyZSBxdWFsaXR5Llw8cFw+IE1vc3QgaW1wb3J0YW50bHksIHRoaXMgYm9vayBkZWJ1bmtzIHRoZSBteXRoIHRoYXQgdGVzdGluZyB0b29scyBhbG9uZSB3aWxsIGF1dG9tYXRlIHRoZSB0ZXN0aW5nIHByb2Nlc3Mgc3VjY2Vzc2Z1bGx5LiBJdCBkb2VzIGEgZ29vZCBqb2Igb2Ygc2hvd2luZyB0aGUgbGltaXRhdGlvbnMgb2YgdG9kYXkncyB0ZXN0aW5nIHRvb2xzLiBJbnN0ZWFkIG9mIHByb3ZpZGluZyBxdWljayBmaXhlcywgdGhlIGF1dGhvcnMgc2hvdyB0aGF0IHdpdGggcHJvcGVyIHBsYW5uaW5nLCB5b3UgY2FuIGRlc2lnbiBhbmQgcmV1c2UgdGVzdCBzY3JpcHRzIGluIGFkZGl0aW9uIHRvIGF1dG9tYXRpbmcgbWFueSBhc3BlY3RzIG9mIHRoZSB0ZXN0aW5nIHByb2Nlc3MgKHN1Y2ggYXMgY29tcGFyaW5nIGFjdHVhbCBhbmQgZXhwZWN0ZWQgcmVzdWx0cykuIFdpdGggY2hhcHRlcnMgb24gZGVzaWduaW5nIHRlc3Qgc2NyaXB0cywgY3JlYXRpbmcgYSBcPElcPnRlc3RpbmcgYXJjaGl0ZWN0dXJlXDwvSVw+IHRoYXQgd2lsbCBhbGxvdyB5b3UgdG8gcmV1c2UgdGVzdCBjYXNlcywgYW5kIGV2ZW4gZG9jdW1lbnRhdGlvbiBvbiBjaG9vc2luZyB0aGUgcmlnaHQgdGVzdGluZyB0b29sIGZvciB5b3VyIG5lZWRzLCB0aGlzIGJvb2sgaXMgZmlsbGVkIHdpdGggcGxlbnR5IG9mIG51dHMtYW5kLWJvbHRzIGFkdmljZS4gXDxwXD4gTGF0ZXIgdGhlIGF1dGhvcnMgZXhwbGFpbiBzb2Z0d2FyZSBtZXRyaWNzIGZvciB0cmFja2luZyBkZWZlY3RzIGFuZCBob3cgdG8gcGhhc2UgaW4gYXV0b21hdGVkIHRlc3RpbmcgZm9yIHRoZSByZWFsLXdvcmxkIG9yZ2FuaXphdGlvbiAod2l0aCBhIGdvb2QgZXllIGZvciB5b3VyIHNob3AncyByZXR1cm4gb24gaW52ZXN0bWVudCkuIFRoZSBib29rIGNsb3NlcyB3aXRoIG92ZXIgYSBkb3plbiBjYXNlIHN0dWRpZXMgZnJvbSB0aGUgZmllbGQsIGluIHdoaWNoIHRlc3RpbmcgcHJvZmVzc2lvbmFscyBmcm9tIGxhcmdlIGNvbXBhbmllcyAoaW5jbHVkaW5nIE1pY3Jvc29mdCkgcmVsYXRlIHRoZWlyIHN1Y2Nlc3NlcyAoYW5kIGZhaWx1cmVzKSB3aXRoIHJlYWwtd29ybGQgdGVzdCBhdXRvbWF0aW9uLiBBY2Nlc3NpYmx5IHdyaXR0ZW4gYW5kIGZpbGxlZCB3aXRoIHJlYWwtd29ybGQgZXhwZXJ0aXNlLCBcPElcPlNvZnR3YXJlIFRlc3QgQXV0b21hdGlvblw8L0lcPiBwcm92aWRlcyBhIHdvcnRoeSByZXNvdXJjZSBmb3IgYW55IHRlc3QgZW5naW5lZXIgb24gdGhlIGVmZmVjdGl2ZSBpbXBsZW1lbnRhdGlvbiBvZiBhdXRvbWF0ZWQgc29mdHdhcmUgdGVzdGluZy4gXDxJXD4tLVJpY2hhcmQgRHJhZ2FuXDwvSVw+XDxwXD4gXDxCXD5Ub3BpY3MgY292ZXJlZFw8L0JcPjogdGVzdCBhdXRvbWF0aW9uIGJhc2ljcywgdGhlIFYtbW9kZWwgZm9yIHRlc3RpbmcsIHRlc3RpbmcgdG9vbCBsaW1pdGF0aW9ucywgc2NyaXB0cywgYXV0b21hdGluZyByZXN1bHQgdmVyaWZpY2F0aW9uIGFuZCBjb21wYXJpc29uLCBmaWx0ZXJzLCB0ZXN0aW5nIGFyY2hpdGVjdHVyZSwgcHJlLSBhbmQgcG9zdC1wcm9jZXNzaW5nLCBpbXByb3ZpbmcgdGVzdCBtYWludGFpbmFiaWxpdHksIHRlc3RpbmcgbWV0cmljcywgUk9JLCBjaG9vc2luZyBhIHRlc3QgdG9vbCwgaW1wbGVtZW50aW5nIGF1dG9tYXRlZCB0ZXN0aW5nIHdpdGhpbiBvcmdhbml6YXRpb25zLCBjYXNlIHN0dWRpZXMuOz4+Oz47Oz47Pj47Pj47Pj47PkINiqOEr8+/7ne98IN96GTAYNJi" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201331403.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Software Test Automation (ACM Press)</span>
        <div class="ItemDetail">By
          <span id="Authors">Mark Fewster, Dorothy Graham</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$46.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$31.01</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">7</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201331403/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1">You can't just buy an automated testing tool and expect to improve your organization's testing process without some real effort, at least that is what the authors of <I>Software Test Automation</I> argue. Written for any test manager or engineer, this practical-minded guide shows the right way to automate testing to bring down costs and improve overall software quality.<p> Most importantly, this book debunks the myth that testing tools alone will automate the testing process successfully. It does a good job of showing the limitations of today's testing tools. Instead of providing quick fixes, the authors show that with proper planning, you can design and reuse test scripts in addition to automating many aspects of the testing process (such as comparing actual and expected results). With chapters on designing test scripts, creating a <I>testing architecture</I> that will allow you to reuse test cases, and even documentation on choosing the right testing tool for your needs, this book is filled with plenty of nuts-and-bolts advice. <p> Later the authors explain software metrics for tracking defects and how to phase in automated testing for the real-world organization (with a good eye for your shop's return on investment). The book closes with over a dozen case studies from the field, in which testing professionals from large companies (including Microsoft) relate their successes (and failures) with real-world test automation. Accessibly written and filled with real-world expertise, <I>Software Test Automation</I> provides a worthy resource for any test engineer on the effective implementation of automated software testing. <I>--Richard Dragan</I><p> <B>Topics covered</B>: test automation basics, the V-model for testing, testing tool limitations, scripts, automating result verification and comparison, filters, testing architecture, pre- and post-processing, improving test maintainability, testing metrics, ROI, choosing a test tool, implementing automated testing within organizations, case studies.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Very Practical book on Automation</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-10</span>
                    </div>
                    <span>Hi<br>This book deals with various issues of Automation such<br>as basic concepts, impelementation details. It has various<br>case studies also. A must for those who are considering<br>for testing automation.<br>It should have more coverage for data driven automation.<br>[Niteen]</span>
                  
                    <div class="CustomerReviewSummary">Solid book, reinforcing good practices</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-06-22</span>
                    </div>
                    <span>I found this book to be a solid roundup of good practices within automated software testing.<p>It doesn't provide any startling new techniques, but makes a good job of explaining the common pitfalls that are usually encountered when trying to automate testcases, and provides good advice for how to get the best out of commercial tools such as the one available from julianjones.com.<p>The writing style can be a bit dry, and there are times when the thought of reading 500 pages can be a bit daunting.<p>All things considered, highly recommended.</span>
                  
                    <div class="CustomerReviewSummary">A deep, practical treatment</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2000-07-21</span>
                    </div>
                    <span>I bought this book because I was new to software quality assurance, yet placed in charge of an automated testing effort. This book clearly encapsulates years of experience -- you can almost feel the pain the authors must have experienced as they learned these lessons the hard way! I have already avoided making a number of mistakes.<p>The authors organized the material effectively and wrote it in a way that promotes skimming and scanning. By reading the first few sentences of a section, you will know whether you are interested in the section. If you're not interested, skip to the next section. The authors even occasionally tell you what sections you can skip should that material not apply to your situation.<p>These skimming and scanning aids are important because the text itself is frequently unexciting and cumbersome. There's not much to do about the former -- nuts and bolts are hard to make exciting. I hope, however, that the authors will consider a good edit for more vigorous writing should they update this book for a second edition.</span>
                  
                    <div class="CustomerReviewSummary">This is simply the Very Best Book.   Period.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>27</span>
                      /
                      <span>37</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2000-06-13</span>
                    </div>
                    <span>Anyone who claims to be a Principle or Senior Software QA Engineer, or a QA Automation Engineer, but has never read or used this book should be convicted of professional malpractice. <p>Absolutely the best current  reference book on why and how to analyze, architect, design and construct  verification and validation vehicles that dramatically improve the  probability of software defect detection - both manually and through later  automation. Said vehicles can be easily audited and inspected to improve  positive and negative software behavior coverage and equivalence classes.   But most important, this great book describes how intelligently devised  manual vehicles can be used to automatically drive future software builds  and release regression assessments (to achieve automated regression  testing).<p>Describes everything that the software test tool vendors refuse  to tell buyers, but what every software QA professional must know (in spite  of the vendors).<p>This book is simply a breath of fresh air. <p>It is a  virtual bible to positive and negative software behavior verification and  validation. My only displeasure is that the authors choose to continue to  use obsolete terminology: specifically testing. Software testing is not  what this book is about. This book is about how to create and achieve  highly effective software behavior verification and validation. <p>Software  QA professionals must clearly move way beyond ad hoc testing, because the  need today is far greater than ancient testing paradigms. The need is for  intelligently designed, architected, constructed frameworks that enable  software behavior and performance verification and validation, whether  performed manually, automatically, or through agents such as monkeys and  oracles.</span>
                  
                    <div class="CustomerReviewSummary">A useful book, not only for automated testing</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>77</span>
                      /
                      <span>77</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2000-03-03</span>
                    </div>
                    <span>Book review<p>Mark Fewster and Dorothy Graham Software Test Automation Addison Wesley, 1999 ISBN 0-201-33140-3<p>A book for beginners in test automation. Everything you always wanted to know about test automation, but  never dared to ask, and the tool suppliers probably wonÕt tell you.<p>This  book is a must for every serious test manager. It is not only about  automation. It is really about test architecture and test suite design.  Most other books are about how to design test cases, or how to manage  testing. This book is about designing the whole stuff into such a form that  you can maintain it, that it will survice maintenance, and that you can  automate it. The background is test automation. Many examples show the  testware design pitfalls in building automated tests. But it hit me how  useful the book is to any testing effort, even manual testing.<p>The book  has two parts. Part 1 is a detailed guide to designing automated (or not  totally automated) tests. Questions of selecting and introducing test tools  are also discussed. Part 2 contains 15 guest chapters, written by people  who have experience in test automation, sharing their experience. These  chapters vary in style and are rather short.<p>There is a readers guide, It  shows what te read if you have different intentions and know more or less  from before.<p>Overview of part 1, the Test Automation Design  Part.<p>Chapter 1 gives the context of test automation. It places the  different tools into a test model and warns us of naive belief in and  application of automation.<p>Chapter 2 shows the results of capture and  playback. At the end of this chapter, the reader will have understood the  limited scope of application of this. Problems with script robustness and  automatic results comparison are shown.<p>From chapter 3, the focus changes  to scripting. The chapter presents the five levels of generating test  scripts, from linear through structures, shared, data-driven to keyword  based. The reader will soon see that investment in scripting can pay off.  The benefits of data driven or keyword driven testing are clearly shown.  The only negative comment is that keyword driven testing, the most advanced  and modern approach, is not shown to the same detail as the other  techniques. However, these techniques are presented by authors of  methodologies and real users in chapters 22 to 25.<p>Chapter 4 shows the  practical details of automated verification of test results. There are lots  of methods and pitfalls. The main possibilities are dynamic verification  (during running the tests) and static verification (afterwards. The other  option is how much to verify. In principle, everything may be interesting.  But this costs both work time, maintenance effort, storage, and makes tests  less robust and more proine to maintenance. An interesting alternative is  to design a broad smoke test where as much as possible is captures and  verified, and then a large main test, where every test only vewwrifies its  main objective. The authors also show different methods for comparing  ÒexoticÓ output. One objection is the shallow section on testing embedded  systems. At least for telecom systems, but also other ÒstandardÓ technical  interfaces, lots of commercial tools exist that can be used to verify  output in a problem oriented and intelligent way. There should also be some  more mention about verifying time correctness of system outputs. There  might also be some more focus on the use of check sums, statistical  selection out of large amounts of data etc.<p>Chapter 5 shows a possible  architecture of the test set. This chapter applies just as well to manual  as to automated testing. It fills a hole in IEEE Standard 829, namely  proposition as to how to structure the detailed test material, the scripts,  input data, utilities, expected results, and actual results, togehter with  all other information. The main idea behind the proposed directory  structure and naming conventions is to make it easy to maintain and find  through. It should also be easry to copy any needed test sets to a platform  where they are needed.<p>There could be more different approaches,  naturally, but the presented approach would work well and scale up. There  could also be a cross reference to what IEEE 829 contains, and some example  about how to use internet technology to document test structure, but all  this is of minor disadvantage. This chapter is valuable to anyone who needs  to structure test material.<p>Chapter 5 and 6 are a bit special, as they  are as useful for automated, as for nonautomated testing. They concern the  structure of the testing material, all the invoilved files, and the  preprocessing and postprocessing.  These chapters fill a hole in IEEE  Standard 829, where no consideration is given to the practical details of  building up and maintaining test material. A tool independent structure is  given, and advice about how to connect the material with tools. Chapter 6  is an eye opener to the naive user of test automation tools: Preprocessing  and postprocessing tasks must be automated, but are not in the scope of the  commercial tools.<p>Chapter 7 presents other issues about test suite  maintenance and maintainability. This is somehow good old material and  knowledge. It one uses the good old rules for structured design and  programing, and scheduled cleaning up of programs, the same could be  applied to test amintenance and test material standards. Chapter 7 serves  as a useful reminder about what you think you already knew, but maybe  forgot in the concrete case.<p>Chapter 8 gives ideas about how to measure  both testing and automated testing. For a metrics fan, this chapter is too  short. It only outlines lots of examples of what can be done and why, but  does not go into detail. On the other hand, there is enough literature  elsewhere about this. Many of the proposed measurements are not very  precise, but good advice to Çthe poor manÈ who has not measured much and  has to fight for any resources to measure anything. The idea is: Anything  which is of interest can be made measurable in some way, maybe not the  ideal way and maybe not precisely. But any measurement is better than none.  The chapter does a useful job in that respect.<p>Chapter 9 is a collection  of points that have no natural place elsewhere. It includes short  discussions on what to automate and what not, how to select tests, the  order of running them, tricks to minimize time for failure analysis,  deciding the status of a test. Most of the points are well known and not  discussed in much detail. A good section is about test status, where the  authors present some good ideas about how to handle known bugs in the  products that are not going to be fixed for a while (and failed tests for  such bugs).<p>Chapter 10 and 11 concern selecting and introducing a test  tool. Much of these chapters are general and could be read by anyone having  to select and implement any software tool. What I am missing here is more  specific information about concrete test automation tool features to ask  for. The general questions to tool vendors are useful, but more concrete  advice special for test automation tools is lacking. A few concrete  references to test tool functionality overviews would have been helpful  here.<p>In all, I found part 1 very useful, and well worth the time spent  reading.<p>Part 2 is different. There are case studies about successful  introduction of test automation, the problems solved, the benfits achieved,  and the difficulties met. Chapter 12 to 18, as well as 20, 21, 23 and 25 to  28 are about successful cases. Most of these are short and regrettably  general in nature. Not easy to read concrete advice for your own situation.  The most interesting one was chapter 28, describing seveal unexpected uses  of automated tests at Microsoft. Chapter 19 is a study about test  automation failures, and this is useful. Probably it is always more easy to  learn from failures. Chapters 20 and 22 are very special, they both  describe keyword driven test automation design methods. Chapter 20 is about  the action word method, now called TestFrame, by Hans Buwalda from CMG,  whereas chapter 22 is about RadSTAR. Both chapters are useful, as they  describe the most modern approach to maintainable test design. However,  chapter 22 could be more detailed.<p>In all, I found less use for part 2 of  the book, probably because I have heard some of the stories before, at  conferences. It may be different to a person new to the field. I was  missing more case studies about atuomated tests of other than business  systems. There is a lot of automation to be done in this field, and very  often there is no alternaitve to automated testing.<p>In all: Buy the book.  In the worst case, chapters 5 and 6 only create benetitfs enough to make it  worth the money.<p>Hans Schaefer</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471223980'>
                      Managing the Testing Process: Practical Tools and Techniques for Managing Hardware and Software Testing, 2nd Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 15 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0130084689'>
                      Just Enough Software Test Automation
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 7 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471358460'>
                      Testing Computer Software, 2nd Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 29 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471081124'>
                      Lessons Learned in Software Testing
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 23 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201432870'>
                      Automated Software Testing: Introduction, Management, and Performance
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 39 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

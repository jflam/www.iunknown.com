
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Writing Solid Code: Microsoft's Techniques for Developing Bug-Free C Programs
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=1556155514" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8xNTU2MTU1NTE0LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFdyaXRpbmcgU29saWQgQ29kZTogTWljcm9zb2Z0J3MgVGVjaG5pcXVlcyBmb3IgRGV2ZWxvcGluZyBCdWctRnJlZSBDIFByb2dyYW1zOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxTdGV2ZSBNYWd1aXJlOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMjQuOTU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPE4vQTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8My42Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwzNjs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8xNTU2MTU1NTE0L3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8QW1hem9uLmNvbTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8QW55IHByb2dyYW1tZXIgd29ydGggdGhlaXIgc2lsaWNvbiBrbm93cyB0aGF0IGl0IGlzIHdpc2VyIHRvIGludmVzdCB0aW1lIHByZXZlbnRpbmcgYnVncyBmcm9tIGhhdGNoaW5nIHRoYW4gdG8gdHJ5IHRvIGV4dGVybWluYXRlIHRoZW0gYWZ0ZXJ3YXJkcy4gQW5kIHRoaXMgaXMgb25lIG9mIHRoZSBiZXN0IGJvb2tzIGZvciBkZXZlbG9waW5nIGEgcHJvYWN0aXZlIGF0dGl0dWRlIHRvd2FyZHMgZWxlY3Ryb25pYyBlbnRvbW9sb2d5LiBGb2xsb3cgTWFndWlyZSdzIGFkdmljZSwgYW5kIHlvdXIgdGVzdGVycywgc3VwZXJ2aXNvcnMgYW5kIGN1c3RvbWVycyB3aWxsIGxvdmUgeW91LiBSZWNvbW1lbmRlZC47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+5BScvAiY6JqrHKHPa/AfqIDLwjI=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/1556155514.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Writing Solid Code: Microsoft's Techniques for Developing Bug-Free C Programs</span>
        <div class="ItemDetail">By
          <span id="Authors">Steve Maguire</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$24.95</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">N/A</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">3.6</span>
          based on
          <span id="TotalReviews">36</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/1556155514/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1">Any programmer worth their silicon knows that it is wiser to invest time preventing bugs from hatching than to try to exterminate them afterwards. And this is one of the best books for developing a proactive attitude towards electronic entomology. Follow Maguire's advice, and your testers, supervisors and customers will love you. Recommended.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Overall excellent book, with a few flaws</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-04-27</span>
                    </div>
                    <span>This book in many ways changed the way I approached programming. In particular, the perspective that it took towards designing and implementing programs in a way such that bugs are automatically detected (preferably by the compiler, or by other tools) has proved invaluable to me in my later experience as a software engineer. Other advice (use some form of 'assert' heavily, deliberately write 'brittle' code that will break loudly as soon as the slightest thing goes wrong, so errors aren't hidden) was similarly insightful, if occasionally a bit counterintuitive.<P>On the other hand, the book's source language (the C programming language, as used by Microsoft tools) is increasingly outdated. This might prevent some people from appreciating the finer insights of this book. Also, the author recommends use of Hungarian notation, which I despise in a strongly typed language. (My recommendation: use PC-Lint, with strong types. Both more powerful, and more readable.) Still, the overall philosophy of the book is very powerful, and the concepts and techniques that it discusses can easily be applied to other programming languages and other software development efforts. I was writing in C++ when I read the book, and I currently program in Java, but I still apply the lessons I learned from this book.<P>This book is certainly not the ONLY way to write solid code (and I have found improvements on a number of techniques discussed in the book), but it does sketch out a fairly workable process which if followed would produce a quality product. Most importantly, the PHILOSOPHY that the author uses to approach writing bug-resistant programs is quite powerful.<P>Note that this is a book on software implementation, not software design (except in the small scale). Large-scale design is a whole separate issue which this book really does not address much.</span>
                  
                    <div class="CustomerReviewSummary">Flaws and outdated advice detract from otherwise good advice</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-01-15</span>
                    </div>
                    <span>Writing Solid Code was first published over eight years ago and concerns a subject, development in C, that hasn't gotten much press lately. In an era where it seems like everything is OO and developed in C++ or Java, the simple truth is C and non-OO development still has a strong place in our industry. This may explain why a book such as this continues to draw attention.<BR> <BR> The writing has a feel of the old C classics such as The Elements of Programming Style (Kernighan, Plauger) which also offered lots of advice with little or no formal reasoning or literature citations to back up that advice. As a consequence, the text has a personal, easy flow but contains some recommendations which are questionable at best.<BR> <BR> First, I should outline what is right with this work. There are many nuggets of wisdom that seem obvious if not uncontroversial: enable all compiler warnings, use lint, use assertions, and don't wait until you have a bug to step through your code. Enough of these reasonable guidelines appear in the text to lull the reader into a false sense of security with the remainder of the work.<BR> <BR> What makes this book dangerous for new developers is the number of points that are either marginal in value or just plain wrong. While it is impossible to give a comprehensive list in a brief review, here is a few: arguments against defensive programming, don't ship the debug version, avoid boolean arguments, and don't clean up code unless the clean-up is critical to the product's success.<BR> <BR> Finally, the recommendation "Make it fast, even if it is not guaranteed to be portable" flys in the face of one of the biggest success stories mentioned early in the book: getting Microsoft to build the Macintosh version directly from the newly created Windows source and sharing 80% of the code (with the accompanying savings) in the process. The truth is, a typical piece of software's life is significantly longer than the hardware it was written for and, therefore, will be ported.<BR> <BR> It is possible to write C code so it is reasonably portable, readable, and "modern in every way." In the book's defense, this wasn't strictly the purpose and scope of the book. Instead, the book was "Microsoft's techniques for developing bug-free C programs." In the early 1990's, Microsoft had to deliver software on slow processors with a segmented memory model. I got the sense that some of the recommendations in this book were due to those constraints (which are no longer present--even on Windows machines at this point).<BR> <BR> Until and unless MS Press updates the work to relax some of the recommendations obviously aimed at managing primative hardware and immature software I can't recommend this book. If, however, such a revision was made that included those changes and the additions of such notions as Refactoring (Fowler) this could be a valuable resource for C programmers or those who which to develop C coding standards.</span>
                  
                    <div class="CustomerReviewSummary">Please ignore previous negative reviews</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-11-22</span>
                    </div>
                    <span>I was shocked to see this book get some negative reviews. Those that blasted Microsoft missed the point. This book provides invaluable advice in a quick read. For example, "If you have to look it up, the code is not obvious," or, "If you find yourself designing a function so that it returns an error, stop and ask yourself whether there's any way you can redfined the function to eliminate the error condition." This is the book that convinced me to single-step all my code. The heuristics on proactive bug prevention, which are summarized in the appendix by the way, will save your team time and let you move on to adding features rather than fighting fires.</span>
                  
                    <div class="CustomerReviewSummary">Just look at the publishing date.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-09-23</span>
                    </div>
                    <span>You are looking at a 10-year-old book with a bunch of green screens on the cover. What more can I say. I bought it in preparation for an interview with Microsoft. I did not find it helpful, except for a few pages that do help understand Microsoft culture (but you can learn much more about that on the net). <P>So many new things have appeared (and/or became popular) since the book has been published. OOAD, C++, Java, RUP, XP, design patterns, to name a few. It puzzles me that Microsoft still recommends this book.</span>
                  
                    <div class="CustomerReviewSummary">Should be mandatory for every professional programmer</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-07-23</span>
                    </div>
                    <span>This is one of the best books on programming ever written. Maguire concentrates on how to eradicate bugs early in the cycle. At first what he says seems so simple. But these ideas are so powerful, and so well presented, that I'd give a copy to every programmer I know if I could afford to.<P>Don't worry that his examples are in C. The ideas transcend the source language. If half of the programmers followed half of his suggestions half of the time, the software industry would undergo a revolution in quality. There is no silver bullet, but these suggestions are so practical. It's just a matter of adopting a few good habbits.<P>This book will be a classic. Scratch that. It *is* a classic.<P>If you're a programmer, it belongs on your shelf beside _Programming Pearls_, _Code Complete_, and Knuth.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735617228'>
                      Writing Secure Code, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 31 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556159005'>
                      Rapid Development
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.8 based on 89 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556156502'>
                      Debugging the Development Process: Practical Strategies for Staying Focused, Hitting Ship Dates, and Building Solid Teams
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.3 based on 24 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735619670'>
                      Code Complete, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 3 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556154844'>
                      Code Complete
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.6 based on 135 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

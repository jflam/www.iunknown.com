<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />

<title>iunknown.com: Comment on Foiled by csc.exe</title>

<link rel="stylesheet" href="http://www.iunknown.com/styles-site.css" type="text/css" />

<script type="text/javascript" language="javascript">
<!--

var HOST = 'www.iunknown.com';

// Copyright (c) 1996-1997 Athenia Associates.
// http://www.webreference.com/js/
// License is granted if and only if this entire
// copyright notice is included. By Tomer Shiran.

function setCookie (name, value, expires, path, domain, secure) {
    var curCookie = name + "=" + escape(value) + ((expires) ? "; expires=" + expires.toGMTString() : "") + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + ((secure) ? "; secure" : "");
    document.cookie = curCookie;
}

function getCookie (name) {
    var prefix = name + '=';
    var c = document.cookie;
    var nullstring = '';
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return nullstring;
    var cookieEndIndex = c.indexOf(";", cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

function deleteCookie (name, path, domain) {
    if (getCookie(name))
        document.cookie = name + "=" + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + "; expires=Thu, 01-Jan-70 00:00:01 GMT";
}

function fixDate (date) {
    var base = new Date(0);
    var skew = base.getTime();
    if (skew > 0)
        date.setTime(date.getTime() - skew);
}

function rememberMe (f) {
    var now = new Date();
    fixDate(now);
    now.setTime(now.getTime() + 365 * 24 * 60 * 60 * 1000);
    setCookie('mtcmtauth', f.author.value, now, '', HOST, '');
    setCookie('mtcmtmail', f.email.value, now, '', HOST, '');
    setCookie('mtcmthome', f.url.value, now, '', HOST, '');
}

function forgetMe (f) {
    deleteCookie('mtcmtmail', '', HOST);
    deleteCookie('mtcmthome', '', HOST);
    deleteCookie('mtcmtauth', '', HOST);
    f.email.value = '';
    f.author.value = '';
    f.url.value = '';
}

//-->
</script>
</head>

<body>

<div id="banner-commentspop">
iunknown.com
</div>

<div class="blog">

<div class="comments-head">Comments: Foiled by csc.exe</div>


<div class="comments-body">
<p>"I'll have to hunt around a bit more in System.Web.dll to make sure that this isn't in fact the case." -- I think you'll find it *is* the case, if you keep an eye on the processes you see csc.exe being spawned. Using SysInternals' process monitor it's more noticeable. Also if you look in Temporary ASP.NET Files you can see the *.cmdline files that are passed to csc.exe using the "@" command-line option.</p>
<span class="comments-post">Posted by Duncan Smart at July 22, 2003 03:45 PM</span>
</div>
<div class="comments-body">
<p>Hey John,<br />
I just saw this on the DOTNET-LANGUAGE-DEVS@DISCUSS.MICROSOFT.COM list today. The quote is from larsberg@MICROSOFT.COM. It kinda looks like Cscomp.dll isn't going to be supported going forward and that they don't consider the process creation cost significant. <br />
Incidently with NAnt now supporting targetting multiple framework versions its easier to spawn different csc.exe's then it is to load and unload   the different versions of Cscomp.dll to ensure that the currect version is run. </p>

<p>"This is from our C# compiler guru, Grant Richins:<br />
Cscomp.dll is loaded in-process for the IDE scenario.  He is correct<br />
that avoiding the call to CreateProcess would save some time, but by<br />
running the compiler out-of-process, ASP.NET is able to isolate itself<br />
even better by giving the compiler process very few privileges (at one<br />
point the compiler couldn't even write to the temp directory!).  Also<br />
any exception that happens in the compiler is completely isolated to the<br />
compiler process and has no way to bring down all of ASP.NET.</p>

<p>We had considered exposing a managed in-process C# compiler for ASP.NET<br />
and the CodeDom.  In fact we even wrote the code (see<br />
Microsoft.CSharp.Compiler), but when ASP.NET and the CodeDom decided not<br />
to use it, we decided to deprecate it.  Its only real savings (besides<br />
the unneeded CreateProcess) was that it could compile source code passed<br />
in as strings and thus not cause file I/O, but I'm not sure if that<br />
savings wasn't swallowed up by the cost of interop.  We wanted to remove<br />
it entirely because we didn't have good test coverage for it, but too<br />
late in our ship cycle we discovered some other teams had introduced<br />
dependencies on this interface unbeknownst to us.  So we recommend<br />
customers don't use it because we are planning on ripping it out in a<br />
few versions.</p>

<p>--Grant "<br />
</p>
<span class="comments-post">Posted by <a href="mailto&#58;ianm&#64;activestate&#46;com">Ian MacLean</a> at July 23, 2003 07:49 AM</span>
</div>




</div>

</body>
</html>
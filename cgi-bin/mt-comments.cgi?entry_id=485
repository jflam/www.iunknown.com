<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />

<title>iunknown.com: Comment on Emulating String.Format() semantics in Python</title>

<link rel="stylesheet" href="http://www.iunknown.com/styles-site.css" type="text/css" />

<script type="text/javascript" language="javascript">
<!--

var HOST = 'www.iunknown.com';

// Copyright (c) 1996-1997 Athenia Associates.
// http://www.webreference.com/js/
// License is granted if and only if this entire
// copyright notice is included. By Tomer Shiran.

function setCookie (name, value, expires, path, domain, secure) {
    var curCookie = name + "=" + escape(value) + ((expires) ? "; expires=" + expires.toGMTString() : "") + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + ((secure) ? "; secure" : "");
    document.cookie = curCookie;
}

function getCookie (name) {
    var prefix = name + '=';
    var c = document.cookie;
    var nullstring = '';
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return nullstring;
    var cookieEndIndex = c.indexOf(";", cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

function deleteCookie (name, path, domain) {
    if (getCookie(name))
        document.cookie = name + "=" + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + "; expires=Thu, 01-Jan-70 00:00:01 GMT";
}

function fixDate (date) {
    var base = new Date(0);
    var skew = base.getTime();
    if (skew > 0)
        date.setTime(date.getTime() - skew);
}

function rememberMe (f) {
    var now = new Date();
    fixDate(now);
    now.setTime(now.getTime() + 365 * 24 * 60 * 60 * 1000);
    setCookie('mtcmtauth', f.author.value, now, '', HOST, '');
    setCookie('mtcmtmail', f.email.value, now, '', HOST, '');
    setCookie('mtcmthome', f.url.value, now, '', HOST, '');
}

function forgetMe (f) {
    deleteCookie('mtcmtmail', '', HOST);
    deleteCookie('mtcmthome', '', HOST);
    deleteCookie('mtcmtauth', '', HOST);
    f.email.value = '';
    f.author.value = '';
    f.url.value = '';
}

//-->
</script>
</head>

<body>

<div id="banner-commentspop">
iunknown.com
</div>

<div class="blog">

<div class="comments-head">Comments: Emulating String.Format() semantics in Python</div>


<div class="comments-body">
<p>I hate to tell you this, but there's an even easier way. While python doesn't have positional replacements, it does have NAMED replacements.</p>

<p>You're already aware of the '%' operator when applied to strings. In addition to using tuples as the right hand side of the expression, you can also use a dictionary. In your substitution, instead of saying '%s', say '%(name)s', and python will use name as the key in the dictionary.</p>

<p>For example:</p>

<p>>>> "Hello %(name)s, isn't it a %(description)s day?" % { "name" : "Chris", "description" : "wonderful" }<br />
"Hello Chris, isn't it a wonderful day?"<br />
>>></p>

<p>So your regex stuff, while very educational, is kinda overkill. But that happens to everyone when learning Python.<br />
</p>
<span class="comments-post">Posted by <a href="mailto&#58;cct&#64;tavaresstudios&#46;com">Chris Tavares</a> at September 22, 2004 01:34 PM</span>
</div>
<div class="comments-body">
<p>One other trick you can use to get positional formatting is the locals() function, e.g.</p>

<p>>>> foo = 1<br />
>>> bar = 2<br />
>>> print "%(foo)d %(bar)d" % locals()<br />
1 2<br />
>>> print "%(bar)d %(foo)d %(bar)s" % locals()<br />
2 1 2</p>
<span class="comments-post">Posted by <a target="_blank" href="http://eighty-twenty.net">Gordon Weakliem</a> at September 22, 2004 01:47 PM</span>
</div>
<div class="comments-body">
<p>Gordon: thanks for the @locals()@ tip. </p>

<p>Chris: I'm not sure that your solution solves my problem - which isn't purely just about positional identifiers. I'm trying to build a simple templating engine that maps regex match groups to template parameters.</p>

<p>Positional identifiers lets me keep the syntax simple. Even if I did use named identifiers, I don't think I could avoid my regex trick since I need to correlate parameters in two different strings.</p>

<p>Or am I missing something here?</p>
<span class="comments-post">Posted by <a target="_blank" href="http://www.iunknown.com">John Lam</a> at September 22, 2004 02:18 PM</span>
</div>
<div class="comments-body">
<p>Ahh, I see your actual task is a lot more than just positional replacement. I'd still tend towards using named groups in the regex (using the (?...) syntax) and named replacement positions in the string template, because I find they make life easier the long run.</p>

<p>I'll have to cogitate a little more before I post another reponse.<br />
</p>
<span class="comments-post">Posted by  at September 22, 2004 03:16 PM</span>
</div>
<div class="comments-body">
<p>Argh, that last one was me. And the named group syntax in regexes is actually (?P&lt;name&gt;...).<br />
</p>
<span class="comments-post">Posted by <a href="mailto&#58;cct&#64;tavaresstudios&#46;com">Chris Tavares</a> at September 22, 2004 03:17 PM</span>
</div>



<div class="comments-head">Post a comment</div>

<div class="comments-body">
<form method="post" action="http://www.iunknown.com/cgi-bin/mt-comments.cgi" name="comments_form" onsubmit="if (this.bakecookie[0].checked) rememberMe(this)">
<input type="hidden" name="entry_id" value="485" />

<div style="width:180px; padding-right:15px; margin-right:15px; float:left; text-align:left; border-right:1px dotted #bbb;">
	<label for="author">Name:</label><br />
	<input tabindex="1" id="author" name="author" /><br /><br />

	<label for="email">Email Address:</label><br />
	<input tabindex="2" id="email" name="email" /><br /><br />

	<label for="url">URL:</label><br />
	<input tabindex="3" id="url" name="url" /><br /><br />
</div>

Remember personal info?<br />
<input type="radio" id="bakecookie" name="bakecookie" /><label for="bakecookie">Yes</label><input type="radio" id="forget" name="bakecookie" onclick="forgetMe(this.form)" value="Forget Info" style="margin-left: 15px;" /><label for="forget">No</label><br style="clear: both;" />

<label for="text">Comments:</label><br />
<textarea tabindex="4" id="text" name="text" rows="10" cols="50"></textarea><br /><br />

<input type="button" onclick="window.close()" value="&nbsp;Cancel&nbsp;" />
<input type="submit" name="preview" value="&nbsp;Preview&nbsp;" />
<input style="font-weight: bold;" type="submit" name="post" value="&nbsp;Post&nbsp;" /><br /><br />

</form>

<script type="text/javascript" language="javascript">
<!--
document.comments_form.email.value = getCookie("mtcmtmail");
document.comments_form.author.value = getCookie("mtcmtauth");
document.comments_form.url.value = getCookie("mtcmthome");
if (getCookie("mtcmtauth")) {
    document.comments_form.bakecookie[0].checked = true;
} else {
    document.comments_form.bakecookie[1].checked = true;
}
//-->
</script>
</div>



</div>

</body>
</html>
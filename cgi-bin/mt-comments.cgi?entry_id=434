<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />

<title>iunknown.com: Comment on Whither the GAC?</title>

<link rel="stylesheet" href="http://www.iunknown.com/styles-site.css" type="text/css" />

<script type="text/javascript" language="javascript">
<!--

var HOST = 'www.iunknown.com';

// Copyright (c) 1996-1997 Athenia Associates.
// http://www.webreference.com/js/
// License is granted if and only if this entire
// copyright notice is included. By Tomer Shiran.

function setCookie (name, value, expires, path, domain, secure) {
    var curCookie = name + "=" + escape(value) + ((expires) ? "; expires=" + expires.toGMTString() : "") + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + ((secure) ? "; secure" : "");
    document.cookie = curCookie;
}

function getCookie (name) {
    var prefix = name + '=';
    var c = document.cookie;
    var nullstring = '';
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return nullstring;
    var cookieEndIndex = c.indexOf(";", cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

function deleteCookie (name, path, domain) {
    if (getCookie(name))
        document.cookie = name + "=" + ((path) ? "; path=" + path : "") + ((domain) ? "; domain=" + domain : "") + "; expires=Thu, 01-Jan-70 00:00:01 GMT";
}

function fixDate (date) {
    var base = new Date(0);
    var skew = base.getTime();
    if (skew > 0)
        date.setTime(date.getTime() - skew);
}

function rememberMe (f) {
    var now = new Date();
    fixDate(now);
    now.setTime(now.getTime() + 365 * 24 * 60 * 60 * 1000);
    setCookie('mtcmtauth', f.author.value, now, '', HOST, '');
    setCookie('mtcmtmail', f.email.value, now, '', HOST, '');
    setCookie('mtcmthome', f.url.value, now, '', HOST, '');
}

function forgetMe (f) {
    deleteCookie('mtcmtmail', '', HOST);
    deleteCookie('mtcmthome', '', HOST);
    deleteCookie('mtcmtauth', '', HOST);
    f.email.value = '';
    f.author.value = '';
    f.url.value = '';
}

//-->
</script>
</head>

<body>

<div id="banner-commentspop">
iunknown.com
</div>

<div class="blog">

<div class="comments-head">Comments: Whither the GAC?</div>


<div class="comments-body">
<p>So do you recommend putting a custom control dll into two or more bin directories if it needs to be used accross multiple web applications?  <br />
</p>
<span class="comments-post">Posted by <a target="_blank" href="http://staff.develop.com/jfland/">Jon Flanders</a> at March 31, 2004 02:02 AM</span>
</div>
<div class="comments-body">
<p>I would still recommend avoiding the GAC in this case. If those applications need to evolve independently of each other, you will eventually run into a situation where that control needs to evolve with one of those apps, yet the other app remains unchanged. If you're not careful, you could introduce a breaking change into the control that breaks the unmodified app. It's just safer (and simpler) to deploy a separate copy of the assembly with each application.</p>
<span class="comments-post">Posted by <a target="_blank" href="http://www.iunknown.com">John Lam</a> at March 31, 2004 08:22 AM</span>
</div>
<div class="comments-body">
<p>John:</p>

<p>While (I think) I agree with you for commercial applications, when you have control over the environment, GAC can be a lifesaver.  As a f'rinstance:</p>

<p>We have a series of base class DLLs and architecture service DLLs that are used by about 120 different web services.  From a deployment standpoint, we have a "framework deployment" MSI, and a "web service deployment MSI."  Everything is strongly named with an auto-increment version number, so when we get to production we *know* that there aren't going to be any broken interfaces.  We find that out long before, if it happens.</p>

<p>For end-user applications where you don't have control over the workstation, your opinion looks like it makes a lot of sense.</p>

<p>-Rob Streno</p>
<span class="comments-post">Posted by <a target="_blank" href="http://www.arekay.com">Rob Streno</a> at March 31, 2004 09:49 AM</span>
</div>
<div class="comments-body">
<p>Well John - I think you are just wrong :)  What if you have an important bug fix and you have 5 web application that all use the same assembly?  You have to recompile and replace 5 dlls?  It is kind of like copy-and-past inheritence to me. That's a really bad way to share code IMO, which introduces way more problems than the GAC does.</p>

<p>I think your issue about not-breaking the interface holds true *until* you change the version number.  Once you change the version number (in spite of binding redirects and publishier policies) I think it is fine to introduce changes that might break apps compiled against v1, because they should be recompiled and re-tested against v2.</p>
<span class="comments-post">Posted by <a target="_blank" href="http://staff.develop.com/jfland">Jon Flanders</a> at March 31, 2004 11:12 AM</span>
</div>




</div>

</body>
</html>
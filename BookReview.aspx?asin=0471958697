
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Pattern-Oriented Software Architecture, Volume 1: A System of Patterns
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0471958697" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wNDcxOTU4Njk3LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFBhdHRlcm4tT3JpZW50ZWQgU29mdHdhcmUgQXJjaGl0ZWN0dXJlLCBWb2x1bWUgMTogQSBTeXN0ZW0gb2YgUGF0dGVybnM7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEZyYW5rICBCdXNjaG1hbm4sIFJlZ2luZSAgTWV1bmllciwgSGFucyAgUm9obmVydCwgUGV0ZXIgIFNvbW1lcmxhZCwgTWljaGFlbCAgU3RhbCwgUGV0ZXIgU29tbWVybGFkLCBNaWNoYWVsIFN0YWw7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ3MC4wMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDU5Ljk2Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0LjU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDEyOz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzA0NzE5NTg2OTcvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDw7bDxpPDA+O2k8MT47PjtsPHQ8QDxBbWF6b24uY29tOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxcPElcPlBhdHRlcm4tT3JpZW50ZWQgU29mdHdhcmUgQXJjaGl0ZWN0dXJlOiBBIFN5c3RlbSBvZiBQYXR0ZXJuc1w8L0lcPiBsb29rcyBhdCBob3cgcGF0dGVybnMgb2NjdXIgb24gdGhyZWUgZGlmZmVyZW50IGxldmVscy0taW4gc29mdHdhcmUgYXJjaGl0ZWN0dXJlLCBpbiBldmVyeWRheSBkZXNpZ24sIGFuZCBpbiBpZGlvbXMgKHdoaWNoIGRlc2NyaWJlIGhvdyBhIHBhcnRpY3VsYXIgZGVzaWduIHBhdHRlcm4gaXMgaW1wbGVtZW50ZWQgaW4gYSBwcm9ncmFtbWluZyBsYW5ndWFnZSBsaWtlIEMrKykuIFRoaXMgc3ludGhldGljIGFwcHJvYWNoIGlzIGEgbGl0dGxlIHRoZW9yZXRpY2FsIGF0IHRpbWVzLCBidXQgdGhlIGF1dGhvcnMgYWxzbyBwcmVzZW50IG92ZXIgYSBkb3plbiBwYXR0ZXJucyBhbmQgcHJvdmlkZSByZWFsLXdvcmxkIGV4YW1wbGVzIHdoZXJldmVyIHBvc3NpYmxlLlw8cFw+ICBGb3IgYXJjaGl0ZWN0dXJhbCBwYXR0ZXJucywgdGhlIGF1dGhvcnMgbG9vayBhdCB0aGUgTGF5ZXJzIHBhdHRlcm4sIHVzZWQgaW4gb3BlcmF0aW5nIHN5c3RlbXMgc3VjaCBhcyBXaW5kb3dzIE5UIGFuZCB2aXJ0dWFsIG1hY2hpbmVzLiBUaGV5IGFsc28gY29uc2lkZXIgUGlwZXMgYW5kIEZpbHRlcnMsIHdoaWNoIHByb2Nlc3Mgc3RyZWFtcyBvZiBkYXRhLiAoVGhpcyBwYXR0ZXJuLCB0aGUgYXV0aG9ycyBwb2ludCBvdXQsIGlzIGEgbHluY2hwaW4gb2YgVW5peC4pIFRoZWlyIEJsYWNrYm9hcmQgcGF0dGVybiBzaG93cyBob3cgYSBjb21wbGV4IHByb2JsZW0sIHN1Y2ggYXMgaW1hZ2Ugb3Igc3BlZWNoIHJlY29nbml0aW9uIGNhbiBiZSBicm9rZW4gdXAgaW50byBzbWFsbGVyLCBzcGVjaWFsaXplZCBzdWJzeXN0ZW1zIHRoYXQgd29yayB0b2dldGhlciB0byBzb2x2ZSBhIHByb2JsZW0uIChGb3IgcmVjb2duaXppbmcgd29yZHMgZnJvbSBhIHJhdyB3YXZlZm9ybSBpbnB1dCwgYSBCbGFja2JvYXJkIGFwcHJvYWNoIG1pZ2h0IGhhdmUgc2VwYXJhdGUgcHJvY2Vzc2VzIHRvIGZpbmQgcGhvbmVtZXMsIHRoZW4gd29yZHMsIHRoZW4gc2VudGVuY2VzLilcPHBcPiBUaGlzIGJvb2sgYWxzbyBsb29rcyBhdCB0b2RheSdzIGRpc3RyaWJ1dGVkIHN5c3RlbXMgaW4gY29uc2lkZXJpbmcgdGhlIEJyb2tlciBwYXR0ZXJuLCB3aGljaCBpcyB1c2VkIG9uIHRoZSBJbnRlcm5ldCBhbmQgaW4gTWljcm9zb2Z0J3MgT0xFIHRlY2hub2xvZ3kuICBUaGlzIHNlY3Rpb24gYWxzbyBwcmVzZW50cyBzZXZlcmFsIHBvd2VyZnVsIHBhdHRlcm5zIGZvciBidWlsZGluZyBlZmZlY3RpdmUgZ3JhcGhpY2FsIHVzZXIgaW50ZXJmYWNlcywgc3VjaCBhcyBNb2RlbC1WaWV3LUNvbnRyb2xsZXIuXDxwXD4gIFRoZSBhdXRob3JzIGRlZmluZSBzZXZlcmFsIHdlbGwta25vd24gZGVzaWduIHBhdHRlcm5zLCBzdWNoIGFzIHRoZSBQcm94eSBhbmQgQ29tbWFuZCBwYXR0ZXJucywgYW5kIGFsc28gYmFzaWMsIGZhci1yZWFjaGluZyBwYXR0ZXJucywgc3VjaCBhcyBXaG9sZS1QYXJ0IGFuZCBNYXN0ZXItU2xhdmUsIHdoaWNoIGFyZSB3aWRlbHkgdXNlZCB0aHJvdWdob3V0IGNvbXB1dGluZy4gVGhlaXIgc3VydmV5IGVuZHMgd2l0aCBhIGRpc2N1c3Npb24gb24gdGhlIHdheSBvYmplY3RzIGNhbiBjb21tdW5pY2F0ZSAodXNpbmcgc3VjaCBwYXR0ZXJucyBhcyBGb3J3YXJkZXItUmVjZWl2ZXIsIENsaWVudC1EaXNwYXRjaGVyLVNlcnZlciwgYW5kIFB1Ymxpc2hlci1TdWJzY3JpYmVyKSwgd2hpY2ggbWFueSBkZXZlbG9wZXJzIHdpbGwgcmVjb2duaXplIGFzIGZhbWlsaWFyIHBhdHRlcm5zLCBidXQgYXJlIGNvZGlmaWVkIGhlcmUgYXMgIm9mZmljaWFsIiBwYXR0ZXJucy4gVGhlIGJvb2sgdGhlbiBkaXNjdXNzZXMgc29tZSBpZGlvbXMgaW4gQysrIGFuZCBhIG1vcmUgZmFyLXJlYWNoaW5nIHJvbGUgZm9yIHBhdHRlcm5zIGluIHNvZnR3YXJlIGRlc2lnbiBhbmQgYXJjaGl0ZWN0dXJlLiAgQnkgZml0dGluZyBwYXR0ZXJucyBpbnRvIHRyYWRpdGlvbmFsIHNvZnR3YXJlIGVuZ2luZWVyaW5nIHByYWN0aWNlcywgdGhlIGF1dGhvcnMgb2YgXDxJXD5QYXR0ZXJuLU9yaWVudGVkIFNvZnR3YXJlIEFyY2hpdGVjdHVyZVw8L0lcPiBzdWNjZXNzZnVsbHkgYXJndWUgdGhhdCB0aGUgcm9sZSBmb3IgcGF0dGVybnMgd2lsbCBvbmx5IGNvbnRpbnVlIHRvIGRpdmVyc2lmeSBhbmQgZW5yaWNoIHRvbW9ycm93J3Mgc29mdHdhcmUgZW5naW5lZXJpbmcgdG9vbHMgYW5kIG1ldGhvZG9sb2dpZXMuIFw8SVw+LS1SaWNoYXJkIERyYWdhblw8L0lcPjs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz4pr0nmbZvpdGR+/C1ikRWHLnEq5g==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0471958697.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Pattern-Oriented Software Architecture, Volume 1: A System of Patterns</span>
        <div class="ItemDetail">By
          <span id="Authors">Frank  Buschmann, Regine  Meunier, Hans  Rohnert, Peter  Sommerlad, Michael  Stal, Peter Sommerlad, Michael Stal</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$70.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$59.96</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">12</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0471958697/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1"><I>Pattern-Oriented Software Architecture: A System of Patterns</I> looks at how patterns occur on three different levels--in software architecture, in everyday design, and in idioms (which describe how a particular design pattern is implemented in a programming language like C++). This synthetic approach is a little theoretical at times, but the authors also present over a dozen patterns and provide real-world examples wherever possible.<p>  For architectural patterns, the authors look at the Layers pattern, used in operating systems such as Windows NT and virtual machines. They also consider Pipes and Filters, which process streams of data. (This pattern, the authors point out, is a lynchpin of Unix.) Their Blackboard pattern shows how a complex problem, such as image or speech recognition can be broken up into smaller, specialized subsystems that work together to solve a problem. (For recognizing words from a raw waveform input, a Blackboard approach might have separate processes to find phonemes, then words, then sentences.)<p> This book also looks at today's distributed systems in considering the Broker pattern, which is used on the Internet and in Microsoft's OLE technology.  This section also presents several powerful patterns for building effective graphical user interfaces, such as Model-View-Controller.<p>  The authors define several well-known design patterns, such as the Proxy and Command patterns, and also basic, far-reaching patterns, such as Whole-Part and Master-Slave, which are widely used throughout computing. Their survey ends with a discussion on the way objects can communicate (using such patterns as Forwarder-Receiver, Client-Dispatcher-Server, and Publisher-Subscriber), which many developers will recognize as familiar patterns, but are codified here as "official" patterns. The book then discusses some idioms in C++ and a more far-reaching role for patterns in software design and architecture.  By fitting patterns into traditional software engineering practices, the authors of <I>Pattern-Oriented Software Architecture</I> successfully argue that the role for patterns will only continue to diversify and enrich tomorrow's software engineering tools and methodologies. <I>--Richard Dragan</I></span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Clear and wide-ranging</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-25</span>
                    </div>
                    <span>This is an unusual book in the pattern genre. It presents a number of patterns, categorized by archtiectural level. That's just the first part of the book, though. The third of the book is about the process of using, relating, collecting, and distributing patterns. <p>Only chapter 2 really addresses patterns for the strategic, architectural level of a software system. It does a very adequate job, using a variety of notations, examples, and analysis steps. This book is from 1996, so time has changed our view of some patterns. "Reflection," for example, has become pervasive in applications based on plugins and software components. It is also a fundamental API in the major langauges (Java and C#) released since this book was published - perhaps reflection should be downgraded to an "idiom". That's just nitpicking, though, since reflection is even more important now than when the book was written.<p>For contrast, the authors present additional design patterns (including some from Gamma's book) for use at tactical design levels. They also discuss idioms patterns that typically involve just a few lines of code within on function. The contrast between the three different levels of implementation and design gives a useful discussion. The authors also present a weak chapter on "systems" or "langauges" of patterns The discussion is OK as far as it goes. The weakness is in what it omits. After reading this brief chapter, the programmer has very little practical information about choosing patterns from some library for some task. The poor programmer has no information at all about how to link patterns together, and that's a real stumbling block for beginning pattern users.<p>The final section of the book is really sociology. It's about the pattern community, what that community is for, and how to be a working member. I find the discussion un-helpful, but I expect opinions to differ.<p>Even today, this is a good second book (after Gamma's 'Design Patterns') on patterns and pattern usage. It lack the depth and precision of Gamma's book, and tends to add words without adding meaning. On the positive side, it's broader than Gamma's, and addresses a wider range of implementation levels.</span>
                  
                    <div class="CustomerReviewSummary">This book rocks!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-09-24</span>
                    </div>
                    <span>This book is ten times better than GoF or Fowler's book. I would love to see another volume in this series covering Web Services and Integration patterns, maybe written by Ambler, Naggapan, and Cooper would be excellent.<p>Check out Eric Newcomer's book on Web Services as a great companion.</span>
                  
                    <div class="CustomerReviewSummary">Decent software patterns book</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-06-15</span>
                    </div>
                    <span>POSA1 is written far better than other related texts, such as GoF. (And be aware of the fact that GoF only contains design level patterns - it does not contain system architecture level patterns.) At the same time, after its nth reprinting and redesigned book cover, the text still contains non-UML diagrams (although there are some UML-like sequence diagrams included), and very few real code examples. The lack of code examples, though, can in some ways be seen as a positive aspect of the text. Compare this text with Applied Java Patterns, for example. AJP has very extensive code examples, but because the code examples for each pattern run for pages (rather than simply providing code snippets), the reader may be inclined to narrow their view of how the pattern is applied. For example, MVC is definitely not a pattern limited to GUI user interfaces! The point on which I think that POSA1 seems to come out ahead is that the stronger-than-ususal pattern descriptions and applicability, with a small amount of code provided where deemed especially relevant to the point being attempted to make, helps one understand the patterns better rather than memorizing language-specific implementations of patterns. This point is why I think the text was chosen to accompany Software Architecture in Practice for the graduate software engineering course in software architecture I just took.</span>
                  
                    <div class="CustomerReviewSummary">Adds Engineering to CS</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-06-01</span>
                    </div>
                    <span>I recommend this book for students like me who are taking intermediate computer science courses for the the following reasons. It's a readable book for students who are new to the concept of applying patterns to software design. Many of the patterns in the book can be used for school projects. Furthermore, the book exposes the reader to a new way of thinking during the design of large programs. School projects are often short and programmed individually. This book deals with real world situations where programming projects are large and complex and done in teams. It emphasizes design and takes into account non-functional programming issues such as changeability, exchangeability, and extendibility. These issues are barely covered in school. This book will force the student to look at programming and design from a differenct perspective. It will make you into a better programmer. Also, you can read it all in about a week.</span>
                  
                    <div class="CustomerReviewSummary">4.5 Stars: Thorough, Deep and READABLE</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-02-19</span>
                    </div>
                    <span>There is a basic problem with the pattern literature. It is usually as easy to read as a cookbook. This book can actually and worthwhile be read from cover to cover. Big achievement!<p>I learned quite a bit from it and found it very well spent time reading it.<p>The authors try to be very systematic. They try to do everything as good as they can. They are of a high quality. They even use extensive peer review at the patterns conference. Still the different sections are of a very diverse quality both in depth and breadth. Sometimes difficult concepts are just dropped on the reader, while fairly trivial stuff is explained over some pages.<p>Anyhow this book is an excellent complementary book to the GoF (Gamma et al.) one.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0470845252'>
                      Pattern-Oriented Software Architecture, Patterns for Resource Management (Wiley Software Patterns Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 2 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471606952'>
                      Pattern-Oriented Software Architecture, Volume 2, Patterns for Concurrent and Networked Objects
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201895420'>
                      Analysis Patterns : Reusable Object Models (Addison-Wesley Object Technology: Addison-Wesley Object Technology Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 14 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201703726'>
                      Documenting Software Architectures: Views and Beyond
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321154959'>
                      Software Architecture in Practice, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

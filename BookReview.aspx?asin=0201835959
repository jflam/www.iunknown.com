
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: The Mythical Man-Month: Essays on Software Engineering, 20th  Anniversary Edition
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201835959" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxODM1OTU5LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoZSBNeXRoaWNhbCBNYW4tTW9udGg6IEVzc2F5cyBvbiBTb2Z0d2FyZSBFbmdpbmVlcmluZywgMjB0aCAgQW5uaXZlcnNhcnkgRWRpdGlvbjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8RnJlZGVyaWNrIFAuIEJyb29rczs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDM0Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMjMuMDk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDQuNTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NzY7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDIwMTgzNTk1OS9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PDtsPGk8MD47aTwxPjs+O2w8dDxAPEFtYXpvbi5jb207Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFw8SVw+VGhlXDwvSVw+IGNsYXNzaWMgYm9vayBvbiB0aGUgaHVtYW4gZWxlbWVudHMgb2Ygc29mdHdhcmUgZW5naW5lZXJpbmcuIFNvZnR3YXJlIHRvb2xzIGFuZCBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgbWF5IGhhdmUgY2hhbmdlZCBpbiB0aGUgMjEgeWVhcnMgc2luY2UgdGhlIGZpcnN0IGVkaXRpb24gb2YgdGhpcyBib29rLCBidXQgdGhlIHBlY3VsaWFybHkgbm9ubGluZWFyIGVjb25vbWllcyBvZiBzY2FsZSBpbiBjb2xsYWJvcmF0aXZlIHdvcmsgYW5kIHRoZSBuYXR1cmUgb2YgaW5kaXZpZHVhbHMgYW5kIGdyb3VwcyBoYXMgbm90IGNoYW5nZWQgYW4gZXBzaWxvbi4gIElmIHlvdSB3cml0ZSBjb2RlIG9yIGRlcGVuZCB1cG9uIHRob3NlIHdobyBkbywgZ2V0IHRoaXMgYm9vayBhcyBzb29uIGFzIHBvc3NpYmxlIC0tIGZyb20gQW1hem9uLmNvbSBCb29rcywgeW91ciBsaWJyYXJ5LCBvciBhbnlvbmUgZWxzZS4gWW91IChhbmQvb3IgeW91ciBjb2xsZWFndWVzKSB3aWxsIGJlIGZvcmV2ZXIgZ3JhdGVmdWwuIFZlcnkgSGlnaGVzdCBSZWNvbW1lbmRhdGlvbi47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+TmkSW8J1RWH/FuuFUJ8tnStQ0YA=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201835959.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">The Mythical Man-Month: Essays on Software Engineering, 20th  Anniversary Edition</span>
        <div class="ItemDetail">By
          <span id="Authors">Frederick P. Brooks</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$34.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$23.09</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">76</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201835959/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1"><I>The</I> classic book on the human elements of software engineering. Software tools and development environments may have changed in the 21 years since the first edition of this book, but the peculiarly nonlinear economies of scale in collaborative work and the nature of individuals and groups has not changed an epsilon.  If you write code or depend upon those who do, get this book as soon as possible -- from Amazon.com Books, your library, or anyone else. You (and/or your colleagues) will be forever grateful. Very Highest Recommendation.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">A true classic of software project management!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-29</span>
                    </div>
                    <span>There have been many, many books on software project management lately, but this one still is one of the best. Perhaps the context of older simpler technology helps illustrate the principles more clearly. While some new technologies have an impact on projects, particularly the encapsulation aspect of object-oriented design that allows for real code-reuse, the fundamentals don't change. Further, Brooks shows us why there can never be a "Silver Bullet" that will revolutionize the art.<P>He covers in great detail critical elements such as team structure, development process, conceptual integrity, and scheduling issues (including the myth of the man-month, for which the book is named). Further, since he draws on experience from classic projects such as IBM's OS/360, the book has interesting history as well.<P>My only issue is that with recent increases in power of PCs and languages, many "projects" are now of such scope that they need only involve a single developer, in which case a different paradigm is needed.</span>
                  
                    <div class="CustomerReviewSummary">A timeless classic "must read"</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>27</span>
                      /
                      <span>31</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-02-22</span>
                    </div>
                    <span>There are few must reads in this industry. This is one. First published in 1975, this work is as applicable to software engineering today as it was then. Why? Because building things, including software, has always been as much about people as it has been about materials or technology--and people don't change much in only 25 years.<BR> <BR> In the preface to the First Edition, Brooks states "This book is a belated answer to Tom Watson's probing question as to why programming is hard to manage." This short book (at just over 300 pages) does a masterful job answering that question.<BR> <BR> It is here we first hear of Brooks's Law: "Adding manpower to a late software project makes it later." Brooks doesn't just drop that on the reader without explanation. Instead, he walks through the reasoning, discusses how communication in a group changes as the group changes or grows, and how additions to the group need time to climb the learning curve.<BR> <BR> Those new to the industry or who are reading the book for the first time might be put off by the examples and technology discussed. Indeed, even in the newly released edition, the original text from 1975 is still present, essentially untouched. So, talk of OS/360 and 7090s, which permeates the text, is perhaps laughable to those not looking deeper. When talking about trade-offs, for example, Brooks offers "... OS/360 devotes 26 bytes of the permanently resident date-turnover routine to the proper handling of December 31 on leap years (when it is day 366). That might have been left to the operator." This is 26 bytes he's talking about!<BR> <BR> Brooks provides a light, almost conversational tone to the prose. This isn't to say the observations and analysis were not very well researched. Comparing productivity number with those of Software Productivity Research (SPR), you'll find Brooks came up with the same measurements for productivity as Jones--only 20 years earlier!<BR> <BR> Other wisdom is also buried in this work. Brooks declares "The question, therefore, is not whether to build a pilot system and throw it away. You will do that. The question is whether to plan in advance to build a throwaway, or to promise to deliver the throwaway to customers." The state of products I buy today tells me not enough people have taken Brooks's observations to heart!<BR> <BR> The latest version of the text includes his work "No Silver Bullet." Brooks, who had brought us so much before, had one last "parting shot."<BR> <BR> As I started this review I will also end it: this book is a classic. Read it.</span>
                  
                    <div class="CustomerReviewSummary">I would give it a 100 stars if I could!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>8</span>
                      /
                      <span>8</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-29</span>
                    </div>
                    <span>If you have managed some software projects or have worked on some non-trivial software systems, undoubtedly you have faced many difficulties and challenges that you thought were unique to your circumstance. But after reading this book, you will realize that many of the things you experienced, and thought were unique problems, are NOT unique to you but are common systemic problems of developing non-trivial software systems. These problems appear repeatedly and even predictably, in project after project, in company after company, regardless of year, whether it's 1967 or 2007.<P>You will realize that long before maybe you were even born, other people working at places like IBM had already experienced those problems and quandries. And found working solutions to them which are as valid today as they were 30 years ago. <P>The suggestions in this book will help you think better and better manage yourself, and be more productive and less wasteful with your time and energy. In short, you will do more with less.<P>Some of Brooks insights and generalizations are:<P>The Mythical Man-Month:<BR>Assigning more programmers to a project running behind schedule, may make it even more late.<P>The Second-System Effect:<BR>The second system an engineer designs is the most bloated system she will EVER design.<P>Conceptual Integrity:<BR>To retain conceptual integrity and thereby user-friendliness, a system must have a single architect (or a small system architecture team), completely separate from the implementation team.<P>The Manual:<BR>The chief architect should produce detailed written specifications for the system in the form of the manual, which leaves no ambiguities about any part of the system and completely specifies the external spcifications of the system i.e. what the user sees.<P>Pilot Plant:<BR>When designing a new kind of system, a team should factor in the fact that they will have to throw away the first system that is built since this first system will teach them how to build the system. The system will then be completely redesigned using the newly acquired insights during building of the first system. This second system will be smarter and should be the one delivered to the customer.<P>Formal Documents:<BR>Every project manager must create a roadmap in the form of formal documents which specifies milestones precisely and things like who is going to do what and when and at what cost.<P>Communication:<BR>In order to avoid disaster, all the teams working on a project, such as the architecture and implementation teams, should stay in contact with each other in as many ways as possible and not guess or assume anything about the other. Ask whenever there's a doubt. NEVER assume anything.<P>Code Freeze and System Versioning:<BR>No customer ever fully knows what she wants from the system she wants you to build. As the system begins to come to life, and the customer interacts with it, he understands more and more what he really wants from the system and consequently asks for changes. These changes should of course be accomodated but only upto a certain date, after which the code is frozen. All requests for more changes will have to wait until the NEXT version of the system. If you keep making changes to the system endlessly, it may NEVER get finished.<P>Specialized Tools:<BR>Every team should have a designated tool maker who makes tools for the entire team, instead of all individuals developing and using their private tools that no one else understands.<P>No silver bullet:<BR>There is no single strategy, technique or trick that will exponentially raise the productivity of programmers.</span>
                  
                    <div class="CustomerReviewSummary">A classic book on Software engineering</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-13</span>
                    </div>
                    <span>This is a timeless classic. A must read for everyone involved in software developement projects.</span>
                  
                    <div class="CustomerReviewSummary">A concise classic</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>7</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-11-30</span>
                    </div>
                    <span>Perhaps the first mass market book on software engineering, this book is a classic. It has defined the agenda for the software engineering field, as well as guide the organizational design for many software and IT organizations.<P>Some key concepts from the book...<BR>- It is not good project management to divide effort by time to come up with staffing. Adding people adds commuications complexity, so double staff size quadruples the amount of communications links.<BR>- To insure conceptual integrity, the software project needs the design to be handled by a very small group of people.<BR>- The optimal model for a software development team is a hospital surgical unit.<BR>- There is no silver bullet for improved quality, just a lot of best practices.<P>Mr. Brooks brings a wealth of experience to bear on this. As the head of some of IBM's largest operating system development projects, he's been in the guts of some of the hardest challenges the industry has to offer. He writes in a non-technical style that cuts to the heart of these difficult topics.<P>In the latest edition, Mr. Brooks takes a hard look at what he got right and wrong over the years. This rare self-critical analysis makes it a valuable re-read for those that enjoyed it the first time.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556159005'>
                      Rapid Development
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.8 based on 89 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0932633439'>
                      Peopleware : Productive Projects and Teams, 2nd Ed.
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.9 based on 48 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735619670'>
                      Code Complete, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 3 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556154844'>
                      Code Complete
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.6 based on 135 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=020161622X'>
                      The Pragmatic Programmer: From Journeyman to Master
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 81 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

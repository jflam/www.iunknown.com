
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Beyond Software Architecture: Creating and Sustaining Winning Solutions
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201775948" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxNzc1OTQ4LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEJleW9uZCBTb2Z0d2FyZSBBcmNoaXRlY3R1cmU6IENyZWF0aW5nIGFuZCBTdXN0YWluaW5nIFdpbm5pbmcgU29sdXRpb25zOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxMdWtlIEhvaG1hbm47Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ0NC45OTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDM1LjY5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw1LjA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDIyOz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzAyMDE3NzU5NDgvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDxwPHA8bDxWaXNpYmxlOz47bDxvPGY+Oz4+Oz47bDxpPDA+O2k8MT47PjtsPHQ8QDxcZTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8XGU7Pj47Pjs7Pjs+Pjs+Pjs+Pjs+ZWpNeGqF0sgd5MqmVzwvAoJjhtQ=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201775948.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Beyond Software Architecture: Creating and Sustaining Winning Solutions</span>
        <div class="ItemDetail">By
          <span id="Authors">Luke Hohmann</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$44.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$35.69</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">5.0</span>
          based on
          <span id="TotalReviews">22</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201775948/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Software Startup 101</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-19</span>
                    </div>
                    <span>Beyond Software Architecture should be required reading for anyone starting a software company - that is unless one prefers the school of hard knocks!  <p>Luke does a fabulous job of going beyond the many books written on software and technology and beyond the many books, classes, and seminars addressing how to create a successful startup and get funded.  <p>Hohmann's keen insight and practical advice can make an enormous difference for any group of bright and knowledgeable software engineers and/or visionary entrepreneurs with the "killer" application - a difference that can mean success.  He clearly defines the space between the technology and the market and draws them together so that technologist and business person alike can gain a necessary understanding for what it takes to bring to market and sustain a successful software product.<p>I wish that this book had been available ten years ago and that I had read it!</span>
                  
                    <div class="CustomerReviewSummary">The most useful tool for the current business paradigm</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-31</span>
                    </div>
                    <span>Hohmann bridges the gap found between development and marketing as well as intangible aspects of corporate structure that hinder proper growth. Business is moving away from large organizations that function in a vacuum almost independently from one another and where the tie-in is at an executive level. "Beyond Software Architecture" leads the way by showing how "it can be done" by focusing attention on the overall unifying factor - the product.<p>With clear examples, and well thought out logic, "Beyond Software Architecture" provides a clear and concise view into the core of most businesses - the product. Through this, organizations, directives, and resources work more efficiently as a polarized entity. <p>Very few books can actively be used as tools - the wisdom from "Beyond Software Architecture," can be applied every day.</span>
                  
                    <div class="CustomerReviewSummary">Closing the Loop from Programmer to Customer</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-04-09</span>
                    </div>
                    <span>As a self-proclaimed "agilist," I have been in the habit of thinking more and more about ways that we can ensure that the software systems we build can richly and extensibly solve the business problems our customers need them to solve. And Agile processes like XP are certainly a big step in that direction. That's part of what attracted many of us to agility in the first place. <p>In this excellent and timely book, Hohmann takes that desire for customer responsiveness a quantum step further, asking that every aspect of a software product (internal or external), from business model to architecture, be aligned with business purpose and business reality. <p>To put it another way, he widens the software "project team" to include everybody and anybody who must dream up, define, design, market, sell, build, test, maintain, extend, support, and ultimately retire a system. It helps to systematize the hard and institutionally complex work of taking all of that input into account throughout the lifecycle.<p>So the book talks about taking into account the customer-related input from all of the above roles. But it also asks us to keep the system responsive to all of the knowledge workers in those roles, and their continuing human needs. As hard as it is to do, it is not enough that a system be easy to extend for its programmers. It's not even enough that it provides the optimal feature set, on-time within budget. There is more hard work for it to do. Some systems are a hell of a lot easier to support than others, or easier to market and sell than others. And on and on. <p>Hohmann shows us how the systems we build will inevitably end up responding to a wide range of needs and roles one way or another, and asks us to anticipate them all, embrace them all, and respond to them up-front, purposefully and systematically. I really, really like that. I can put these insights to use immediately.<p>I think of the Agile practice revolution as an essentially humanizing revolution in software development, but at a fairly low institutional level.  Agile practices largely help us only with the building of the system. And to the extent that Agile methods humanize that building process, they are great. <p>But I think Hohmann's book gives us the start of a higher-tier, larger view of a humanizing movement, not just in building software systems, but in the entire lifecycle, the entire arc from conception to death. A humanized view of the lifecycle is a fabulous thing, to my mind. I think it really could change the software world permanently. We could all end up (gasp) loving our jobs. <p>This is an important book, full of Aha! insights. If you have responsibility in any of the above roles I mention, I think you need to read it.</span>
                  
                    <div class="CustomerReviewSummary">Good high-level coverage of issues in shipping software</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-09</span>
                    </div>
                    <span>Real software takes a lot of work to build and ship. This book covers the parts of your team's work that doesn't fall under either the umbrella of your development processes or your gritty technical details. The myriad of issues around involving marketing, understanding releases, determining security, logging, and configuration requirements are introduced nicely.<p>Missing were some coverage of accessibility and a lot of the people issues that creep up when working on these issues. It would've also been nice to see encouragements to get more real-people validation for your systems through alpha and beta programs. They're a great way to make sure that your configuration, logging, versioning, and support infrastructure is able to handle what you think you will need to do.<p>Overall, though, it's definitely worth giving this a read, particularly if you're in a role that requires you to have a broader set of responsibilities for your product (architectural, management, release, etc.) to make sure you're thinking of the right things. This is stuff that you just have to get right.</span>
                  
                    <div class="CustomerReviewSummary">Depicts the Development Process in its fullness</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>21</span>
                      /
                      <span>21</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-08</span>
                    </div>
                    <span>There must be hundreds of books on the software developmental process, but I have yet to see a book that covers the business, technical marketing, sales cycle, deployment cycle, release cycle, licensing, installation, upgrade cycle, and everything in the middle all in one compact book.  This book TRULY covers the life of a software application and everyone involved in it.  <p>For us techies, this book starts with what we are familiar with:  "Why software architecture matters?"  The author starts with a general overview of the topic, but it goes much further into the non-technical details software architecture, such as the Social Structure aspect:<p>"A good architecture works for the team that created it.  It leverages strengths and can, at times, minimize their weaknesses. ... Once created, the architecture in turn exhibits a strong influence on the team.  No matter what language you've chosen, you have to mold the development team around it because it affects such as things as your hiring and training policies."<p>New comers to the architect world don't really think about such aspects, or at least it's not really high on priority on many people's lists.  The author puts such things right next to profitability, stability of the architecture, and defining the technical boundaries.  Granted that Social Structure aspect of the architecture is as important as the others, you can't really find many books out there that treat it as such.  Personal experience teaches us that, but there are cases, many cases, that one doesn't have the luxury of "trial and error".  The author takes great pride in his experience and has written this book like a personal assistance to a newbie to the job, and to the expert architect with topics such as branding issues, licensing affects on the overall architecture and more... <p>Tarchitecture and Markitecture are two words/concepts that are used frequently throughout this book.  The author starts with the inception of software applications and explains the important rule that Market Architecture (Markitecture) and Product Management have in the overall picture of a software lifecycle.  Why Business plan is important and how it should be written, how to release version 1.0 and subsequent versions, how customer input and interaction with the markitects play the most important rule in the subsequent releases of your software, and other such important questions are covered in chapters 2 and 3.  <br>The chapter Software License and Licensing models is probably one of the most valuable chapter (chapter 4) in the entire book.  The author describes the concept of licensing and how it fits into the overall architecture and how it affects the architecture very elegantly.  Various licensing models and their pros and cons are described:<br>·	Time based<br>·	Transaction based<br>·	OEM bases<br>·	Metering style<br>·	Hardware based<br>·	Services based<br>·	Revenue Obtained/Costs saved.<br>The author explains why it is important to select the right licensing model, and how and why it could have a negative effect on your architecture if the wrong one is chosen.  Various options for choosing a model are then explained such as the Honor System, the homegrown license managers, and the third party tools available.  <p>Another important aspect of software architecture - the-after-development-has-been-done-now-what aspect, is covered throughout the rest of the book.  Deployment, installation, configuration and upgrades are the key topics.  Other topics such as extensions to the current architecture, logging and branding are also covered in detail.  <br>The chapter on installation is another well-covered chapter that talks about a topic not covered at all or well in other books out there.  Various deployment architectures are covered; Customer site installation, ASP, Managed Service Provider, and Web services models make up the topics for this chapter.  This chapter, just like all the other chapters, relates the topic at hand to the overall system architecture, and why and how it can have an effect on the overall architecture of the system.  <p>Throughout the book, one theme screams out to the reader: "How every decision an architect makes affects the rest of the software life cycle, and what the architects need to think about and consider before coming up with their design?"  The cycle - software life cycle, and how it is affected by the end user/customer, why it's the job of the market architects and business managers to gather the key points from their customers, what are some of the concerns that are common with any architecture (deployment issues, upgrade concerns, installation difficulties, logging and error reporting, security concerns), and tone of the most important aspect of all: Social aspects and how they have an important affect on the tarchitects, markitects and the overall application.  I think the author says it best in the preface of the book:<p>"You need to move beyond software architecture and move toward understanding and embracing the business issues that must be resolved in order to create a winning solution"</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321125215'>
                      Domain-Driven Design: Tackling Complexity in the Heart of Software
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 16 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735619670'>
                      Code Complete, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 27 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321146530'>
                      Test Driven Development: By Example
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201703726'>
                      Documenting Software Architectures: Views and Beyond
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321154959'>
                      Software Architecture in Practice, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

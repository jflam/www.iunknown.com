
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Agile Software Development
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201699699" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxNjk5Njk5LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEFnaWxlIFNvZnR3YXJlIERldmVsb3BtZW50Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxBbGlzdGFpciBDb2NrYnVybjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDM5Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMjYuMzk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDQuMzs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8MTk7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDIwMTY5OTY5OS9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PHA8cDxsPFZpc2libGU7PjtsPG88Zj47Pj47PjtsPGk8MD47aTwxPjs+O2w8dDxAPFxlOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxcZTs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz4GHkPoFf33zXtozrrMbGPibv70XA==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201699699.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Agile Software Development</span>
        <div class="ItemDetail">By
          <span id="Authors">Alistair Cockburn</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$39.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$26.39</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.3</span>
          based on
          <span id="TotalReviews">19</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201699699/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">The Articulation of Higher Awareness</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>44</span>
                      /
                      <span>49</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-12-02</span>
                    </div>
                    <span>In Agile Software Development, Alistair Cockburn has quietly authored a masterpiece. With extraordinary insightfulness and encompassing perspective, Cockburn writes of fundamental truths around the business of software development, the people and teams involved, and the nature of methodology.<P>This book will give you vocabulary and concepts to communicate what you experience on your projects: what software development is all about, the importance of people and their motivations and traits, the adequacy of communication within your team community, and the appropriateness of your methodology for your context.<P>The first in a series based on the idea that different projects need different methodologies, and that focusing on communication and community is more relevant than focusing on process, the book is primarily concerned with what *is* methodology - and what identifies agile methodology, in particular.<P>Cockburn begins with the premise that communication is never perfect or complete - and therefore one task of your methodology, which amounts to the set of conventions your team follows, is to ensure that communications are optimal for the purposes at hand.<P>But what are the purposes at hand? Cockburn adeptly uses the metaphor of game theory to accurately characterize software development as "a cooperative game of invention and communication", whose primary goal is to deliver useful, working software, and whose secondary goal is to prepare for continued play. In so doing he reflects thoughtfully on the characterization of software as engineering, and derides the characterization of software as model-building - observing, thankfully, that building models is not the purpose of the game. The purpose of the game is delivering software.<P>This characterization frames the book's discussion, which builds in well-considered progression from people, to teams, to methodology, to agility. In a chapter about people, Cockburn stands upon the shoulders, and extends the vision, of giants such as Weinberg, and DeMarco and Lister, finding that people factors predict project outcome much more reliably than choice of process or technology. His treatment of people's motivations, in particular, is the most enlightened to be found outside the leadership literature.<P>That people participate in teams leads to the next chapter's thorough analysis of communication within teams, and examination of teams as communities. Cockburn implies that a project's rate of progress is a function of how long it takes information to get from one person's mind to another. Through comparison of different seating arrangements and communication modalities, he substantiates the implication and raises the issue of the permanence of communication. To the extent that the people on a team pull in the same direction, they form an effective community defined by "amicability" and "citizenship" - words and definitions provided by Cockburn that are a welcome addition to our vocabulary.<P>Coordinating a team's activity is the task of a methodology, which is subject of the book's final three chapters. The first of the three lays out a conceptual model of what methodology *is*, in terms of elements of methodology and relationships between elements. It goes on to define the scope of a methodology, and to put forth terms, such as "weight" and "tolerance", that can be used to describe a methodology. It addresses how to publish a methodology. Then Cockburn discusses a number of principles involved in the design of methodologies, and consequences of those principles. Of particular interest is a model for characterizing projects, on which to base the selection of a methodology for a project. This chapter concludes with an examination of Extreme Programming in light of the vocabulary and concepts Cockburn develops.<P>The second of the three methodology chapters discusses agile methodologies, and what identifies them. Included are recommendations for documentation, an interesting contrast of open-source development to commercial development (it's a different kind of game), and a prescriptive technique for selecting and adapting a methodology on a project. Along the way Cockburn suggests a good definition of software development project success (at least, from a methodological perspective), and thankfully debunks some of the broken thinking that is prevalent in our industry today -specifically, around outsourced overseas development.<P>The last of the three methodology chapters introduces Cockburn's own family of methodologies, the Crystal Methodologies, each of which corresponds to a particular space within the project characterization model.<P>Three appendices are included, of such significant content that they can hardly be considered an afterthought. The first discusses The Agile Software Development Manifesto, a product of seventeen advocates of "lightweight" development processes who gathered in early 2001 to discuss what they might have in common. Cockburn was party to the meeting and the manifesto, and in the first appendix provides his own report on the meeting and interpretation of the group's values and principles.<P>The second appendix excerpts and annotates earlier works, of other authors, that are significantly germane to Cockburn's arguments. One of these is by Peter Naur (of Backus-Naur Form), titled "Programming as Theory Building". In the vein of communication, Cockburn writes that "Using Naur's ideas, the designer's job is not to pass along the design, but to pass along the theories driving the design. The latter goal is more useful and more appropriate." Another excerpt is from The Book of Five Rings by Miyamoto Musashi, a 17th-century Japanese samurai who never wrote software, but whose words apply as equally to software development methodology and tool schools today as they did to martial arts schools in 17th-century Japan.<P>The third and final appendix is a bibliography of 65 entries.<P>Taken as a whole, the chapters and appendices form a seminal book on methodology that promises to have significant influence within our industry. Agile Software Development is an epiphany for the field of software development. Buy it. Read it. Use it. Urge the people on your teams to do likewise, that you may discuss methodology with higher awareness, and adjust yours to be appropriately agile. For, as Alistair writes, "software developers should come to know this material simply as part of being in the profession".<P>Randy Stafford<BR>Chief Architect<BR>IQNavigator</span>
                  
                    <div class="CustomerReviewSummary">This book has changed my mind - to some extend...</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>29</span>
                      /
                      <span>30</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-05-07</span>
                    </div>
                    <span>When I started reading this book I was not a fan of XP, but certainly in favour of lighter methodologies. The book is unusual (amongst IT books) in the sense that it starts off with patterns of human communication. In fact the first three chapters - which analyses game-play, individual communication modes, and team cooperation - covers about 40% of the book. However, it was this section of the book that won me over and convinced me about the basis of the "methodologies" such as XP.<P>But for me personally the most practical and relevant chapter was Chapter 5: "Agile and self-adapting". In this chapter Cockburn covers issues such as how much documentation, team structures, and most importantly: a methodology growing technique. This chapter is closely followed in importance by chapter 4: "Methodologies". In this chapter Cockburn covers methodology concepts and design principles, including how to publish and introduce (role out) a methodology (before going on to dissect XP). Chapter 6: "The crystal methodologies" consolidates these ideas. Cockburn takes you along while describing and shaping his family of Crystal methodologies.<P>The book is rounded of with the agile software development manifesto, a formal proposal drawn up by several software authors; and philosophical contributions from other authors. Many good references can be found in the appendix.<P>Cockburn acknowledges that the chosen methodology must fit issues such as the project and team size and environment. And although I can see the benefits of many aspects of the agile philosophy, there are other aspects I am still cynical about. However, my review is not about XP, but about this book. And the book is well written, well argued, sensible, with plenty of stories and examples, which makes it easy to read. In my case, Cockburn was NOT preaching to the converted, and I gained much value from reading the book. It helped me to question some of my preconceived ideas and long-held views.</span>
                  
                    <div class="CustomerReviewSummary">Good agile overview, but a bit longer than it needs to be</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-24</span>
                    </div>
                    <span>The high points were all of the great attitude around how to tune a methodology to your specific team, project, and environment. It emphasizes a lot of the crucial points around the people differences that are critical to success.<P>The downside is that a cover-to-cover reading will feel a bit belabored; the point could've been made in a bit less space. Especially noticiable were the places where sections had been copy/pasted from earlier sections of the book. I can see where it adds to random-search readability, but the third time I read the same anecdote, I was feeling a bit abused.<P>Also, there was a very interesting framework around 'levels of criticality' that I was really interested in. However, he had one category that implied loss-of-life. Okay, I got that. Then, later in the book, he talks about categorizing a financial project (that nowhere involved mafia hitmen) as that level! I guess I understood the analysis process, but the labeling of the levels totally lead me down the wrong path. I was thinking space shuttle, and he went RC racer. Not necessarily a bad thing, but I left the book not too confident that I was as grounded in the categorization process as I could've been.</span>
                  
                    <div class="CustomerReviewSummary">Teaches you how to be successful</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-08</span>
                    </div>
                    <span>In this book, Alistair Cockburn gives amazing insight into what successful software development is all about. It is an essential read for anyone involved in a software development project.<P>The "successful" word is very important - I have read many books on software development that provide helpful techniques and methodologies, but don't really have much bearing on the success of your project. I have seen specific techniques and methodologies applied extremely successfully in some teams on some projects, and really poorly for others. Personally, I am interested in being very successful in every project I embark on, and Cockburn's book is the only one I have ever read that contains everything you need to know to be successful every time. It is the essence of software development.<P>Over the years I've developed a good feel for how a great project runs, but have found it remarkably hard to communicate what it is that makes the difference between successful and failed projects. I was delighted to find that Alistair Cockburn has worked out how to articulate the difference and how to make sure that your projects are the successful ones. <P>For anyone that has done the hard yards through real-world software development projects where time-to-market is a crucial factor, you will be overjoyed when reading this book. You will find you now have a vocabulary to use when talking to others about your projects. After every chapter you will find yourself bursting with excitement to tell someone about what you have learned. The book will change the way you look at your projects and will give you the key to being successful.<P>For novices to software development, read this book and count yourself lucky that you found it right at the start of your career. The amount you will gain from Cockburn's insight is immeasurable.</span>
                  
                    <div class="CustomerReviewSummary">Fluffy, Arrogant, Wrong Title</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>17</span>
                      /
                      <span>32</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-04-20</span>
                    </div>
                    <span>I am suprised to see so many 5 star reviews. They must be friends with the author, or very ignorant. I just finished reading half of this text tonight (about 125 pages, over the course of a few months), and I plan to go no further with it. I was planning on finishing it but I just can't stand reading it. I skimmed the rest, finding the same drab boring text throughout. First off, the author is very cocky, and attempts to demonstrate his superior "level 3" attitude throughout the text. This can be very annoying to read. Second, the text is written as if it were a thesis. He makes -constant- references to other texts such as (Shmo, Software Engineering). Write something original already! Sometimes it's important to make references, but he makes so many of them that the text itself appears to me as just a collection of references. Further, several times throughout the text he makes...references to his own texts such as (Alistair, Crystal Clear). Not only that but he makes references to texts that he has not written yet! (e.g. Alistair, Text, forthcoming) Also, this text should perhaps be more accurately titled 'Analysis of Software Methodologies'. The first part of the text contains extremely generalistic fluff, where the author puts down the reader in so many subtle ways. The next part of the text provides an analysis of various practices that are used in methodologies, which is partially useful, but the text is written in such an annoying and undigestible manner that it gives me this sick feeling when reading it. The third part of the text provides examples of actual methodlogies, but is too general to be of any practical use. Despite not liking this text several dozen pages in, I made a real attempt at finishing it since I paid for it, but I just can't finish it. This text just doesn't work for me. I dislike the author's writing style and I would not recommend it to anyone. From what I read so far, the useful portions of this text can be boiled down to a few HTML pages on a website. This text is no 'masterpiece' as another reader put it. He must be friends with the author. If you're looking for a true masterpiece read The Pragmatic Programmer by Andy Hunt and Dave Thomas... a truly intelligent and practical text!</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201702258'>
                      Writing Effective Use Cases
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.6 based on 36 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131111558'>
                      Agile and Iterative Development: A Manager's Guide
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 12 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0130676349'>
                      Agile Software Development with SCRUM
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.7 based on 12 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201616416'>
                      Extreme Programming Explained: Embrace Change
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.9 based on 108 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201498340'>
                      Surviving Object-Oriented Projects (Agile Software Development Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.6 based on 11 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

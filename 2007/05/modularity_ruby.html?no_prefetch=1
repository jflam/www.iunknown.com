<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" id="sixapart-standard">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="generator" content="http://www.typepad.com/" />
	
	
	
	<meta name="description" content="It seems like we stirred up some controversy with these lines of code in our demo: JS = require 'foo.js' ... JS.initialize Let's be clear about what this code does: it creates a ScriptModule (a DLR type) that represents the..." />
	
	<link rel="stylesheet" href="http://www.iunknown.com/styles.css" type="text/css" media="screen" />
	<link rel="stylesheet" href="/.shared/themes/common/print.css" type="text/css" media="print" />
		<link rel="alternate" type="application/atom+xml" title="Posts on 'John Lam on Software' (Atom)" href="http://www.iunknown.com/atom.xml" />
	<link rel="alternate" type="application/rss+xml" title="Posts on 'John Lam on Software' (RSS 1.0)" href="http://www.iunknown.com/index.rdf" />
	<link rel="alternate" type="application/rss+xml" title="Posts on 'John Lam on Software' (RSS 2.0)" href="http://www.iunknown.com/rss.xml" />
	
	

	

	<title>John Lam on Software: Modularity, Ruby and Doing the Right Thing</title>
	<link rel="start" href="http://www.iunknown.com/" title="Home" />
	<link rel="prev" href="http://www.iunknown.com/2007/05/rounding_up_dlr.html?no_prefetch=1" title="Rounding up DLR questions" />
	<link rel="next" href="http://www.iunknown.com/2007/05/dlr_running_on_.html?no_prefetch=1" title="DLR Running on Mono" />
	
	<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"
         xmlns:dc="http://purl.org/dc/elements/1.1/">
<rdf:Description
    rdf:about="http://www.iunknown.com/2007/05/modularity_ruby.html"
    trackback:ping="http://www.typepad.com/services/trackback/6a00d834fc885d53ef00d835153adb53ef"
    dc:title="Modularity, Ruby and Doing the Right Thing"
    dc:identifier="http://www.iunknown.com/2007/05/modularity_ruby.html"
    dc:description="It seems like we stirred up some controversy with these lines of code in our demo: JS = require &#39;foo.js&#39; ... JS.initialize Let&#39;s be clear about what this code does: it creates a ScriptModule (a DLR type) that represents the..."
    dc:creator="John Lam"
    dc:date="2007-05-14T14:10:37-07:00" />
</rdf:RDF>
-->

</head>

<body class="layout-two-column-right">
	
	<div id="container">
		<div id="container-inner" class="pkg">
			
			<!-- banner -->
<div id="banner">
	<div id="banner-inner" class="pkg">
		
		<h1 id="banner-header"><a href="http://www.iunknown.com/" accesskey="1">John Lam on Software</a></h1>
		<h2 id="banner-description">Ruby, Dynamic Language Runtime, Silverlight and Microsoft</h2>
	</div>
</div>



			<div id="pagebody">
				<div id="pagebody-inner" class="pkg">
					<div id="alpha">
						<div id="alpha-inner" class="pkg">
							<!-- content nav -->
<p class="content-nav">
	<a href="http://www.iunknown.com/2007/05/rounding_up_dlr.html">&laquo; Rounding up DLR questions</a> |
	<a href="http://www.iunknown.com/">Main</a>
	| <a href="http://www.iunknown.com/2007/05/dlr_running_on_.html">DLR Running on Mono &raquo;</a>
</p>

<!-- entry -->
	<h2 class="date-header">May 14, 2007</h2>


<div class="entry-author-john_lam entry-type-post entry" id="entry-34045304">
			<h3 class="entry-header">Modularity, Ruby and Doing the Right Thing</h3>
	
	<div class="entry-content">
		<div class="entry-body">
			<p><a title="Photo Sharing" href="http://www.flickr.com/photos/john_lam/493308712/"><img height="375" alt="DSCF0469.jpg" src="http://farm1.static.flickr.com/210/493308712_9d3208c18e.jpg" width="500"></a>  <p>It seems like we stirred up some controversy with <a href="http://www.iunknown.com/2007/05/postdemo_hangov.html">these lines of code in our demo</a>:</p> <p>JS = require 'foo.js'<br>...<br>JS.initialize</p> <p>Let's&nbsp;be clear about what this code does: it creates a&nbsp;ScriptModule (a DLR type) that represents the execution context of the foo.js code, and assigns it to the JS constant. The JS.initialize line calls the initialize method in foo.js. This is a user-defined method, and not some kind of DLR initialization thing. </p> <p>We debated the idea of using require to import foreign modules in my office for a very short period of time before checking in the change. It seemed like a natural thing to do - monkey-patch the require method so that we can import foreign modules into IronRuby.</p> <p>Nobody has argued that importing foreign modules into IronRuby is a bad idea.[1] Rather, I think that folks have taken issue with using require as the mechanism for doing so.</p> <p>Point taken. We will have a different mechanism for doing so in the future. </p> <p>But this brings up an important meta-level issue: our commitment to doing the right thing. It seems that our intentions in this area have been called into question. We have a fairly straightforward task here: to make a CLR implementation of the Ruby language that is as compatible as we can make it. So when we have a design decision to make, it's driven by "how does the native Ruby implementation&nbsp;handle it"?&nbsp;</p> <p>We here on the IronRuby team are under no illusion that we will be 100% compatible with the existing Ruby 1.8.x branch. But we will get as close as we can and bend over backwards to ensure that it is so. And I expect that you guys will keep us honest in this regard when it seems like we made a bad design decision.[2] </p> <p>Pure Ruby code should just work, and code that depends on native platform libraries will have to be ported (either by us porting the native platform libraries or by folks modifying the code to work with our native platform libraries aka the Framework Class Libraries). </p> <p>Please do speak up when we post code frags, demos (and eventually source). We're really interested in what you have to say !</p> <p>[1]&nbsp;Keep in mind that we wanted to demo something interesting at MIX (cross-language interop) and that using Ruby (the least mature of our language implementations) as the glue to bind other code together seemed to be the right thing to do. However, at that time we couldn't solicit input from the community since we were in stealth mode.</p> <p>[2] While I don't think that overloading require was a bad design decision (nobody has given us a concrete example that shows where this breaks their app / library), it's controversial enough and the fix simple enough to do that I have no problem doing it.</p></p>

		</div>
		
					<script src="http://feeds.feedburner.com/~s/LessIsBetter?i=http%3A%2F%2Fwww.iunknown.com%2F2007%2F05%2Fmodularity_ruby.html" type="text/javascript"></script>
		
	</div>
	<div class="entry-footer">
					<p class="entry-footer-info">
				<span class="post-footers">Posted at 02:10 PM </span> <span class="separator">|</span> <a class="permalink" href="http://www.iunknown.com/2007/05/modularity_ruby.html">Permalink</a>
			</p>
		
		<!-- technorati tags -->
	


		<!-- post footer links -->


	</div>
</div>




		<div class="trackbacks">
		<a id="trackback"></a>
		<h3 class="trackbacks-header">TrackBack</h3>
		<div class="trackbacks-info">
			<p>TrackBack URL for this entry:<br /><span class="trackbacks-link">http://www.typepad.com/services/trackback/6a00d834fc885d53ef00d835153adb53ef</span></p>
			<p>Listed below are links to weblogs that reference <a href="http://www.iunknown.com/2007/05/modularity_ruby.html">Modularity, Ruby and Doing the Right Thing</a>:</p>
		</div>
		<div class="trackbacks-content">
			
		</div>
	</div>




        
        <a id="comments"></a>
	<div class="comments" id="all-comments">
		<h3 class="comments-header">Comments</h3>
		
		<div class="comments-content" id="comments-content">
                <!-- comment list --><a id="c69474628"></a>
<div class="comment comment-odd" id="comment-69474628">
    <div class="comment-content" id="comment-69474628-content">
        <span id="comment-69474628-content"><p>I think the ability to maintain the way the native Ruby implementation is done is very important.  Ideally, only when you need to introduce features that are platform dependent should you deviate.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://www.developernotes.com" href="http://www.developernotes.com">Nick Parker</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69474628#comment-6a00d834fc885d53ef00d8354fb38769e2">May 14, 2007 at 04:55 PM</a>
    </p>
</div><a id="c69478526"></a>
<div class="comment comment-even" id="comment-69478526">
    <div class="comment-content" id="comment-69478526-content">
        <span id="comment-69478526-content"><p>:) That&#39;s one of the things that really change when you join Microsoft: all of a sudden, any decision made in good faith get called into question as being part of the Evil Empire&#39;s master plan.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://weblogs.asp.net/bleroy" href="http://weblogs.asp.net/bleroy">Bertrand Le Roy</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69478526#comment-6a00d834fc885d53ef00d8351a5fe553ef">May 14, 2007 at 05:49 PM</a>
    </p>
</div><a id="c69507536"></a>
<div class="comment comment-odd" id="comment-69507536">
    <div class="comment-content" id="comment-69507536-content">
        <span id="comment-69507536-content"><p>I&#39;m not a Rubyist so I don&#39;t know all of its design guidelines and code peculiarities, but I think overloading &#39;require&#39; is Just The Right Thing To Do. Perhaps because I&#39;m used to C# and Python&#39;s way of doing it which is similar to the way you&#39;ve done it in IronRuby. I think it makes sense.</p>

<p>What are the objections people have to overloading &#39;require&#39;? Is it that it doesn&#39;t work in other Ruby implementations? If so, can&#39;t this be proposed to the Ruby guys to be specified and implemented in a future Ruby version (perhaps 1.9 or even 1.8)? Would that be so bad? I&#39;d love to hear the different opinions on this.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://profile.typepad.com/asbjornu" href="http://profile.typepad.com/asbjornu">asbjornu</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69507536#comment-6a00d834fc885d53ef00d8351a887453ef">May 15, 2007 at 02:55 AM</a>
    </p>
</div><a id="c69508574"></a>
<div class="comment comment-even" id="comment-69508574">
    <div class="comment-content" id="comment-69508574-content">
        <span id="comment-69508574-content"><p>Here&#39;s my 2c. Microsoft earned my trust by trying very hard to keep IronPython compatible with CPython. I hope this extends to IronRuby as well.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        Seo Sanghyeon |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69508574#comment-6a00d834fc885d53ef00d8351a8a1153ef">May 15, 2007 at 03:17 AM</a>
    </p>
</div><a id="c69558370"></a>
<div class="comment comment-odd" id="comment-69558370">
    <div class="comment-content" id="comment-69558370-content">
        <span id="comment-69558370-content"><p>require returns a boolean result. We played a bit fast and loose by returning a ScriptModule reference to indicate true (which won&#39;t break code that depends on type: (puts &#39;true&#39; if require &#39;foo.js&#39;) will just work).</p>

<p>Dependencies on the negative result are what worry me. One time initialization code would be a good example - we would still need to return the ScriptModule reference but then there would be no good way of detecting whether the foreign module had been included already. It&#39;s this latter case (which BTW nobody brought up in private mail) that worried me enought to change the behavior.</p>

<p>I would imagine that we would be using the IronPython clr.Use() mechanism to require foreign modules - this lets us precisely define the semantics without worrying about breaking existing code.</p>

<p>However, there is a trade-off of requiring folks to learn yet another concept. In RubyCLR, most of the questions on the mailing list were related to not understanding when to use reference vs. require (or even knowing that reference existed at all).</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://www.iunknown.com" href="http://www.iunknown.com">John Lam</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69558370#comment-6a00d834fc885d53ef00d83550298a69e2">May 15, 2007 at 09:04 AM</a>
    </p>
</div><a id="c69612932"></a>
<div class="comment comment-even" id="comment-69612932">
    <div class="comment-content" id="comment-69612932-content">
        <span id="comment-69612932-content"><p>John, I&#39;m glad you explained the incompatibilities you introduced for SilverLight/DLR integration of IronRuby. But I would strongly caution you against making ANY such changes or enhancements to the language or libraries until you are well down the road to compatibility. There are two big reasons for this:</p>

<p>- Without a spec and without being able to look at other implementations&#39; code, you have a massive challenge in creating a compatible implementation of Ruby. Making selective changes, no matter how well-thought-out, will only make that task harder...and you may unknowingly break compatibility in unfixable ways.</p>

<p>- Such changes, even accompanied by reasonable explanations, are going to be skewered by a mostly Microsoft-unfriendly crowd. Regardless of your good intentions, you need to be extra careful to color inside the lines, or you risk alienating the users you seek to eventually please.</p>

<p>So then, specific reasons why these changes are already dangerous (and why it&#39;s a good thing if you&#39;re planning to remove them):</p>

<p>- RubyGems and other libraries install their own require hooks. If you are enhancing the capabilities of require, you are very likely breaking those libraries. And with RubyGems such a key, core framework, that seems really dangerous to do.</p>

<p>- initialize has a very well-understood meaning in the Ruby world, and having it be public and callable, much less having it set up a DLR component in a Ruby-incompatible way, goes against that meaning. Perhaps you have a DLR-level or SilverLight-level limitation here, but you&#39;re really asking for trouble making this kind of change.</p>

<p>In general, if you want to be compatible with Ruby, you&#39;re going to have to consider Ruby&#39;s needs first, and DLR/SilverLight&#39;s needs second. And yes, that means considering the community you want to support over your employer, if their goals do not follow the same paths. I hope you will be able to do that, and I hope you&#39;ll let me know how I can help.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://headius.blogspot.com" href="http://headius.blogspot.com">Charles Oliver Nutter</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69612932#comment-6a00d834fc885d53ef00d835507d0769e2">May 15, 2007 at 05:04 PM</a>
    </p>
</div><a id="c69613548"></a>
<div class="comment comment-odd" id="comment-69613548">
    <div class="comment-content" id="comment-69613548-content">
        <span id="comment-69613548-content"><p>John, you know my opinions on this, and I agree very much with Charles. The Ruby community wants you to succeed in building a totally compatible Ruby implementation and we other implementors would like to help you as much as possible.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://ola-bini.blogspot.com" href="http://ola-bini.blogspot.com">Ola Bini</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69613548#comment-6a00d834fc885d53ef00d835507e1b69e2">May 15, 2007 at 05:15 PM</a>
    </p>
</div><a id="c69631684"></a>
<div class="comment comment-even" id="comment-69631684">
    <div class="comment-content" id="comment-69631684-content">
        <span id="comment-69631684-content"><p>Thanks for the kind words of advice, Charlie. </p>

<p>In the case of initialize, how would you suggest handling it? This is calling a JS function, not a Ruby function. Since it&#39;s perfectly legal to define a method called initialize in JS, how should this behave - especially since we&#39;re invoking it through an explicit ScriptModule qualifier.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://www.iunknown.com" href="http://www.iunknown.com">John Lam</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69631684#comment-6a00d834fc885d53ef00d8351b3e9053ef">May 15, 2007 at 10:05 PM</a>
    </p>
</div><a id="c69637024"></a>
<div class="comment comment-odd" id="comment-69637024">
    <div class="comment-content" id="comment-69637024-content">
        <span id="comment-69637024-content"><p>Re: initialize.</p>

<p>Here&#39;s a related case in Jython. &quot;print&quot; is a Python keyword, but Java&#39;s System.out has &quot;print&quot; method. Jython appends an underscore when Java method names conflict with Python keywords.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        Seo Sanghyeon |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69637024#comment-6a00d834fc885d53ef00d8351b41d753ef">May 16, 2007 at 12:23 AM</a>
    </p>
</div><a id="c69639324"></a>
<div class="comment comment-even" id="comment-69639324">
    <div class="comment-content" id="comment-69639324-content">
        <span id="comment-69639324-content"><p>Thanks for explaining it, John. I hope that your approach and outreach to the Ruby community can result in a uniform and compatible solution across all Ruby implementations.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        Asbjørn Ulsberg |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69639324#comment-6a00d834fc885d53ef00d8351b461e53ef">May 16, 2007 at 01:23 AM</a>
    </p>
</div><a id="c69640860"></a>
<div class="comment comment-odd" id="comment-69640860">
    <div class="comment-content" id="comment-69640860-content">
        <span id="comment-69640860-content"><p>Hi John</p>

<p>I think striving for (at least partial, or even with lower performance) compatibility with native libraries (including gems) is strategic.</p>

<p>I for sure realize it&#39;s a challenging task , but it would change the possibilities by an order of magnitude - and the market share too.</p>

<p>kind regards - Thibaut</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://www.dotnetguru2.org/tbarrere" href="http://www.dotnetguru2.org/tbarrere">Thibaut Barrère</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69640860#comment-6a00d834fc885d53ef00d8351b4f3353ef">May 16, 2007 at 01:59 AM</a>
    </p>
</div><a id="c69760576"></a>
<div class="comment comment-even" id="comment-69760576">
    <div class="comment-content" id="comment-69760576-content">
        <span id="comment-69760576-content"><p>What does it mean for an open source project to be in stealth mode? </p>

<p>Perhaps I am mistaken and ironruby is not open source.<br />
</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        Malcontent |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69760576#comment-6a00d834fc885d53ef00d83560f5ed69e2">May 17, 2007 at 05:00 AM</a>
    </p>
</div><a id="c69761508"></a>
<div class="comment comment-odd" id="comment-69761508">
    <div class="comment-content" id="comment-69761508-content">
        <span id="comment-69761508-content"><p>Hi John,</p>

<p>I think that it would be a better idea to put the &quot;new features&quot; in a separate module. Otherwise, it will be hard to port code written for IronRuby to another Ruby implementation.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://zimbatm.oree.ch" href="http://zimbatm.oree.ch">zimbatm</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69761508#comment-6a00d834fc885d53ef00d83560f78b69e2">May 17, 2007 at 05:12 AM</a>
    </p>
</div><a id="c69800606"></a>
<div class="comment comment-even" id="comment-69800606">
    <div class="comment-content" id="comment-69800606-content">
        <span id="comment-69800606-content"><p>@Malcontent,</p>

<p>Wow, you just like to travel around the blogosphere and attempt to stir up trouble, don&#39;t ya.</p>

<p>Are you of the belief that a project must be broadcast from the mountain tops well ahead of the time that its ready to be broadcast to qualify as open? Is a birthday party not really a birthday party if it&#39;s a surprise birthday party?</p>

<p>Open or closed source, strategy matters.</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        <a rel="nofollow" target="_blank" title="http://xmlhacker.com/" href="http://xmlhacker.com/">M. David Peterson</a> |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=69800606#comment-6a00d834fc885d53ef00d8352f36ae53ef">May 17, 2007 at 12:32 PM</a>
    </p>
</div><a id="c71259368"></a>
<div class="comment comment-odd" id="comment-71259368">
    <div class="comment-content" id="comment-71259368-content">
        <span id="comment-71259368-content"><p>Well, in Facets there&#39;s</p>

<p>  JS = Script.new(&#39;foo.js&#39;)</p>

<p>or</p>

<p>  module JS<br />
    module_require &#39;foo.js&#39;<br />
  end</p>

<p>I&#39;ve been looking for a better name for Script though. ScriptModule looks good.</p>

<p>T.<br />
</p></span>
    </div>
    <p class="comment-footer">
        Posted by:
        trans |
        <a href="http://www.iunknown.com/2007/05/modularity_ruby.html?cid=71259368#comment-6a00d834fc885d53ef00d83580cbb969e2">May 31, 2007 at 10:29 PM</a>
    </p>
</div>

		</div>
        
	</div>
    
    	<!-- comment form -->
<!-- comment-form-atp.tt -->

	
<div id="atp-comments">
    
        <div id="comment-preview" class="hiddenBox">
	<h3 id="header-verify-comment" class="comments-header hiddenBox">Verify your Comment</h3>
    <h3 id="header-preview-comment" class="comments-header hiddenBox">Previewing your Comment</h3>
	<div class="comments-content">
		<div class="comment">
			<div id="comment-preview-content" class="comment-content">
			</div>
			<p class="comment-footer">
				Posted by: 
				<span id="comment-preview-author"></span>&nbsp;|&nbsp;<span id="comment-preview-datetime"></span>
			</p>
		</div>
	</div>
</div>
<div id="comment-preview-confirmation" class="hiddenBox yellowBox">
    <p>This is only a preview. Your comment has not yet been posted.</p>
   	<form id="comment-preview-form"
   		method="post"
   		onsubmit="atpComments.interceptPost(commentFormNum); return false;">
		<input type="submit" name="post" id="comment-confirm-post" value="&nbsp;Post&nbsp;" onclick="atpComments.interceptPost(commentFormNum); return false;"/>		    
		<input type="submit" name="edit" id="comment-edit" value="&nbsp;&nbsp;Edit&nbsp;&nbsp;" onclick="atpComments.previewOnly(commentFormNum, 2); return false;"/>
        <span id="previewFormSpinner" class="hiddenBox"><img src="/.shared/images/spinner.gif" alt="Working..." /></span>
	</form>
</div>
<div id="comment-error" class="hiddenBox redBox">	    
   Your comment could not be posted. Error type: <span id="comment-error-msg"></span> 
</div>	
<div id="comment-complete" class="hiddenBox yellowGreenBox">
    Your comment has been posted. <a href="javascript:void 0;" onclick="window.location.hash='#comment-form';window.location.reload(false)">Post another comment</a>
</div>	
<div id="comment-captcha" class="hiddenBox yellowBox">	
    <div id="captchaText">
	    <p id="captchaFailMsg" class="captchaErrorText hiddenBox">The letters and numbers you entered did not match the image. Please try again.</p>	    	        
	    <p>As a final step before posting your comment, enter the letters and numbers you see in the image below. This prevents automated programs from posting comments.</p>
	    <p><span id="comment-captcha-viewalt">Having trouble reading this image? <a href="#comment-captcha" onClick="atpComments.generateCaptcha(commentFormNum);">View an alternate.</a></span></p>
    </div>
    <p class=""><img id="captchaImg" /></p>		
    <form id="comment-captcha-form" 
		  method="post"
		  onsubmit="atpComments.submitWithCaptcha(commentFormNum); return false;">
		<input type="hidden" name="captcha_chal" id="comment-captcha-chal" value="" />
        <p>
	        <input id="comment-captcha-text" name="captcha_text" size="10" />
        </p>
        <p>
            <input type="submit" name="continue" id="captcha-continue" value="&nbsp;Continue&nbsp;" />
            <span id="captchaFormSpinner" class="commentSpinner hiddenBox"><img src="/.shared/images/spinner.gif" alt="Working..." /></span>
        </p>
    </form>
</div>

    
	<div id="primary-comment-form" class="comment-form">
    	<form id="comment-form" action="http://www.typepad.com/services/comments"
    		method="post">
    		<input type="hidden" name="entry_xid" id="comment-entry-xid" value="6a00d834fc885d53ef00d835153adb53ef" />
                <input type="hidden" name="token" value="1250986801-1b990099390a76f3468530d4d24f866e6240bc2f:oGUAq3POnLfCJO9H" />
    		<div class="comments-open">
    			<h2 class="comments-open-header" id="comment-title">Post a comment</h2>
    			<div id="comments-open-content" class="comments-open-content">
    				
				
    									
    					<p id="comments-open-login" style="display: none;">
    													If you have a TypeKey or TypePad account, please
    							<a href="https://www.typekey.com/t/typekey/login?v=1.0&t=a4bd1789242f464efe4cbf77c77533737ef10402&lang=en_US&_return=http%3A%2F%2Fwww.iunknown.com%2F2007%2F05%2Fmodularity_ruby.html">Sign In</a>
    						
    					</p>
					
    					<p id="comments-open-logout" style="display: none;">
    						You are currently signed in as
    						<span id="commenter-name">(nobody)</span>.
    						<a href="http://www.iunknown.com/.services/sitelogout?to=https%3A%2F%2Fwww.typekey.com%2Ft%2Ftypekey%2F%3F__mode%3Dlogout%26_return%3Dhttp%253A%252F%252Fwww.iunknown.com%252F2007%252F05%252Fmodularity_ruby.html">Sign Out</a>
    					</p>
    				
                    	<div id="comments-open-text" style="display:none;">
        					<textarea id="comment-text" name="text" rows="10" cols="30" onkeyup="atpComments.maxTextArea(this, 64000);"></textarea>
            				
            				<p class="comments-open-subtext">
            				    (URLs automatically linked.)
            				</p>			
            				                    					
        				</div>
    				    <div id="comments-open-data" style="display:none;">
                            <p>Your Information</p>
                            <p>
                                (Name and email address are required. Email address will not be displayed with the comment.)
                            
                            </p>
    						<p>
    							<input id="comment-author" at:default="Name" name="author" size="30" value="Name" onfocus="if(this.value==this.getAttribute('at:default')) this.value='';"  onBlur="if(this.value=='') this.value=this.getAttribute('at:default');" class="grayText"/>
    							<label for="comment-author" id="comment-author-error" class="comment-error hiddenBox">Name is required to post a comment</label>
    						</p>
    						<p>
    							<input id="comment-email" at:default="Email Address" name="email" size="30" value="Email Address" onfocus="if(this.value==this.getAttribute('at:default')) this.value='';"  onBlur="if(this.value=='') this.value=this.getAttribute('at:default');" class="grayText"/>
    							<label for="comment-email" id="comment-email-error" class="comment-error hiddenBox">Please enter a valid email address</label>
    						</p>
    						<p>
    							<input id="comment-url" at:default="Web Site URL" name="url" size="30" value="Web Site URL" onfocus="if(this.value==this.getAttribute('at:default')) this.value='';"  onBlur="if(this.value=='') this.value=this.getAttribute('at:default');" class="grayText"/>
    							<label for="comment-url" id="comment-url-error" class="comment-error hiddenBox">Invalid URL</label>
    						</p>
    					</div>
    			</div>
                <div id="comments-open-footer" class="comments-open-footer" style="display:none;">
    				<input type="submit" name="post" id="comment-post-button" value="&nbsp;Post&nbsp;" onclick="atpComments.interceptPost(commentFormNum); return false;" disabled="true" />
    				<input type="submit" name="preview" id="comment-preview-button" value="&nbsp;Preview&nbsp;" onclick="atpComments.previewOnly(commentFormNum, 1); return false;" disabled="true" />
    				<span id="commentEntryFormSpinner" class="commentSpinner hiddenBox"><img src="/.shared/images/spinner.gif" alt="Working..." /></span>
    			</div>
    		</div>
    	</form>
        <noscript>
            
			<div id="comments-open-noscript" class="comments-open-noscript">
		        <form action="http://www.typepad.com/services/comments" method="post">
		            <input type="hidden" name="entry_xid" id="comment-entry-xid" value="6a00d834fc885d53ef00d835153adb53ef" />
                            <input type="hidden" name="token" value="1250986801-e579863427435ab45957ec514aaa953a849d3d1e:7UCSkynaDoqpOMsp" />
		            Name:<br /><input type="text" name="author" size="30" /><br />
		            Email address:<br /><input type="text" name="email" size="30" /><br />
		            URL:<br /><input type="text" name="url" size="30" /><br /><br />
		            Comment:<br /><textarea name="text" cols="40" rows="4"></textarea><br />
		            
		            <input type="submit" name="submit" value="Submit" />
		        </form>
			</div>
			
		</noscript>
	</div>
</div>



    
    	


						</div>
					</div>
					<div id="beta">
						<div id="beta-inner" class="pkg">
							
<!-- sidebar -->


<div class="module-typelist module">
	<h2 class="module-header">Facebook</h2>
	<div class="typelist-plain module-content">
		<ul class="module-list">
							<li class="module-list-item"><div class="typelist-note"><script src="http://badge.facebook.com/badge/685772348.209.1554076252.js"></script><noscript><a href="http://www.facebook.com/people/John_Lam/685772348">John Lam's Facebook profile</a></noscript></div></li>
			
		</ul>
	</div>
</div>

<div class="module-widget module" id="widget-FeedBurner_standard">
	<div class="module-content">
    	<a href="http://feeds.feedburner.com/LessIsBetter" 
title="Subscribe to my feed" rel="alternate" 
type="application/rss+xml"><img src="http://
www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="" 
style="border:0"/></a><a href="http://feeds.feedburner.com/
LessIsBetter" title="Subscribe to my feed" rel="alternate" 
type="application/rss+xml"></a>
	</div>
</div><div class="module-widget module" id="widget-FeedBurner_fb_feedcount">
	<div class="module-content">
    	<p><a href="http://feeds.feedburner.com/LessIsBetter"><img src="http://feeds.feedburner.com/~fc/LessIsBetter?bg=FF9900&amp;fg=000000&amp;anim=0" height="26" width="88" style="border:0" alt="" /></a></p>
	</div>
</div><div class="module-widget module" id="widget-Twitter_twitter_updates">
	<div class="module-content">
    	<h2 style="margin:0" class="module-header">Tweets</h2>
<ul class="module-list" id="twitter_update_list"></ul>
<a href="http://twitter.com/john_lam" id="twitter-link" style="display:block;text-align:right;">follow me on Twitter</a>
<script type="text/javascript" src="http://twitter.com/javascripts/typepad.js"></script>
<script type="text/javascript" src="http://twitter.com/statuses/user_timeline/john_lam.json?callback=twitterCallback2&count=5"></script>

	</div>
</div><div class="module-email module">
	<div class="module-content">
		<script type="text/javascript">
<!--
document.write('<a href="ma' + 'ilto:&#106;&#108;&#97;&#109;&#64;&#105;&#117;&#110;&#107;&#110;&#111;&#119;&#110;&#46;&#99;&#111;&#109;">Email Me</a>');
// -->
</script>

	</div>
</div>
<!-- about page link -->
<div class="module-about module">
	<h2 class="module-header"><a
		href="http://iunknown.typepad.com/about.html">About</a></h2>
</div>
<div class="module-typelist module">
	<h2 class="module-header">Photos</h2>
	<div class="typelist-plain module-content">
		<ul class="module-list">
							<li class="module-list-item"><div class="typelist-note"><!-- Start of Flickr Badge -->
<style type="text/css">
.zg_div {margin:0px 5px 5px 0px; width:117px;}
.zg_div_inner {border: solid 1px #000000; background-color:#ffffff;  color:#666666; text-align:center; font-family:arial, helvetica; font-size:11px;}
.zg_div a, .zg_div a:hover, .zg_div a:visited {color:#3993ff; background:inherit !important; text-decoration:none !important;}
</style>
<script type="text/javascript">
zg_insert_badge = function() {
var zg_bg_color = 'ffffff';
var zgi_url = 'http://www.flickr.com/apps/badge/badge_iframe.gne?zg_bg_color='+zg_bg_color+'&zg_person_id=23649168%40N00';
document.write('<iframe style="background-color:#'+zg_bg_color+'; border-color:#'+zg_bg_color+'; border:none;" width="113" height="151" frameborder="0" scrolling="no" src="'+zgi_url+'" title="Flickr Badge"><\/iframe>');
if (document.getElementById) document.write('<div id="zg_whatlink"><a href="http://www.flickr.com/badge.gne"	style="color:#3993ff;" onclick="zg_toggleWhat(); return false;">What is this?<\/a><\/div>');
}
zg_toggleWhat = function() {
document.getElementById('zg_whatdiv').style.display = (document.getElementById('zg_whatdiv').style.display != 'none') ? 'none' : 'block';
document.getElementById('zg_whatlink').style.display = (document.getElementById('zg_whatdiv').style.display != 'none') ? 'none' : 'block';
return false;
}
</script>
<div class="zg_div"><div class="zg_div_inner"><a href="http://www.flickr.com">www.<strong style="color:#3993ff">flick<span style="color:#ff1c92">r</span></strong>.com</a><br>
<script type="text/javascript">zg_insert_badge();</script>
<div id="zg_whatdiv">This is a Flickr badge showing public photos from <a href="http://www.flickr.com/photos/23649168@N00">John Lam</a>. Make your own badge <a href="http://www.flickr.com/badge.gne">here</a>.</div>
<script type="text/javascript">if (document.getElementById) document.getElementById('zg_whatdiv').style.display = 'none';</script>
</div>
</div>
<!-- End of Flickr Badge -->
</div></li>
			
		</ul>
	</div>
</div>

<div class="module-recent-comments module">
	<h2 class="module-header">Recent Comments</h2>
	<div class="module-content">
		<ul class="module-list">
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2007/06/vibrant_ink_vis.html?cid=6a00d834fc885d53ef0120a4f38075970b#comment-6a00d834fc885d53ef0120a4f38075970b">B</a> on <a href="http://www.iunknown.com/2007/06/vibrant_ink_vis.html">Vibrant Ink, Visual Studio and Vim settings</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2006/09/sun-shines-on-r.html?cid=6a00d834fc885d53ef0120a4d66ff2970b#comment-6a00d834fc885d53ef0120a4d66ff2970b">ramesh imran</a> on <a href="http://www.iunknown.com/2006/09/sun-shines-on-r.html">Sun Shines on Ruby</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/01/disable-that-annoying-beep-on-thinkpads-when-resuming-from-sleep.html?cid=6a00d834fc885d53ef01157180a4dc970b#comment-6a00d834fc885d53ef01157180a4dc970b">Elizabeth</a> on <a href="http://www.iunknown.com/2009/01/disable-that-annoying-beep-on-thinkpads-when-resuming-from-sleep.html">Disable that annoying beep on Thinkpads when resuming from Sleep</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html?cid=6a00d834fc885d53ef011570551a89970c#comment-6a00d834fc885d53ef011570551a89970c">Mr P</a> on <a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html?cid=6a00d834fc885d53ef01157114ed0c970b#comment-6a00d834fc885d53ef01157114ed0c970b">Brig Lamoreaux</a> on <a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2007/04/introducing_iro.html?cid=6a00d834fc885d53ef01156fe2fb95970c#comment-6a00d834fc885d53ef01156fe2fb95970c">website design New York City</a> on <a href="http://www.iunknown.com/2007/04/introducing_iro.html">Introducing IronRuby</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2007/06/vibrant_ink_vis.html?cid=6a00d834fc885d53ef01156fc5c3a0970c#comment-6a00d834fc885d53ef01156fc5c3a0970c">Dutt</a> on <a href="http://www.iunknown.com/2007/06/vibrant_ink_vis.html">Vibrant Ink, Visual Studio and Vim settings</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html?cid=6a00d834fc885d53ef011570b4f76a970b#comment-6a00d834fc885d53ef011570b4f76a970b">John Lam</a> on <a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html?cid=6a00d834fc885d53ef01156fbfa796970c#comment-6a00d834fc885d53ef01156fbfa796970c">caddzooks</a> on <a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a>
			</li>
			<li class="module-list-item">
				<a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html?cid=6a00d834fc885d53ef01157091a02a970b#comment-6a00d834fc885d53ef01157091a02a970b">John Lam</a> on <a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a>
			</li>
		</ul>
	</div>
</div>	<div class="module-archives module">
		<h2 class="module-header">Recent Posts</h2>
		<div class="module-content">
			<ul class="module-list">
														<li class="module-list-item"><a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">Dynamic Languages at TechEd 2009</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2009/01/disable-that-annoying-beep-on-thinkpads-when-resuming-from-sleep.html">Disable that annoying beep on Thinkpads when resuming from Sleep</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2009/01/hello-2009.html">Hello, 2009</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/10/pdc-2008-wrap-up.html">PDC 2008 Wrap-up</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/09/the-fukuoka-ruby-delegation.html">The Fukuoka Ruby Delegation</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/08/my-dev-kit.html">My Dev Kit</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/07/ironruby-at-oscon.html">IronRuby at OSCON</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/06/ironruby-and-aspnet-mvc.html">IronRuby and ASP.NET MVC</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/06/ironruby-at-tech-ed-2008.html">IronRuby at Tech Ed 2008</a></li>
					
														<li class="module-list-item"><a href="http://www.iunknown.com/2008/05/ironruby-and-rails.html">IronRuby and Rails</a></li>
					
				
			</ul>
		</div>
	</div>
	<div class="module-archives module">
		<h2 class="module-header"><a href="http://www.iunknown.com/archives.html">Archives</a></h2>
		<div class="module-content">
												<ul class="module-list">
				
				<li class="module-list-item"><a href="http://www.iunknown.com/2009/05/index.html">May 2009</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2009/01/index.html">January 2009</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/10/index.html">October 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/09/index.html">September 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/08/index.html">August 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/07/index.html">July 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/06/index.html">June 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/05/index.html">May 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/04/index.html">April 2008</a></li>
				
							
				<li class="module-list-item"><a href="http://www.iunknown.com/2008/03/index.html">March 2008</a></li>
									</ul>
									<p class="module-more"><a href="http://www.iunknown.com/archives.html">More...</a></p>
				
				
			
		</div>
	</div>

<div class="module-calendar module">
	<h2 class="module-header">May 2009</h2>
	<div class="module-content">
		<table summary="Monthly calendar with links to each day's posts">
			<tr>
									<th>Sun</th>
									<th>Mon</th>
									<th>Tue</th>
									<th>Wed</th>
									<th>Thu</th>
									<th>Fri</th>
									<th>Sat</th>
				
			</tr>
							<tr>
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>1</td>
				
							
					<td>2</td>
				</tr>
							<tr>
					<td>3</td>
				
							
					<td>4</td>
				
							
					<td>5</td>
				
							
					<td>6</td>
				
							
					<td>7</td>
				
							
					<td>8</td>
				
							
					<td>9</td>
				</tr>
							<tr>
					<td>10</td>
				
							
					<td>11</td>
				
							
					<td>12</td>
				
							
					<td>13</td>
				
							
					<td>14</td>
				
							
					<td>15</td>
				
							
					<td>16</td>
				</tr>
							<tr>
					<td>17</td>
				
							
					<td><a href="http://www.iunknown.com/2009/05/dynamic-languages-at-teched-2009.html">18</a></td>
				
							
					<td>19</td>
				
							
					<td>20</td>
				
							
					<td>21</td>
				
							
					<td>22</td>
				
							
					<td>23</td>
				</tr>
							<tr>
					<td>24</td>
				
							
					<td>25</td>
				
							
					<td>26</td>
				
							
					<td>27</td>
				
							
					<td>28</td>
				
							
					<td>29</td>
				
							
					<td>30</td>
				</tr>
							<tr>
					<td>31</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				
							
					<td>&nbsp;</td>
				</tr>
			
		</table>
	</div>
</div>
<!-- powered by -->
<div class="module-powered module">
	<div class="module-content">
		<a href="http://www.typepad.com/" title="Blog">Blog</a> powered by <a href="http://www.typepad.com/" title="TypePad">TypePad</a>
	</div>
</div>





						</div>
					</div>
				</div>
			</div>
			

		</div>
	</div>
	
<!-- c 6a00d834fc885d53ef00d83531ed5d69e2 disabled -->
<script type="text/javascript">
<!--
var extra_happy = Math.floor(1000000000 * Math.random());
document.write('<img src="http://www.typepad.com/t/stats?blog_id=1292386&amp;user_id=2419952&amp;page=' + escape(location.href) + '&amp;referrer=' + escape(document.referrer) + '&amp;i=' + extra_happy + '" width="1" height="1" alt="" style="position: absolute; top: 0; left: 0;" />');
// -->
</script>

<!-- Start Quantcast tag -->
<script type="text/javascript" src="http://edge.quantserve.com/quant.js"></script>
<script type="text/javascript">_qoptions = { tags:"typepad.extended" }; _qacct="p-fcYWUmj5YbYKM"; quantserve();</script>
<noscript>
<a href="http://www.quantcast.com/p-fcYWUmj5YbYKM" target="_blank"><img src="http://pixel.quantserve.com/pixel/p-fcYWUmj5YbYKM.gif?tags=typepad.extended" style="display: none" border="0" height="1" width="1" alt="Quantcast"/></a>
</noscript>
<!-- End Quantcast tag -->
</body>
</html>

<script type="text/javascript">
var captchaImgAttempts = 0;
var allowAnonComments = '0';
var registrationRequired = 0;
var registrationOptional = 1;
var emailRequired = 1;
var jsonURL = "/.services/json-rpc";

var captchaSrc = "/.services/captcha?code_encrypted=";
var alertCommentCannotBeBlank = "You can not leave an empty comment. Please enter some text in the Comment field.";
var alertEditingExpired = "Sorry, you're no longer allowed to edit this comment. You may have taken too much time before submitting your edit or someone may have already replied to it.";

var alertAuthorCannotBeBlank = "Name must not be blank.";
var alertEmailCannotBeBlank = "Email Address must not be blank.";
var alertAuthorAndEmailCannotBeBlank = "Name and email address are both required!";
var alertEmailIsInvalid = "The Email Address you entered is invalid. Please enter a valid email address.";
var alertUnauthorizedAction = "The comments on this post are closed.";
var msgPostReplyTo = "Reply to ";  
var msgInReplyTo = "In reply to ";
var msgPostAComment = "Post a comment ";
var atpCommentsPath = "/.shared/js/atpcomments_yui.js?v=3";
var hasChanged = 0;
var hostName = ".iunknown.com";
var tp_comment_token = "1250986802-42128435e6adaa4a4815d690a7fe299a95742f24:jg72odRT8dKahccn";

var isPage = 0;
var blog_xid = "6a00d834fc885d53ef00d83531ed5d69e2";
var xid = "";
var injectCode = '<div id=\"comment-preview\" class=\"hiddenBox\">\n\t<h3 id=\"header-verify-comment\" class=\"comments-header hiddenBox\">Verify your Comment<\/h3>\n    <h3 id=\"header-preview-comment\" class=\"comments-header hiddenBox\">Previewing your Comment<\/h3>\n\t<div class=\"comments-content\">\n\t\t<div class=\"comment\">\n\t\t\t<div id=\"comment-preview-content\" class=\"comment-content\">\n\t\t\t<\/div>\n\t\t\t<p class=\"comment-footer\">\n\t\t\t\tPosted by: \n\t\t\t\t<span id=\"comment-preview-author\"><\/span>&nbsp;|&nbsp;<span id=\"comment-preview-datetime\"><\/span>\n\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n<div id=\"comment-preview-confirmation\" class=\"hiddenBox yellowBox\">\n    <p>This is only a preview. Your comment has not yet been posted.<\/p>\n   \t<form id=\"comment-preview-form\"\n   \t\tmethod=\"post\"\n   \t\tonsubmit=\"atpComments.interceptPost(commentFormNum); return false;\">\n\t\t<input type=\"submit\" name=\"post\" id=\"comment-confirm-post\" value=\"&nbsp;Post&nbsp;\" onclick=\"atpComments.interceptPost(commentFormNum); return false;\"/>\t\t    \n\t\t<input type=\"submit\" name=\"edit\" id=\"comment-edit\" value=\"&nbsp;&nbsp;Edit&nbsp;&nbsp;\" onclick=\"atpComments.previewOnly(commentFormNum, 2); return false;\"/>\n        <span id=\"previewFormSpinner\" class=\"hiddenBox\"><img src=\"/.shared/images/spinner.gif\" alt=\"Working...\" /><\/span>\n\t<\/form>\n<\/div>\n<div id=\"comment-error\" class=\"hiddenBox redBox\">\t    \n   Your comment could not be posted. Error type: <span id=\"comment-error-msg\"><\/span> \n<\/div>\t\n<div id=\"comment-complete\" class=\"hiddenBox yellowGreenBox\">\n    Your comment has been posted. <a href=\"javascript:void 0;\" onclick=\"window.location.hash=\'#comment-form\';window.location.reload(false)\">Post another comment<\/a>\n<\/div>\t\n<div id=\"comment-captcha\" class=\"hiddenBox yellowBox\">\t\n    <div id=\"captchaText\">\n\t    <p id=\"captchaFailMsg\" class=\"captchaErrorText hiddenBox\">The letters and numbers you entered did not match the image. Please try again.<\/p>\t    \t        \n\t    <p>As a final step before posting your comment, enter the letters and numbers you see in the image below. This prevents automated programs from posting comments.<\/p>\n\t    <p><span id=\"comment-captcha-viewalt\">Having trouble reading this image? <a href=\"#comment-captcha\" onClick=\"atpComments.generateCaptcha(commentFormNum);\">View an alternate.<\/a><\/span><\/p>\n    <\/div>\n    <p class=\"\"><img id=\"captchaImg\" /><\/p>\t\t\n    <form id=\"comment-captcha-form\" \n\t\t  method=\"post\"\n\t\t  onsubmit=\"atpComments.submitWithCaptcha(commentFormNum); return false;\">\n\t\t<input type=\"hidden\" name=\"captcha_chal\" id=\"comment-captcha-chal\" value=\"\" />\n        <p>\n\t        <input id=\"comment-captcha-text\" name=\"captcha_text\" size=\"10\" />\n        <\/p>\n        <p>\n            <input type=\"submit\" name=\"continue\" id=\"captcha-continue\" value=\"&nbsp;Continue&nbsp;\" />\n            <span id=\"captchaFormSpinner\" class=\"commentSpinner hiddenBox\"><img src=\"/.shared/images/spinner.gif\" alt=\"Working...\" /><\/span>\n        <\/p>\n    <\/form>\n<\/div>\n'; 
var commentFormNum;
var entryPermalink = "http://www.iunknown.com/2007/05/modularity_ruby.html";
var inlineReply = document.createElement("div");
var commentFooterLinks;
var commentHeader;
var commentReplyXID;
var commentReplyAuthor;
var commentReplyComplete;
var inlineReplyLoaded = 0;

function xidToCommentPermalink (entryUrl, xid) {
    return entryUrl + "?cid=" + xid + "#comment-" + xid;
}

</script>
<script type="text/javascript" src="/.shared/js/yui/yuiloader-beta-min.js"></script>
<script type="text/javascript" src="/.shared/js/atpcomments.js?v=3"></script>

<!-- ph=1 -->
<!-- nhm:from_kauri -->

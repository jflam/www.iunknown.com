
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Game Programming All in One, Second Edition
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=1592003834" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8xNTkyMDAzODM0LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEdhbWUgUHJvZ3JhbW1pbmcgQWxsIGluIE9uZSwgU2Vjb25kIEVkaXRpb247Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEpvbmF0aGFuIFMuIEhhcmJvdXI7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ0OS45OTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDMyLjk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0LjU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDc7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMTU5MjAwMzgzNC9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PHA8cDxsPFZpc2libGU7PjtsPG88Zj47Pj47PjtsPGk8MD47aTwxPjs+O2w8dDxAPFxlOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxcZTs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz6diYzb1LVxszThfywJKI0XNH127w==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/1592003834.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Game Programming All in One, Second Edition</span>
        <div class="ItemDetail">By
          <span id="Authors">Jonathan S. Harbour</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$49.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$32.99</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">7</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/1592003834/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Effective game development intro for any programmer</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2005-04-17</span>
                    </div>
                    <span>   Game Programming All in One, by Jonathan Harbour.  (This is NOT 3D Game Programming All in One, which is a Torque tutorial.)  It uses C to program the Allegro game library (a multi-platform library).  Even a VB.Net programmer will find the C language easily understandable in its listings.  It comes with a CD that contains the Dev-C++ C compiler (much easier to use than Visual C++), the open-source Allegro game engine, the MappyAL game map designer, and a load of royalty-free sprites.
<br />
<br />    The book explores horizontal and vertical scrollers, animated sprites, collision detection and gravity effects, as well as sound functions.  As far as learning C, a programmer of just about any language will find that a non-issue with this book.  At most, you might need to refer to Sams Teach Yourself C++ in 10 Minutes, to clarify some of the funny C symbology, such as
<br />
<br />myobject->length
<br />
<br />   Since Allegro is open source, its comprehensive documentation is somewhat disorganized (~120 pages with no TOC or index), and is mainly useful for looking up some particular syntax.  The Harbour book, on the other hand, is well organized, and covers all of the essential aspects (except 3D) in a systematic way, with admirably clear demo code (most of which is presented in the context of a functional game).  Allegro does 3D as well as 2D, but that is beyond the scope of the book.  After reading the book, you would have to dig the 3D functions out of the Allegro documentation, or go on-line to the numerous Allegro user sites for tutorials.  The book provides a number of URLs for these sites.
<br />
<br />    Now about Allegro.  It supports the following operating systems (and more): Mac OS X, Windows, MS-DOS, IRIX, Linux, Darwin, FreeBSD, BeOS and QNX.  It does 2D and 3D functions, and for Windows compilers generates specific calls to DirectX 8.
<br /> 
<br />Some specifics:
<br />Raster operations        - lines, geometric shapes, Beziers, etc.
<br />Filling
<br />2D Sprites                  - masks, run-length encoding, compiled sprites, translucency, lighting
<br />Bitmaps                     - blitting, rotation, scaling, clipping
<br />3D Polygons               - wireframe, flat-shaded, gouraud-shaded, texture-mapped, z-buffered
<br />Scrolling                     - double or triple-buffered, hardware-scrolling
<br />Animation                   - flip-book animated bitmaps, FLI/FLC playback
<br />Windows Drivers         - Direct X windowed and full-screen, GDI device contexts
<br />DOS Drivers               - Bunches of drivers for DOS as well as for all supported OSs
<br /> 
<br />Sound:
<br />Wavetable MIDI          - volume, pitch, pan, blend, drum mappings
<br />Digital Sound             - 64 channels, forward, reverse, pitch, pan
<br />Windows & DOS Drivers - WaveOut Direct Sound, Windows Sound System, AdLib, SB, SBPro, SB16, AWE32, MPU-401, ESS Audio drive, Ensoniq
<br /> 
<br />Other Features:
<br />Device Input                - mouse, keyboard, joystick
<br />Timers                        - Hi-res timers, interrupts, vertical-retrace
<br />Compression               - read/write LZSS compression files
<br />Data Files                   - Multi-object data files, encryption, compression
<br />Math Functions           - Fixed Point arithmetic, trigonometric lookup tables
<br />3D Functions              - vector, matrix, quaternion manipulation
<br />Text Output                 - Proportional fonts, UTF-8, UTF-16, Unicode
<br /> 
<br />    Oh!  Did I mention that Allegro is free and royalty-free?  It doesn't have a physics engine, but since gravity and momentum are easy computations, and collision can be easily handled with bounding spheres and boxes, I think Allegro is an amazing bargain.  But I don't think I would have the patience to learn it from scratch by using just its own documentation.
<br />
<br />    The MappyAL map editor, which also comes with the book, allows you to import a set of tile bitmaps as a source pallet of tiles and draw them onto a map of just about any size, in up to 5 layers.  Each drawn tile can hold up to 7 embedded data values, and can be toggled for collision.  Among the many output options is a CSV list of the entire map containing the tile indexes.  MappyAL is also free and royalty-free.  When referenced into an Allegro-based C program, MappyAL is tightly integrated, automating many of its features.
<br />
<br />FOR TEACHING A CLASS?
<br />   Since this is a Thomson/Course Technology book, college instructors may wonder if it is suitable for teaching a class on game programming.  It certainly is. (Appropriate prerequisites would be either a semester of C or C++, or two semesters of VB.Net.)  This would allow each student to build several complete games for his or her portfolio during the span of a single semester.  Attempting to include meaningful 3D game development in this first semester course would up the ante of prerequisites to an unacceptable level.  Make 3D a second semester of game development.
<br />
<br />   Also for would-be instructors, all the required software comes FREE with the book.  One down-side for an instructor is that there is little course support accompanying this book.  Yes, there are end-of-chapter questions, but they are not particularly exam material.  There is no syllabus, no teaching notes, and no PowerPoint slides.  As a teacher, I just say, "so what."  Standard course support is probably meaningless for this particular subject area.
<br />
<br />BIGGEST COMPLAINT:
<br />Getting the Allegro libraries properly installed and compiled, so you can begin the book, is quite troublesome.  Unfortunately, the comfortable narrative style of the main body of the text is continued in the two appendixes that explain the excruciating process of setting up Allegro.  A numbered, step-by-step list would remove much of the present ambiguity in the instructions.  Contributing to the confusion is the merging of steps among the several compilers explicitly supported: "It's exactly the same, except for these differences."  Boo!  Present separate, step-by-step lists in the next edition.
<br />
<br />CONCLUSION:  This is a great book for new game developers.  The writing is lucid, and should be easily understandable to a programmer with moderate experience in just about any language.  VB guys, have no fear.  College instructors will have as much fun as their students.  Since the Allegro game library also includes support for 3D game development, none of the material learned here will go to waste.</span>
                  
                    <div class="CustomerReviewSummary">A note from the author</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2005-01-12</span>
                    </div>
                    <span>This book is the second edition to the bestselling Game Programming All In One. This new second edition is a complete rewrite of Game Programming All In One with a completely new direction, new goals, new assumptions, and new development tools. All In One 2E has done away with the C++ tutorials, Windows programming tutorials, and DirectX tutorials. In fact, this book does not cover Windows or DirectX at all. Instead this book focuses on game programming using a cross-platform game library called Allegro. This library is extremely powerful and versatile. Allegro opens up a world of possibilities that are ignored when focusing specifically on Windows and DirectX. A full quarter of the first edition was devoted to a C++ language primer, while another fourth of the book focused on Windows and DirectX basics. I decided that for this second edition we did not need to cover those subjects again, and thus this book uses the standard C language and the sample programs will compile on multiple platforms.
<br />
<br />The Windows version of Allegro uses DirectX, as a matter of fact, but it is completely abstracted and hidden inside the internals of the Allegro Game Library. What we are provided instead is a basic C program that includes the Allegro library and is capable of running in fullscreen DirectDraw mode using any supported resolution and color depth. 
<br />
<br />Additionally, Allegro provides a uniform interface for sound effects, music, device input, which are implemented on the Windows platform with DirectSound, DirectMusic, and DirectInput. Specifically, Allegro supports DirectX 8. Imagine writing a high-speed arcade game using DirectX, and then being able to recompile that program (without changing a single line of code!) under Linux, Mac, Solaris, FreeBSD, Irix, and other operating systems? Allegro is a cross-platform game library that will double or triple the user base for your games with the help of this book.
<br />
<br />This book will teach you to write complete games that will run on just about any operating system. Specifically, we focus on three compilers: Visual C++, Dev-C++, and KDevelop, and the sample programs will be written using both Windows and Linux, with screenshots taken from both operating systems. 
<br />
<br />You will have the opportunity to use your favorite development tool in all likelihood since Allegro supports several C compilers, including Borland C++, Borland C++Builder, Apple Development Tools 2002, and several other compilers on various platforms.
<br />
<br />The target audience are beginning to intermediate programmers who already have some experience with C or C++, or someone who wants to learn to develop with a C or C++ compiler, and will use this book as an entry-level guide. The material is not for someone new to programming, but just to game programming. I must assume the reader has already learned C or C++,  because there is too much to cover in the game libraries, interfaces, and so on, to focus on the basic syntax of the actual language. It was difficult enough to support three different compilers and integrated development environments without also explaining every line of code. Intermediate-level experience is assumed, while extreme beginners will definitely struggle. 
<br />
<br />This book is not extremely advanced--the source code is straightforward, with no difficult libraries to learn, per se, but I do not explain every detail. I do cover the entire function library built into Allegro, since that is the focus of this book, but do not explain any standard C functions. The goal is to get up and running as quickly as possible with some game code! In fact, you will be writing your first graphics programs in chapter 3, and your first game in chapter 4. You DO need a basic understanding of C or you will quickly get lost.
<br />
<br />Someone who has done some programming in Visual C++, CodeWarrior, Watcom C, Borland C++, GNU C++, or even Java or C# will understand the programs in this book. Those with little or no coding experience will benefit from a C primer before delving into these chapters. The emphasis of this book is on a cross-platform, open-source compiler, integrated development environment, and game library. The reader will not need to learn Windows or DirectX programming, and these subjects are not covered. 
<br />
<br />The primary IDE is an open-source (freeware) program called Dev-C++, and is included on the CD-ROM. The game library is called Allegro; it is also freeware, open-source, and included on CD-ROM that accompanies this book. The reader has all the free tools needed to run the programs in the book. This book is highly accessible to all C programmers, regardless of their platform of choice.
<br />
<br />This book's source code and sample programs will run, without modification, on all of the following systems: Windows 9x/2k/ME/XP/2003, Apple MacOS X, Linux (any version), BeOS, QNX,  Unix (Irix, Solaris, Darwin, FreeBSD), and believe it or not, these programs will also run under MS-DOS (DJGPP, Watcom C). So, that is just about every computer system out there. 
<br />
<br />At the same time, the Windows version supports DirectX, so it is future-proof as well. The programs will run in fullscreen or windowed mode with full support for the latest video cards. As you can see from the table of contents below, this is a very 2D-oriented book, with many chapters devoted to sprite programming. There is no coverage of 3D--none. But these chapters are perhaps some of the best you will find on the subject of 2D sprite programming and background scrolling anywhere.
<br />
<br />Part I: Introduction To Cross-Platform Game Programming
<br /> 1: Demystifying Game Development
<br /> 2: Getting Started with Dev-C++ and Allegro
<br /> 3: Basic 2D Graphics Programming with Allegro
<br /> 4: Writing Your First Allegro Game
<br /> 5: Programming The Keyboard, Mouse, and Joystick
<br />
<br />Part II: 2D Game Theory, Design, and Programming
<br /> 6: Introduction To Game Design
<br /> 7: Basic Bitmap Handling and Blitting
<br /> 8: Basic Sprite Programming: Drawing Scaled, Flipped, Rotated, Pivoted, and Translucent Sprites
<br /> 9: Advanced Sprite Programming: Compiled Sprites, Collision Detection, and Animation
<br /> 10: Programming Tile-Based Backgrounds with Scrolling
<br /> 11: Timers, Interrupt Handlers, and Multi-threading
<br /> 12: Creating A Game World: Editing Tiles and Levels
<br /> 13: Vertical Scrolling "Arcade Games"
<br /> 14: Horizontal Scrolling "Platform Games"
<br />
<br />Part III: Taking It To The Next Level
<br /> 15: Mastering The Audible Realm: Allegro's Sound Support 
<br /> 16: Using Data Files To Store Game Resources
<br /> 17: Playing FLIC Movies
<br /> 18: Introduction to Artificial Intelligence
<br /> 19: The Mathematical Side of Games
<br /> 21: Publishing Your Game
<br />
<br />Part IV: Appendices
<br />Appendix A: Chapter Quiz Answers
<br />Appendix B: Useful Tables
<br />Appendix C: Numbering Systems: Binary and Hexadecimal
<br />Appendix D: Recommended Books and Web Sites
<br />Appendix E: Configuring Allegro for Visual C++ and Other Compilers
<br />Appendix F: Compiling The Allegro Source Code
<br />Appendix G: Using the CD-ROM
<br />
<br /></span>
                  
                    <div class="CustomerReviewSummary">So much to learn, and so little of it in this book</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>7</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-10-04</span>
                    </div>
                    <span>I find myself nearly reluctant to review this book with such a low score, however I cannot justify anything higher.
<br />
<br />What this book does well.  It gives a very good overview of the Allegro freeware game library.  It will show you how to use other freeware tools.  It will teach you about sprite manipulation within the allegro library and with a couple of more universal concepts.
<br />
<br />Perhaps most importantly it gives you an idea of how to go about building a game with a complete game library.  Replace the "Allegro" references and function calls with the appropriate items from whichever library you are using.
<br />
<br />All the examples are programmed in C and will generally be easy to comprehend for even a mostly novice programmer.  There are a few exceptions where he uses unusual commands (such as volatile or LOCK) but that is very rare.
<br />
<br />The Allegro library does seem very robust, although getting it setup in any environment beyond the Dev-C++ freeware/opensource IDE will challenge most normal people and the book, despite devoting a large number of pages to the process, is very little help.
<br />
<br />This is all well and good if you want to use Allegro and the various freeware/open source tools for your your game and you don't mind mindless typing in code that the author will provide no indepth discussion on.
<br />
<br />"Type in this collision code for collision" is about the best you can expect.
<br />
<br />If you are looking for something beyond a - not terribly detailed - Allegro library reference, buy another book.  This book does not go into any depth or questioning of what you want to know if you wanted to really grok what it means to create an effective game algorithem or foundation system.
<br />
<br />The author also barely explains the calls being made to the library.  He barely explains what the purpose of somethings are.  For example I read the couple sentences he used to explain doublebuffering several times but I still don't really understand it beyond "Well he said its a good thing so I guess I should do it."
<br />
<br />This book provides very little information behind the hows and whys of game programming.  The considerations and the algorithems, and thats what I was hoping to find in this book.
<br />
<br />For instance: I was looking for a book that tells me the hows and whys and some examples of when to utilize what types of AI, maybe with a pointer to some helpful tools.
<br />
<br />I wanted a book to help explain collision detection on a high level, then maybe drill into functions and code that would demonstrate the pro's and con's of various implementations.
<br />
<br />Perhaps its my fault for expecting some intellegent conversation about game development out of a book called "Game Programming All in One".
<br />
<br />However at some point the author MUST have asked himself "I need to create a collision system for the tank war example, what questions need answers to do this and how do I programatically construct it?"
<br />
<br />Why that thinking process wasn't included in what is supposed to be a fairly comprehensive book baffles me.  I would find that far more valuable than the "Type this in understand later (if ever)" system the author utilized.</span>
                  
                    <div class="CustomerReviewSummary">Well worth the time and cost</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-15</span>
                    </div>
                    <span>The author of this book, Jonathan Harbour, is a versitle and flexible writer and programmer. His style is so easy to connect with that you will enjoy every moment you spend reading this book. Though C knowledge is required to get you started, he does better than teaching the language and explains the segments of knowledge you will need to create your own 2D based games. 
<br />
<br />This book is my second favorite book. (first one being Code Complete)
<br /></span>
                  
                    <div class="CustomerReviewSummary">Great book for beginners</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-09-08</span>
                    </div>
                    <span>I been searching for a book like this ever since i started learning how to do C++.  My goal is to create a really fun text adventure and all the other books i bought were good for learning the basics but this book had exactly what i needed.  here's a short list of my pro's and con's.
<br />
<br />Pros:
<br />
<br />- easy playback for .wav files
<br />- easy function to display a .bmp picture
<br />- tells me how to insert text in any graphics mode to any part of the screen.
<br />- book is based mainly in use with DEV-C++
<br />- shows easy way to make side-scrolling games and animate sprites.
<br />- easy way to do collision detection.
<br />- easy way of stretching your animations giving it a 3d effect based on distance.
<br />- you can really make the old Doom from scratch with this book.
<br />- screenshots made easy.
<br />- all the stuff is royalty free.
<br />- no major header writing headaches when playing with the graphics and sound.
<br />
<br />Cons:
<br />
<br />- I couldn't find anything on how to store data in a separate file to be read from, like a database of weapon names, item names and monster stats to be read from a file to be used in the main program.
<br />- couldn't find any easy way of making words scroll upwards for my text adventure game.  I may need to create a routine for that.  luckily this book shows even how to make screenshots really easy and i can just use that principal to make it work.
<br />
<br />Summary:
<br />
<br />I highly recommend this book to any newbie game developer.  even experienced developer will find this book a great asset.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1592002056'>
                      Beginning C++ Game Programming (Game Development Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 8 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1556220782'>
                      Programming Game AI by Example
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=1592003699'>
                      Beginning OpenGL Game Programming
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 5 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=159200315X'>
                      Programming Role Playing Games with DirectX, Second Edition (Game Development Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=159200136X'>
                      3D Game Programming All in One (Course Technology PTR Game Development Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 13 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

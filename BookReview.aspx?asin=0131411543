
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Advanced UNIX Programming (2nd Edition) (Addison-Wesley Professional Computing Series)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0131411543" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMTMxNDExNTQzLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEFkdmFuY2VkIFVOSVggUHJvZ3JhbW1pbmcgKDJuZCBFZGl0aW9uKSAoQWRkaXNvbi1XZXNsZXkgUHJvZmVzc2lvbmFsIENvbXB1dGluZyBTZXJpZXMpOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxNYXJjIEouIFJvY2hraW5kOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDQuOTk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQzOC4yMzs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NS4wOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwxMzs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMTMxNDExNTQzL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8cDxwPGw8VmlzaWJsZTs+O2w8bzxmPjs+Pjs+O2w8aTwwPjtpPDE+Oz47bDx0PEA8XGU7Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFxlOz4+Oz47Oz47Pj47Pj47Pj47PhRLDJK7sDzDq/0wNbrrGbw/sndC" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0131411543.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Advanced UNIX Programming (2nd Edition) (Addison-Wesley Professional Computing Series)</span>
        <div class="ItemDetail">By
          <span id="Authors">Marc J. Rochkind</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$44.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$38.23</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">5.0</span>
          based on
          <span id="TotalReviews">13</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0131411543/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Just right</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2005-04-09</span>
                    </div>
                    <span>This book starts at the beginning, assumes very little, and takes you quickly to the essentials you need to know about unix. The text is clear but too verbose - you can actually finish this book, which I find important for programmers who want to get a sound introduction and then get to coding. The new edition is updated for modern unix-like systems.</span>
                  
                    <div class="CustomerReviewSummary">Required Reading for UNIX developers</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>7</span>
                      /
                      <span>7</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-08-06</span>
                    </div>
                    <span>This book is truly exceptional - it covered the UNIX programming environment from beginning to the end very well.  Marc Rochkind has done an amazing job updating his classic book.  
<br />A brief history of UNIX and a history of various UNIX standards such as POSIX, SUS and pretty much all the others plus a 30 minute crash course in the underlying structure of UNIX get the readers going.  If you are anything like me that hasn't as much a thought about how process ID's are used and the creation child processes and how permission plays a role in process creation, you will enjoy this section.  I learned that its one thing to "use" UNIX, and another to really understand it deep down.  The standards that are out there really throws you off though as there are so many of them.  How and which one to choose? It gets rather complicated.  Marc spends the first section talking about all the difficulties of "choosing a standard", and then gives you a header file that you can plug into your code and off you go.  I was pleased by that.  I have already started using that header file in my code and I find it rather useful.  
<br />
<br />Starting from the basics of files and file access, every one of the function calls are depicted in full and example is given for each one of them.  This book is like a big "how-to" notebook that one can pick and choose what to read where to get valuable information from as one needs it.  Another thing that the author does throughout his book, which made me very happy, was the little tables of "stats comparisons" between the various options and settings that were just discussed.  No more guessing games as to what to expect or what to test.  It's all right there.  I know, for example, that blocked-sized I/O of 512 bytes takes less than a second to complete versus 223 seconds when a character at a time is read.  You might think that this information is rather trivial, but do you know the difference in the time that it takes to access data stored in a regular file versus data stored on a raw disk device?  
<br />
<br />Accessing the terminal can get rather complicated with all the options available, and I didn't know was how much more complicated this matter gets due to the relations that terminals have with sessions and process groups.  Process group, session leader, process-group leader and the controlling process could make you life as a programmer very difficult if you don't know how they inter-relate.  The power of UNIX comes in a box - you have to open it to see inside, but be very prepared before you open up that box.  
<br />If you have done any network programming if your life, you want to know the details and options that are available to you if you are using "select" or "pselelct".  What the timeout options are, and how you can use the "poll" system call to achieve the same task as "select", but more efficiently at times.   
<br />
<br />Threads, Processes and their inner workings are covered extensively in this book, as one would assume.  The difference in this author's explanation of these two topics is the presentation.  The author in talking about these topics, and everything else from here on, builds a fairly complete command interpreter!  Starts rather small, but by the end of the book, it is a full blown UNIX like CLI with pipelines, background processes, quoted arguments, handling of I/O redirection and accepting of environment variables.  Processes and threads start the discussion with "fork", "exec" and other similar and related function calls.  A great deal of time is spent talking bout these two rather important calls, and how they are used, options, inheritance of those options, and programming hints and examples for each one of them.  Threads and synchronization of threads via mutex and conditional variables are the next topic if discussion.  Threads could get a bit more complicated, so you should spend a bit more time reading this section.  The author starts you of easy though.  No mutex or race conditions are considered at first.  It then gets rather interesting with the various race conditions that the authors has the reader think thru.  
<br />
<br />Communication between threads processes have always been an interesting topic to cover.  Pipes, names pipes, shared memory and sockets.  Pipes are rather easy.  They have their limitations, which are discussed in full, but they are rather easy.  Names pipes (queues) and unidirectional pipes get the reader going, if you have not done any Interprocess Communication before.  Even if you have, it's good to revisit something that is not really used these days.  Messages, semaphores, sockets and shared memory are covered in a great depth by the author.  What I absolutely love about this book comes in these later sections of the book.  Marc, in depicting these topics and sections builds, from scratch, what could essentially be called a middleware - Simple Messaging Interface (SMI) he calls it.  
<br />
<br />SMI is probably one of the best book examples I have seen.  Besides the fact that it is very useful and practical all into itself, it also promotes good network programming practice.  SMI is first implemented with Names Pipes or FIFOs, then using Message Queues, then Semaphores and finally via Shared Memory.  Very well done Marc.  If that's not enough, all of the implementations are compared with each other, and pros and cons of each one is given to aid a developer or a designer in choosing the right methodology.  
<br />
<br />The Simple Socket Interface is the Socket implementation version of the SMI.  Again, very well done and prescribed by the author.  Besides being very good teaching tools, they are also very practical and useful; something that we are should have in our toolbox.  
<br />
<br />I highly recommend this book to any developer; designer or an architect as it is very good teaching aid for all. 
<br />
<br /></span>
                  
                    <div class="CustomerReviewSummary">Technical excellence; worth owning</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>10</span>
                      /
                      <span>12</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-07</span>
                    </div>
                    <span>(reviewed for the Calgary Linux Users Group Guild)<p>There is a saying which goes, "UNIX is user-friendly; it's just picky about who its friends are."  Upon reading Advanced UNIX Programming, I get the impression that Marc Rochkind may at one time have been a close friend of UNIX, but having become a little disillusioned by what UNIX has become in the 19 years since his first edition, is willing to settle for being a calm, professional acquaintance.  His opening chapter provides two main reasons why this has happened:  first, the UNIX kernel has grown from providing 70 or so system calls, to over 600 for an implementation that provides Single UNIX Specification and POSIX compliance; and second, there are so many flavours of UNIX out there (including Linux) that none of them implement exactly the same set of system calls.  Thus the increasing complexity and diversity of UNIX implementations makes it difficult to know all that can be called UNIX intimately.  Rochkind's book presents enough material to make the reader an acquaintance, leaving the building of a friendship as an exercise for the highly committed.<p>Rochkind makes a careful selection of just over 300 of the most important system calls and groups them into a handful of broad topics: I/O (file and terminal), processes and threads, inter-process communication (including sockets), signals, and timers.  He takes great care to highlight what is available in Solaris (version 8), Linux (SuSE 8), BSD (FreeBSD 4.6), and Darwin (6.8; MacOS 10.2.8), and how to write something that has a hope of running on all of them.  The system calls he describes are the ones anyone writing UNIX applications must know about.  That is his target audience, and he meets that target squarely. If you are not already a C programmer and UNIX user, this book will not be useful for you.<p>The book contains exercises and several code samples.  Some of the larger chunks of code implement a simple shell, an HTTP client, and a full-screen text-mode menu system.  This is not trivial stuff; it is reflective of the title, and demonstrates in a short space how to put the kernel to use.  Rochkind also includes some example code that should work, but will not, just to illustrate that things are not as simple as they could be.  He then walks the reader through the necessary corrections, bringing enlightenment as he goes.  Each chapter contains this mix of tutorial material, useful to those who are starting to explore the UNIX kernel and how it can serve their applications, and reference material, useful to those looking for the bit of wisdom a man page cannot provide, but years of experience can.<p>Rochkind also buries some treasure in the appendices.  While his examples are all written in C, since this is the natural language for UNIX programming, he acknowledges that not every program that uses the UNIX kernel is going to be a C program.  He describes two downloadable class libraries that map most of the UNIX kernel calls to objects and methods.  These allow folk who prefer object-oriented languages to use the kernel without doing violence to their programming paradigm.  Ux is a C++ wrapper, and Jtux is a Java wrapper that also works with Jython.<p>As one might expect, Advanced UNIX Programming contains an extensive bibliography and reference list.  If you had all of the works and resources he lists on your shelf, the body of his book would be superfluous.  He has distilled things well.<p>There are two technical things that I found missing from the book.  The significant one is a discussion of how to deal with multiple processors, particularly around semaphores and other kinds of locks.  This would be a valuable addition to the chapter on inter-process communications, especially now that these machines are becoming more common.  The second, and by no means serious, omission is actually one that arises because of what he does include in an appendix:  if he can describe a Java class library, why not make a reference to a set of Perl modules, too?<p>So why do I rate this book as less than outstanding?  Well, one reason is a matter of taste.  I am not a fan of C preprocessor macro functions, but Rochkind makes heavy use of them in his examples to simplify error trapping and reduce the volume of code that had to be printed.  This forced me to read code in a different way than my colleagues and I write it.  I found it awkward to pick out the particular system call being used when it was coded as a parameter to a macro.  The second is that I found his treatment of signals to be confusing.  Admittedly, signal handling is not simple (and the newer signal-handling calls do little to help), but the chapter on signals felt like it was rushed to completion to meet the publication deadline.  I read that chapter twice, and am still scratching my head.  Add a handful of typographical errors to these irritants, and I wound up with a book that was not a joy to read straight through, but a chore.  I will still use the book as an occasional reference, reflecting the comfortable professional relationship, but not intimate friendship, I have with UNIX, and maybe I will learn more on a subsequent reading.</span>
                  
                    <div class="CustomerReviewSummary">Finally - Very Updated!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>11</span>
                      /
                      <span>14</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-23</span>
                    </div>
                    <span>In 1987, I encountered the first edition of Rochkind's book. Grew to depend on it as an authoritative discourse on serious unix interprocess programming. Now (finally!) he has issued an updated edition. (Has it really been 19 years?)<p>What is different? Much. Indeed, most of the book. In the first chapter, he summarises myriad developments in the unix world and, of course, the rise of linux. He writes for all the current unix variations and linux.<p>Since 1985, there has been a plethora of different interprocess communications methods. So the chapters on these form a prominent part of the book. Then, naturally, in the networking chapter, who can ignore the web? So Rochkind gives a concise detour into http, with example code for a simple browser and web server.<p>One thing unchanged from the first edition is the well deserved use of "Advanced" in the title. The treatment is sophisticated and, frankly, not an easy read for someone new to the subject. Rochkind writes well, but you do have to concentrate. He goes at a pace that at a very minimum assumes you are already facile in C and with using unix at the user level. The source code examples are simple, once you grasp the concepts.<p>The problems he furnishes in each chapter can be extremely useful if you want to deepen your understanding. The questions are nontrivial and usually expand on salient points discussed in the chapters. If you are indeed new to all this, you should make a serious attempt at the problems.</span>
                  
                    <div class="CustomerReviewSummary">A must have</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-17</span>
                    </div>
                    <span>I also have the first edition (and a previous book) and am an unabashed fan of Marc Rochkind's.<br>What this book promises and delivers is a catalog and explanation of Unix (including Linux) system calls.<br>The clarity with which it is done is a thing of beauty. <br>It is much more dense and extensive than the 1st edition.<br>After all, a few things have happened in the interim.:)<br>This is where Unix comes alive.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0130424110'>
                      Unix Systems Programming: Communication, Concurrency and Threads, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0130810819'>
                      UNIX Network Programming, Volume 2: Interprocess Communications (2nd Edition)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 10 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131429019'>
                      The Art of UNIX Programming
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 29 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201563177'>
                      Advanced Programming in the UNIX(R) Environment
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 65 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321113586'>
                      C++ Coding Standards : 101 Rules, Guidelines, and Best Practices (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 17 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

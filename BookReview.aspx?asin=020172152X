
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Building Secure Software: How to Avoid Security Problems the Right Way
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=020172152X" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxNzIxNTJYLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEJ1aWxkaW5nIFNlY3VyZSBTb2Z0d2FyZTogSG93IHRvIEF2b2lkIFNlY3VyaXR5IFByb2JsZW1zIHRoZSBSaWdodCBXYXk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEpvaG4gVmllZ2EsIEdhcnkgTWNHcmF3Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNTkuOTk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ0Ny40Nzs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NC4wOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwyMzs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMjAxNzIxNTJYL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8cDxwPGw8VmlzaWJsZTs+O2w8bzxmPjs+Pjs+O2w8aTwwPjtpPDE+Oz47bDx0PEA8XGU7Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFxlOz4+Oz47Oz47Pj47Pj47Pj47Pq8BgAoRwY2soMltlmleWlS3MJJf" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/020172152X.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Building Secure Software: How to Avoid Security Problems the Right Way</span>
        <div class="ItemDetail">By
          <span id="Authors">John Viega, Gary McGraw</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$59.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$47.47</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.0</span>
          based on
          <span id="TotalReviews">23</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/020172152X/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">The book that launched a new security genre</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>25</span>
                      /
                      <span>28</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2005-01-04</span>
                    </div>
                    <span>'Building Secure Software' (BSS) is an excellent book.  I can't believe it was published in the fall of 2001, and I've only gotten to it now.  Negative reviewers should remember that a single book can't address every security topic under the sun.  BSS is the first of several titles by authors Viega and McGraw; those looking for additional details can peruse their later books.
<br />
<br />BSS has three overall strengths which merit a five star review.  First, the book contains the distilled wisdom of its two authors.  We are lucky to have two developers-turned-security-experts sharing their insights with us.  They explain many concepts in plain language suitable for coders and non-coders alike.  I especially enjoyed their ten guiding principles of ch 5 and the auditing software advice of ch 6.  In other sections, like ch 4, they argue that 'open source' does not equal 'secure.'  In ch 2 the authors explain the importance of system specifications, i.e., how is a system expected to act under a given situation?  These sorts of insights are useful for managers as well as developers.
<br />
<br />Second, BSS backs up its recommendations with real code examples.  The authors don't just tell you what to do -- they show you.  In many cases they begin with a 'naive' implementation fraught with errors, which they then incrementally improve.  The password material in ch 13 is an example of this technique.  A related benefit of the book was its description of attack trees in ch 6, which I find helpful.
<br />
<br />Third, the authors very thoroughly discuss topics mentioned in other books, but not backed up in those titles by code samples.  For example, ch 7 has a very detailed buffer overflow explanation.  If you want to follow actual code and memory locations to understand how to write a buffer overflow exploit, ch 7 will explain how to do it.  
<br />
<br />BSS's errata doesn't seem to be available at the defunct book Web site, although I was able to retrieve it via the Internet Archive.  My main concern with the book's content was the replacement of the security principle of 'availability' by another principle, 'authentication.'    In other words, when one mentions 'the big three security goals,' (p. 22) they are 'confidentiality,' 'integrity,' and 'availability,' not 'authentication.'  
<br />
<br />I didn't find the relative lack of Windows-specific material to be a problem.  The book's errata addresses some of the negative reviewers' concerns.  Several years after its initial publication, BSS is still a timely and relevant read that I recommend to all developers and security professionals.</span>
                  
                    <div class="CustomerReviewSummary">An Indictment for Applications Development</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>33</span>
                      /
                      <span>42</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-08</span>
                    </div>
                    <span>Many transformations begin with an indictment. Two notable examples are Martin Luther's "95 Theses" criticizing the Catholic Church, which began the Reformation, and Ralph Nader's denunciation of the auto industry with "Unsafe at Any Speed." An indictment of the software industry and its indifference to writing secure software hasbeen published in "Building Secure Software: How to Avoid Security Problems the Right Way" by John Viega and Gary McGraw.<p>Twenty years into the client-server revolution, and a decade into the Internet revolution, it's a measure of inadequacy of secure coding that only now are the first books being written on how to secure software -- the very foundation of information systems. <p>Software developers who code without taking security into consideration are potentially as dangerous as a physician prescribing a drug without knowing its side effects. As a society, we should tolerate neither.<p>While security products such as firewalls, encryption devices, event monitoring and intrusion-detection systems are needed to secure networks; it must not be forgotten that behind every security problem is a common enemy -- insecurely written software.<p>Building secure software is not rocket science. Writing secure code doesn't mean turning every developer into a world-class cryptographer. It simply means training them in the fundamentals of how software works, including security. If corporate end users can betrained not to send inappropriate (sexist, racist, confidential, etc.) e-mail via corporate servers, then software developers can certainly be trained to write secure software programs.<p>The revolution needed in software development is to integrate security into software engineering. The current approach in software is to patch problems after they occur. In fact, 2003 saw the rise of many patch management companies; a sector that only came to be recently. Endless patching is a downward spiral that only serves to treat the symptoms, not the true problem, and only in a reactive manner. Had those same programmers been trained in writing secure code, much of the problems would have been obviated and billions of dollars saved in the interim. <p>It's all the rage to send development offshore in the name of saving money. If companies understood how much more money could be saved by building secure software from the get-go, rather than bolting security on as an afterthought; wouldn't they do the same? <p>It's frightening to think that in just a matter of years, everything but the food we eat will have an IP address attached to it. When the time comes that your family vacation commences with a flight on a pilot-less airplane, here's hoping the developers of the navigation and control systems knew the rudiments of writing secure software.</span>
                  
                    <div class="CustomerReviewSummary">essential reading</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>10</span>
                      /
                      <span>13</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-02-28</span>
                    </div>
                    <span>This subject of this book isn't written about often enough.  Where are the vulnerabilites?  Think about that question... They are in the software!  This is an area of security that is not adressed often enough.  I consider this book essential reading for anyone in the IT security arena.  This is the first book of its kind.
<br />
<br />The first 6 chapters can be read and understood by programmers and managment alike.  The first 6 chapters should be required reading for any security professional or manager.  They discuss software engineering and how vulnerabilities creep into the software.  
<br />
<br />The remainder of the book is geared towards secure coding technques.  The techniques discussed can be applied to any language and many are discussed.  Much is geared towards C however.  There are sections on inherently vulnerable functions and input validation.  Also of interest are sections on the implementation of PRNG and crypto.  
<br />
<br />All of the helpful code samples are available at the book's web site.  This 2-year old text will be relevant for years to come.  It will be a security classic.  It's enjoyable to read overall, but I found it a bit dry in a couple of spots.  I really rates about 4 and a half stars.  I read it cover to cover and enjoyed it.  Unlike many modern security books, I've found this one incredibly useful as a reference  since reading it.</span>
                  
                    <div class="CustomerReviewSummary">Dont code until you read this book</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>10</span>
                      /
                      <span>13</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-09-01</span>
                    </div>
                    <span>I thought I was good at coding, but didn't realize how much security breaches can be done until I read this book.<p>From messy Java issues to buffer overflows; this book covers it.<p>Don't code until you read this book!</span>
                  
                    <div class="CustomerReviewSummary">My current choice for text in computer security</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>15</span>
                      /
                      <span>19</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-12-03</span>
                    </div>
                    <span>Even IT professionals are not completely aware of how much our society relies on the effective use of computers. For if they did, security issues would always be foremost in our minds. Nearly all of us lock the doors to our houses when we leave and yet there are problems with computers that are equivalent to leaving the door open and posting a large sign as to where the valuables are located. I am just as guilty as most others in this area, but the heavy object has finally hit me over the head, so I am now deeply involved in learning all aspects of computer security.<br> One of the best books that I have found that explains details rather than fluffy generalities is this one. In looking through books, there were so many that used the soapbox approach, proclaiming long and loud about the need for security, but never reaching the level of the designer in showing the specific ways in which security features can be implemented. This book does that. The specific code examples illustrating many of the security features show quite clearly how it is possible to include security in the basic structure of your programs.<br> There are those who complain that publishing details of security flaws gives people information that will allow them to become an effective black hat hacker. This is an argument that is ridiculous. A malicious user is someone with a specific state of mind, and a bit of information does not make one a criminal, just makes it slightly easier for them to engage in their criminal acts. Any law enforcement officer will tell you that to prevent crime you have to learn the many ways crimes are committed. The authors of this book show you how the black hats do their cracking.<br> As a consequence of reading this book, I was motivated to create a series of security lessons and write a proposal for a class in computer security for the next academic year. That class recently received overwhelming departmental approval and right now, this is the text that I will use.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596003943'>
                      Secure Programming Cookbook for C and C++
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 12 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471389226'>
                      Security Engineering: A Guide to Building Dependable Distributed Systems
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 20 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735617228'>
                      Writing Secure Code, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 30 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0764544683'>
                      The Shellcoder's Handbook : Discovering and Exploiting Security Holes 
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 17 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596002424'>
                      Secure Coding: Principles and Practices
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 15 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

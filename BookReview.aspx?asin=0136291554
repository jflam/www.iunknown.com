
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Object-Oriented Software Construction (Book/CD-ROM) (2nd Edition)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0136291554" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMTM2MjkxNTU0LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPE9iamVjdC1PcmllbnRlZCBTb2Z0d2FyZSBDb25zdHJ1Y3Rpb24gKEJvb2svQ0QtUk9NKSAoMm5kIEVkaXRpb24pOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxCZXJ0cmFuZCBNZXllcjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDgzLjAwOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkODcuMzM7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDQuNTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NDI7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDEzNjI5MTU1NC9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PDtsPGk8MD47aTwxPjs+O2w8dDxAPEFtYXpvbi5jb207Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoZSBkZXZlbG9wZXIgb2YgdGhlIGFjY2xhaW1lZCBFaWZmZWwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgY29tZXMgdGhyb3VnaCB3aXRoIG9uZSBvZiB0aGUgY2xlYXJlc3QgYW5kIG1vc3QgaW5mb3JtYXRpdmUgYm9va3MgYWJvdXQgY29tcHV0ZXJzIGV2ZXIgY29tbWl0dGVkIHRvIHBhcGVyLiBcPGlcPk9iamVjdC1PcmllbnRlZCBTb2Z0d2FyZSBDb25zdHJ1Y3Rpb25cPC9pXD4gaXMgdGhlIGdvc3BlbCBvZiBvYmplY3Qtb3JpZW50ZWQgdGVjaG5vbG9neSBhbmQgaXQgZGVzZXJ2ZXMgdG8gYmUgc3ByZWFkIGV2ZXJ5d2hlcmUuIE1leWVyIG9wZW5zIHdpdGggY292ZXJhZ2Ugb2YgdGhlIG5lZWQgZm9yIGFuIG9iamVjdC1vcmllbnRlZCBhcHByb2FjaCB0byBzb2Z0d2FyZSBkZXZlbG9wbWVudCwgY2l0aW5nIGltcHJvdmVkIHF1YWxpdHkgYW5kIGRldmVsb3BtZW50IHNwZWVkIGFzIGtleSBhZHZhbnRhZ2VzIG9mIHRoZSBhcHByb2FjaC4gSGUgdGhlbiBleHBsYWlucyBhbGwgdGhlIGtleSBjcml0ZXJpYSB0aGF0IGRlZmluZSBhbiBvYmplY3QtIG9yaWVudGVkIGFwcHJvYWNoIHRvIGEgcHJvYmxlbS4gTWV5ZXIgcGF5cyBhdHRlbnRpb24gdG8gdGVjaG5pcXVlcywgc3VjaCBhcyBjbGFzc2VzLCBvYmplY3RzLCBtZW1vcnkgbWFuYWdlbWVudCwgYW5kIG1vcmUsIHJldHVybmluZyB0byBlYWNoIHRlY2huaXF1ZSBhbmQgcG9saXNoaW5nIGhpcyByZWFkZXJzJyBrbm93bGVkZ2Ugb2YgaXQgYXMgaGUgZXhwbGFpbnMgaG93IHRvIGVtcGxveSBpdCAid2VsbC4iIEluIGEgc2VjdGlvbiBvbiBhZHZhbmNlZCB0b3BpY3MsIE1leWVyIGV4cGxvcmVzIGludGVyZXN0aW5nIGFuZCByZWxldmFudCB0b3BpY3MsIHN1Y2ggYXMgcGVyc2lzdGVudCBvYmplY3RzIHN0b3JlZCBpbiBhIGRhdGFiYXNlLiBIZSBhbHNvIG9mZmVycyBhIHNvcnQgb2YgIkRvIGFuZCBEb24ndCIgc2VjdGlvbiBpbiB3aGljaCBoZSBlbnVtZXJhdGVzIGNvbW1vbiBtaXN0YWtlcyBhbmQgd2F5cyB0byBhdm9pZCB0aGVtLiBNYW5hZ2VtZW50IGluZm9ybWF0aW9uIGlzbid0IHRoZSBtYWluIHBvaW50IG9mIFw8aVw+T2JqZWN0LU9yaWVudGVkIFNvZnR3YXJlIENvbnN0cnVjdGlvblw8L2lcPiwgYnV0IHlvdSdsbCBmaW5kIHNvbWUgaW4gaXRzIHBhZ2VzLiBNZXllciBjb25jbHVkZXMgaGlzIHRvdXIgZGUgZm9yY2Ugd2l0aCBjb21wYXJpc29ucyBvZiBhbGwgdGhlIGtleSBvYmplY3Qtb3JpZW50ZWQgbGFuZ3VhZ2VzLCBpbmNsdWRpbmcgSmF2YS4gSGUgYWxzbyBjb3ZlcnMgdGhlIHBvdGVudGlhbCBvZiBzaW11bGF0aW5nIG9iamVjdCB0ZWNobm9sb2d5IGluIG5vbi1vYmplY3Qtb3JpZW50ZWQgbGFuZ3VhZ2VzLCBzdWNoIGFzIFBhc2NhbCBhbmQgRm9ydHJhbi4gVGhlIGNvbXBhbmlvbiBDRC1ST00gaW5jbHVkZXMgdGhlIGZ1bGwgdGV4dCBvZiB0aGlzIGJvb2sgaW4gaHlwZXJ0ZXh0IGZvcm0sIGFzIHdlbGwgYXMgc29tZSB0b29scyBmb3IgZGVzaWduaW5nIG9iamVjdC1vcmllbnRlZCBzeXN0ZW1zLiBJZiB5b3UgcHJvZ3JhbSBjb21wdXRlcnMsIHlvdSBuZWVkIHRvIHJlYWQgdGhpcyBib29rLjs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz5m95bNCpx7n3ysiheTx23mfOLQDg==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0136291554.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Object-Oriented Software Construction (Book/CD-ROM) (2nd Edition)</span>
        <div class="ItemDetail">By
          <span id="Authors">Bertrand Meyer</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$83.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$87.33</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">42</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0136291554/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1">The developer of the acclaimed Eiffel programming language comes through with one of the clearest and most informative books about computers ever committed to paper. <i>Object-Oriented Software Construction</i> is the gospel of object-oriented technology and it deserves to be spread everywhere. Meyer opens with coverage of the need for an object-oriented approach to software development, citing improved quality and development speed as key advantages of the approach. He then explains all the key criteria that define an object- oriented approach to a problem. Meyer pays attention to techniques, such as classes, objects, memory management, and more, returning to each technique and polishing his readers' knowledge of it as he explains how to employ it "well." In a section on advanced topics, Meyer explores interesting and relevant topics, such as persistent objects stored in a database. He also offers a sort of "Do and Don't" section in which he enumerates common mistakes and ways to avoid them. Management information isn't the main point of <i>Object-Oriented Software Construction</i>, but you'll find some in its pages. Meyer concludes his tour de force with comparisons of all the key object-oriented languages, including Java. He also covers the potential of simulating object technology in non-object-oriented languages, such as Pascal and Fortran. The companion CD-ROM includes the full text of this book in hypertext form, as well as some tools for designing object-oriented systems. If you program computers, you need to read this book.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">very good, but not the holy grail of software engineering</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-25</span>
                    </div>
                    <span>In this book Bertrand Meyer did an excelllent job in explaining object oriented software design in a rigourous way. Too often authors of OO books were not formal and rigorous enough, leading to a lot of confusion in the OO world. This book gives a very formal and exact treatment of Object orienteation. As a consequence this book is a must read for every OO expert. That the book focusses on eiffel should not be seen as a drawback : you can apply most of the explained techniques in other OO languages.<br>Also this book does not focus much on UML. However, to my opinion,  this is not a drawback neither since the power of UML is strongly overhyped.<p>Though there are some minor drawbacks in this book : <br>-the book can be reduced to half of its size without sacrifying rigour and clearity. Some topics are not needed. <br>-design patterns are missing in this book.<br>-does not explain enough about unit testing. While the book gives very good explanation on design by contract, design by contract should be seen as an addition to unit testing, but it cannot replace it !!! <p>Finally some remarks : please do not overestimate the power of software reuse : in reality it has limited usage since in order to create reusable software and reuse it, each teammember has to know quite well what the other teams are doing in order to reuse some part of their work. In reality, for big projects, this is often impractical.<br>-Design by contract is an important software technique, but you can also use it (apart from some limitations) in Java the assert statement. Of course eiffel is probabaly the best designed programming language. But that does not make it the best choice for building complex applications!! I am convinced that Java , in combination with the techniques describbed in this book, with unit testing frameworks like Junit, with aspect oriented programming facilities, and with usage of design patterns can beat eiffel as a development environment for building mission critical applications.</span>
                  
                    <div class="CustomerReviewSummary">A must have book for professionals in OO</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-09-16</span>
                    </div>
                    <span>Unfortunately, the majority of books in computing science area suffers a lack of<br>precise definition and clarity of terms and concepts. In my personal opinion, the <br>commercial aspects that strongly affect this area, comparing to other technological<br>ones, contributes to open the computing book market for authors of highly questionable<br>experience and a quite shalow knowledge about the matter they're treating. For example, it <br>is not unusual to see the same author (or group of authors) writing books about Java, .NET, <br>JSP, ASP, Perl, OO, C/C++ and so on. <br>Bertrand Meyer's OO book is an exception in this tendency. The subjects treated are logically<br>distributed and the concepts are clearly and precisely defined. Then, the reader gets an <br>intuitive and deep understanding of OO theoretical aspects, independent of OO language <br>specifics. All the concepts are perfectly prioritized and sequenced: software quality before <br>OO, ADT before classes, features before functions, DBC before exception handling. Every <br>single concept bases the following ones. I must say, however, that the author should be more <br>concise: he writes too much to explain a single concept. He reveals his large academic <br>literate background inserting unnecessary large comments in the text. The book could have<br>a quite less number of pages without any loss in learning the main concepts.<br>I sincerely do not see any problem about the relation between the OO concepts presented and <br>their practical implementation: EIFFEL language. At least, the author shows concretely that<br>the concepts treated in the book are implementable. If there were not any language to <br>complete and support the theoretical aspects, we could say : "Ok, all the concepts <br>in the book are perfect and beautiful, but the closest programming language to <br>these concepts we can use is JAVA, for example."</span>
                  
                    <div class="CustomerReviewSummary">How can you say enough to reward excellence?</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-08-21</span>
                    </div>
                    <span>I have two 3M notpad leafs stuck at the periphery of pages 3 to 278. They are labeled Curious and Enlightened, respectively of course. People that walk into the office asking about what OO design is about, get the tattered Meyer paperback and the instruction to come back when they have read these pages. For practical example, they are steered to the rest and works of others. This a special tag on the page about Polymorphism, which is the kind of ambigous term that begs to be forgotten. However, Meyer's lucid brevity makes the meaning stick.<p>  The feature I find most special is the pull down menu style outline quality of these pages. Abandon your highlighters with this book. Meyer has already digested and illuminated the key concepts for you. Fortunately, this does nothing to diminish the surrounding text.<p>  High marks for editing quality and concept density in a book which clearly pays for itself a third of the way through.</span>
                  
                    <div class="CustomerReviewSummary">Mostly Muck and Mire</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>14</span>
                      /
                      <span>21</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-08-19</span>
                    </div>
                    <span>The book begins with a bang and ends with distaste. <p>After reading about the first hundred pages or so, I felt that I uncovered a truly remarkable book about programming. The advice it gave seemed concrete, and it had a promising appeal to make me a better programmer. Unfortunately, the next one thousand pages were not able to meet my expectations. <p>In my opinion, there are three major problems with this book: its style, its consistency, and its goal.<p>First, its style. The book is overflated. Meyers often spends several paragraphs describing a concept that deserves a mere sentence. A good editor could have compressed this book down to 600 pages or less. Moreover, his tone is somewhat conceited. He throws words around like 'n-dimensional space', 'topology', and 'monoid' without using them meaningfully. Is he trying to show off his knowledge? <p>Second, the book is not consistent with itself. Meyers states many principles and chides other languages for violating them. However, he occasionally violates them himself. He justifies them via a sentence such as, "while this may appear to be a direct violation of Principle X, it actually isn't because of [some reason that usely isn't very convincing]..." Sometimes I found his reasons were based on misconceptions and personal opinion rather than fact.<p>Third, Meyers' goal for the book is disreputable. The book advertises itself as a general reference for OOP; instead, it teaches the bare basics of OOP and spends the rest of its time bashing other languages and teaching Eiffel, a language developed by the author. I think that this is unacceptable.<p>Is the book completely horrible? No. It does have a couple nice concepts, such as Design by Contract, Bottom-Up Approach, and implicit definitions of Abstract Data Types. However, these three concepts could have been summarized in 50 pages, not 1,250. For these reasons, I recommend getting another book, unless you want to learn to program in Eiffel.</span>
                  
                    <div class="CustomerReviewSummary">Mostly Mire and Muck</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>13</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-08-19</span>
                    </div>
                    <span>The book begins with a bang and ends with distaste. <p>After reading about the first hundred pages or so, I felt that I uncovered a truly remarkable book about programming. The advice it gave seemed concrete, and it had a promising appeal to make me a better programmer. Unfortunately, the next one thousand pages were not able to meet my expectations. <p>In my opinion, there are three major problems with this book: its style, its consistency, and its goal.<p>First, its style. The book is overflated. Meyers often spends several paragraphs describing a concept that deserves a mere sentence. A good editor could have compressed this book down to 600 pages or less. Moreover, his tone is somewhat conceited. He throws words like 'n-dimensional space', 'topology', and 'monoid' around without using them meaningfully. Is he trying to show off his knowledge? <p>Second, the book is not consistent with itself. Meyers states many principles and chides other languages for violating them. However, he occasionally violates them himself. He justifies it via statement like, "while this may appear to be a direct violation of Principle X, it actually isn't because of [some reason that usually isn't very convincing]..." Sometimes I found his reasons were based on misconceptions and personal opinion rather than fact.<p>Third, Meyers' goal for the book is disreputable. The book advertises itself as a general reference for OOP; instead, it teaches the bare basics of OOP and spends the rest of its time bashing other languages and furtively teaching Eiffel, a language he invented. I think that this is unacceptable.<p>Is the book completely horrible? No. It does have a couple nice concepts, such as Design by Contract, Bottom-Up Approach, and his description of Abstract Data Types. However, all of the beneficial material could have been summarized in 50 pages, not 1,250. For these reasons, I recommend getting another book, unless you want to use this book for what it's really meant for: learning to program in Eiffel.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321125215'>
                      Domain-Driven Design: Tackling Complexity in the Heart of Software
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 15 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201379430'>
                      Object Design: Roles, Responsibilities, and Collaborations
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 9 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=020163385X'>
                      Object-Oriented Design Heuristics
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 20 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735619670'>
                      Code Complete, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 24 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201634600'>
                      Design by Contract by Example
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 5 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

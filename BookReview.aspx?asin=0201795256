
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: C++ Network Programming, Volume 2: Systematic Reuse with ACE and Frameworks
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201795256" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxNzk1MjU2LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEMrKyBOZXR3b3JrIFByb2dyYW1taW5nLCBWb2x1bWUgMjogU3lzdGVtYXRpYyBSZXVzZSB3aXRoIEFDRSBhbmQgRnJhbWV3b3Jrczs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8RG91Z2xhcyBDLiBTY2htaWR0LCBTdGVwaGVuIEQuIEh1c3Rvbjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDQ0Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMzQuMTk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDQuNTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8MjI7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDIwMTc5NTI1Ni9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PHA8cDxsPFZpc2libGU7PjtsPG88Zj47Pj47PjtsPGk8MD47aTwxPjs+O2w8dDxAPFxlOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxcZTs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz4vG4M7bybaIFdIOJmE0klznB/nrA==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201795256.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">C++ Network Programming, Volume 2: Systematic Reuse with ACE and Frameworks</span>
        <div class="ItemDetail">By
          <span id="Authors">Douglas C. Schmidt, Stephen D. Huston</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$44.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$34.19</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">22</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201795256/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Quite not what I expected it to be</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-09-17</span>
                    </div>
                    <span>After reading the Vol. 1, I expected quite a bit from the volume 2. May be I am not there yet to understand what the authors are trying to emphasize here. I found some of the material from vol.1 covered to much deeper extend. But the framework from the reusability point of view is missing. Some of the topics covered here are great indeed, especially chapter 5, 6 and 7. Other than that I found this book to be a quick browse and keep it away.</span>
                  
                    <div class="CustomerReviewSummary">A good overview (Vol. 1 continued)</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-02-20</span>
                    </div>
                    <span>A good book to begin learning ACE (not TAO!). Well written, illustrated. Very high level though, keep that in mind, no depth. Also, some parts are overloaded with trivialities, for a book of this kind that's out of place, I think. Very similar to the online docs. Not brilliant, but decent; a good read for those starting to work with ACE, move to it after having read vol.1.</span>
                  
                    <div class="CustomerReviewSummary">Well-written book for eligant power code warriors</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-01-03</span>
                    </div>
                    <span>This is a well written book documenting many of the eligant and powerful frameworks and idioms used in the ACE library.  I've been using ACE for over 7 years to implement portable, concurrent, networked, distributed applications and it's great to see a well-written book like this finally being published. I would highly recommend it as a must have reference for all serious ACE programmers who strive to develop powerful, flexible and portable networked applications.  It is also an extremely valuable resource for programmers who want to get introduced and up and running on the concepts and application of some very valuable frameworks.</span>
                  
                    <div class="CustomerReviewSummary">Open-Source Framework Facilitates Network Programming</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-12-09</span>
                    </div>
                    <span>Writing networked applications using modern operating<br>systems and languages looks like it should be easy, but it<br>is emphatically not. The naÂ‹ve designer of networked<br>applications will encounter a thicket of problems including<br>lack of portability, distributed performance bottlenecks,<br>maintaining correctness during shutdown, and managing<br>recovery from partial failures.<p>"C++ Network Programming, Volume 2, Systematic Reuse with<br>ACE and Frameworks" by Douglas Schmidt and Stephen Huston<p>provides some powerful help in the design and implementation<br>of networked applications. This help comes in the form of<br>several frameworks.<p>A few words about the definition of "framework." The first<br>step up from writing applications that interface directly<br>with operating systems is to insert object-oriented wrappers<br>between the application and lower level services. These<br>wrappers are classes that encapsulate the low level,<br>functionally specified, services such as operating systems<p>and protocol stacks. This first step was taken in the<br>predecessor volume to the present book, "C++ Network<br>Programming, Volume 1: Mastering Complexity with ACE and<br>Patterns", by the same authors, where a collection of<br>wrappers, called the ACE wrappers, is provided that not only<br>raises the level of the application interface from<br>functional to object-oriented, but also provides portability<br>at the same time.<p>For example, consider an application that directly uses<br>sockets. This application would depend on the syntax and<br>functional details of that operating system's s operating<br>system's socket implementation. By inserting the ACE<br>wrappers, the application acquires an object interface to<br>socket capabilities, and in addition becomes portable across<br>a large number of compilers, operating systems, and<br>communication protocols.<p>But a set of wrapper classes does not solve the networked<br>application designer's problems, any more than a pile of<br>bricks is a house.<p>Frameworks, which are the subject of the present book, are<br>the next step up in power from wrappers. A framework is an<br>integrated set of classes into which application designers<br>plug code that is unique to their applications. The<br>frameworks described in the present book handle a large part<br>of the difficulty inherent in network programming, leaving<br>application designers to deal primary with their<br>applications' local functionality.<p>For example, one of the frameworks described in the book is<br>the Acceptor-Connector Framework. This framework relieves<br>the user of dealing with the numerous tricky details<br>inherent in the conceptually simple process of connecting<br>clients with servers, such as address formats, protocols,<br>initialization, and message queue locking.<p>Readers should be aware that the present book is not a<br>general-purpose text on network programming using C++; this<br>book is a focused exposition of the ACE frameworks. Readers<br>will be most comfortable reading this book if they are<br>already familiar with software design and architecture<br>patterns, including those described in "Pattern-Oriented<br>Software Architecture: Patterns for Concurrent and Networked<br>Objects, Volume 2" by Douglas Schmidt et al, and in the<br>famous Gang of Four book: "Design Patterns: Elements of<br>Reusable Object-Oriented Software" by Eric Gamma et al.<p>The large amount of code that implements the wrappers of<br>volume 1 and the frameworks of volume 2 is available for<br>download for free. This code is in wide use today.<p>Designers of networked applications, when offered a large<br>pile of code that purports to do a lot of what needs to be<br>done, must trade off the anticipated saving in design and<br>implementation time against the anticipated time to<br>understand what the offered code is intended to do and what<br>it actually does. This tradeoff can lead a reasonable<br>designer to ignore existing code in favor of hand-writing an<br>entire application. In the case of the ACE wrappers and<br>frameworks, as documented and explained by the two books<br>mentioned here, combined with the open-source nature of the<br>implementing code and its widespread employment in real<br>applications, make the result of this tradeoff pretty clear:<br>read the books, use the code.</span>
                  
                    <div class="CustomerReviewSummary">Detailed coverage of the ACE frameworks</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-12-02</span>
                    </div>
                    <span>As in the ACE toolkit itself, C++NPv2 builds on the work described in volume 1 with a focus on the more powerful and (in my opinion) more interesting aspects of ACE...the frameworks that make developing network applications a pleasure.<p>Although the book recommends that you be familiar with the underlying patterns before delving into the details, I think that anybody who has experience developing network applications will be able to fully grasp the power of these frameworks without necessarily having knowledge of the patterns.<p>The areas of the book I found most useful were the description of the ACE Reactor framework (Ch 3), Reactor implementations (Ch 4), the description of the ACE Task framework (Ch 6) and the description of the ACE Streams framework (Ch 9).<p>Use of UML sequence diagrams made it easier to understand the interaction between application and framework code. However, I think more space could have been devoted to the class diagrams to give a clearer picture of the relationship between application and framework classes.<p>I also found the highlighting of common techniques in sidebars to be very informative.<p>The only complaint I have is that this book wasn't available in January 2001 ;-(</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201734842'>
                      C++ Templates: The Complete Guide
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 16 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471606952'>
                      Pattern-Oriented Software Architecture, Volume 2, Patterns for Concurrent and Networked Objects
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201760428'>
                      Exceptional C++ Style : 40 New Engineering Puzzles, Programming Problems, and Solutions (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321113586'>
                      C++ Coding Standards : 101 Rules, Guidelines, and Best Practices (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 14 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201379279'>
                      Advanced CORBA(R) Programming with C++
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 33 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

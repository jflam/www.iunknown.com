
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: How to Design Programs: An Introduction to Programming and Computing
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0262062186" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjYyMDYyMTg2LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEhvdyB0byBEZXNpZ24gUHJvZ3JhbXM6IEFuIEludHJvZHVjdGlvbiB0byBQcm9ncmFtbWluZyBhbmQgQ29tcHV0aW5nOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxNYXR0aGlhcyBGZWxsZWlzZW4sIFJvYmVydCBCcnVjZSBGaW5kbGVyLCBNYXR0aGV3IEZsYXR0LCBTaHJpcmFtIEtyaXNobmFtdXJ0aGk7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ2Ny4wMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDU3LjM2Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw1LjA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDc7Pj47Pjs7Pjt0PEA8aHR0cDovL3d3dy5hbWF6b24uY29tL2V4ZWMvb2JpZG9zL0FTSU4vMDI2MjA2MjE4Ni9yZWY9bm9zaW0vaXVua25vd25jb20tMjA7Pjs7Pjt0PDtsPGk8MD47aTwxPjs+O2w8dDxAPEJvb2sgRGVzY3JpcHRpb247Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoaXMgaW50cm9kdWN0aW9uIHRvIHByb2dyYW1taW5nIHBsYWNlcyBjb21wdXRlciBzY2llbmNlIGluIHRoZSBjb3JlIG9mIGEgbGliZXJhbCBhcnRzIGVkdWNhdGlvbi4gVW5saWtlIG90aGVyIGludHJvZHVjdG9yeSBib29rcywgaXQgZm9jdXNlcyBvbiB0aGUgcHJvZ3JhbSBkZXNpZ24gcHJvY2Vzcy4gVGhpcyBhcHByb2FjaCBmb3N0ZXJzIGEgdmFyaWV0eSBvZiBza2lsbHMtLWNyaXRpY2FsIHJlYWRpbmcsIGFuYWx5dGljYWwgdGhpbmtpbmcsIGNyZWF0aXZlIHN5bnRoZXNpcywgYW5kIGF0dGVudGlvbiB0byBkZXRhaWwtLXRoYXQgYXJlIGltcG9ydGFudCBmb3IgZXZlcnlvbmUsIG5vdCBqdXN0IGZ1dHVyZSBjb21wdXRlciBwcm9ncmFtbWVycy5cPGJyIC9cPiBcPGJyIC9cPiBUaGUgYm9vayBleHBvc2VzIHJlYWRlcnMgdG8gdHdvIGZ1bmRhbWVudGFsbHkgbmV3IGlkZWFzLiBGaXJzdCwgaXQgcHJlc2VudHMgcHJvZ3JhbSBkZXNpZ24gZ3VpZGVsaW5lcyB0aGF0IHNob3cgdGhlIHJlYWRlciBob3cgdG8gYW5hbHl6ZSBhIHByb2JsZW0gc3RhdGVtZW50XDsgaG93IHRvIGZvcm11bGF0ZSBjb25jaXNlIGdvYWxzXDsgaG93IHRvIG1ha2UgdXAgZXhhbXBsZXNcOyBob3cgdG8gZGV2ZWxvcCBhbiBvdXRsaW5lIG9mIHRoZSBzb2x1dGlvbiwgYmFzZWQgb24gdGhlIGFuYWx5c2lzXDsgaG93IHRvIGZpbmlzaCB0aGUgcHJvZ3JhbVw7IGFuZCBob3cgdG8gdGVzdC4gRWFjaCBzdGVwIHByb2R1Y2VzIGEgd2VsbC1kZWZpbmVkIGludGVybWVkaWF0ZSBwcm9kdWN0LiBTZWNvbmQsIHRoZSBib29rIGNvbWVzIHdpdGggYSBub3ZlbCBwcm9ncmFtbWluZyBlbnZpcm9ubWVudCwgdGhlIGZpcnN0IG9uZSBleHBsaWNpdGx5IGRlc2lnbmVkIGZvciBiZWdpbm5lcnMuIFRoZSBlbnZpcm9ubWVudCBncm93cyB3aXRoIHRoZSByZWFkZXJzIGFzIHRoZXkgbWFzdGVyIHRoZSBtYXRlcmlhbCBpbiB0aGUgYm9vayB1bnRpbCBpdCBzdXBwb3J0cyBhIGZ1bGwtZmxlZGdlZCBsYW5ndWFnZSBmb3IgdGhlIHdob2xlIHNwZWN0cnVtIG9mIHByb2dyYW1taW5nIHRhc2tzLlw8YnIgL1w+IFw8YnIgL1w+IEFsbCB0aGUgYm9vaydzIHN1cHBvcnQgbWF0ZXJpYWxzIGFyZSBhdmFpbGFibGUgZm9yIGZyZWUgb24gdGhlIFdlYi4gVGhlIFdlYiBzaXRlIGluY2x1ZGVzIHRoZSBlbnZpcm9ubWVudCwgdGVhY2hlciBndWlkZXMsIGV4ZXJjaXNlcyBmb3IgYWxsIGxldmVscywgc29sdXRpb25zLCBhbmQgYWRkaXRpb25hbCBwcm9qZWN0cy47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+5uvgnaAkeAqhXSKsJpO3EUIXyvM=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0262062186.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">How to Design Programs: An Introduction to Programming and Computing</span>
        <div class="ItemDetail">By
          <span id="Authors">Matthias Felleisen, Robert Bruce Findler, Matthew Flatt, Shriram Krishnamurthi</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$67.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$57.36</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">5.0</span>
          based on
          <span id="TotalReviews">7</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0262062186/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">This introduction to programming places computer science in the core of a liberal arts education. Unlike other introductory books, it focuses on the program design process. This approach fosters a variety of skills--critical reading, analytical thinking, creative synthesis, and attention to detail--that are important for everyone, not just future computer programmers.<br /> <br /> The book exposes readers to two fundamentally new ideas. First, it presents program design guidelines that show the reader how to analyze a problem statement; how to formulate concise goals; how to make up examples; how to develop an outline of the solution, based on the analysis; how to finish the program; and how to test. Each step produces a well-defined intermediate product. Second, the book comes with a novel programming environment, the first one explicitly designed for beginners. The environment grows with the readers as they master the material in the book until it supports a full-fledged language for the whole spectrum of programming tasks.<br /> <br /> All the book's support materials are available for free on the Web. The Web site includes the environment, teacher guides, exercises for all levels, solutions, and additional projects.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Everyone should learn to design programs</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>11</span>
                      /
                      <span>12</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-03</span>
                    </div>
                    <span>As a programming do-it-yourselfer I've had many conflicting responses to this text -- it's didactic style, its attention to detail, its sometimes patronizing tone, its rigor and broad scope and at the same time its immersion in minutia and quiddities I have never encountered in 'computer books' I had ever perused. Perhaps it's my liberal arts background, or love 'em/hate 'em sensitivity to all those broad stiff-spined textbooks I had carried in back-packs since childhood, combined with a disdain for the authoritative stilted style these educators exude -- despite their patent love of their subject. I felt at once both patronized and condescended to.<br>	From the very start of their journey into a detailed six step-by-step process that show the reader how to analyze problem statements, how to formulate goals, make up examples, outline a solution, and test a solution the authors proclaim their pedagogical ends: "We [...] believe that the study of program design deserves the same central role in general education as mathematics and English. Or, put more succinctly, everyone should learn how to  design programs..." This is not a textbook, this is a revolutionary pamphlet calling for educational reform. I had read nothing like this in the tens of 'Dummies' and 'In 24 Hours' books I had exposed myself to. One part priggish, two parts pedagogic. I often found myself asking for whom was it written? First-year college student?, ambitious would-be high-school programmer wanna-be? Math mavens? Surely not a middle-aged bookish clerk who tastes run more to Turgenev and Dostoevsky than Turing and Dijkstra. But then I demanded more than mere anonymous web-lurking from my lowly pc. I remember myself many years ago trying to learn BASIC on a massive time-share computer and telling myself surely there was had to be more magic to computing than this. Well, after reading more texts and having had to unlearn the 'Dummies' and the 'In 24 hours' style of disinformation I had finally found the marrow of a discipline that is as demanding as any I had ever come across and as vexing as any artistic rigor I had ever been inspired by. Come be confused, come be amused, amazed and intellectually abused. Sorely, if I find I have little talent for this excruciatingly logical endevour, I have also found a full-blown appreciation of such daunting computational cheekiness. Much to learn here, and this is only the "core subject of a liberal arts education." What had I been wasting my time on all those years as a professional student?</span>
                  
                    <div class="CustomerReviewSummary">The joy of learn programming</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-11-15</span>
                    </div>
                    <span>Great book! I liked the way the author approaches how to begin designing programs. I am half-way through the book and I am finding it very entertaining. Yeap! I recommend this book.</span>
                  
                    <div class="CustomerReviewSummary">Should be read by Everyone who wants to program.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>27</span>
                      /
                      <span>29</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-09-27</span>
                    </div>
                    <span>Have you ever looked at other people's codes and said to yourself something like "No... this isn't the way it should be written!". Or, worst yet, have you ever been asked by someone who wants you to read his/her codes and tell him/her what does it do? <p>Both things happened quite often, though.<p>The problems are mainly because they don't know how to "design" their programs properly. Being able to progam doesn't mean being to design/organize a good code at all. And being good at finding/inventing algorithms for problem solving doesn't mean that either.<p>One another thing, I (maybe just only me, I don't know) think that C shouldn't be taught as the first language (at least, not anymore). This is mainly because, in C, you can hardly express yourself. Also, C codes look cryptic to those new to programming. And you must know a lot, and practice a lot, (that takes a lot of time, friend) to be able to express what you want.<br>And also, several times, I saw many people just playing around with the * and & (well, the pointer-dereferencing, and address-taking symbol in C/C++), adding one more, deleting one off, to see which will make their programs work. (Sometime, it just works by miracle...)<p>This book, using Scheme (a modern dialect of Lisp) as the language of choice. I, personally, agree of choosing it. Scheme was designed in the way such that programmers can focus on what they want to express, rather than imprementation details. From my own experience, I became a better programmer after learning it. (I was already a C++ programmer by that time. I just have to use Lisp on my study/research).<p>One thing that I like is that, it focused on how to "design" programs, not just how to program, while college classes are mostly focused on how to write programs. No matter how students write their codes, if it could run, then it is fine.<p>Then, I think, a lot of people do have ability to program, a lot are good at it. However, the number of people who knows how to design programs are much lesser. And this would result in something like those silly examples at the beginning of this review. Therefore, this book had emphasized on quite an important thing.<p>And the last thing to say about this one is: MIT Press' textbooks are very high-quality, and this one is not an exception. It is very easy to read and to understand. And, even the html version is available at the book's official homepage, it is nice to have the printed version.<p>How to "design" programs is very important for every CS major people, and is important to everyone else in general (to program your "everyday life schedule", etc). Whether you want to become a professional programmer (write codes for living, etc) or not.</span>
                  
                    <div class="CustomerReviewSummary">the best resource for a college-level introduction</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>16</span>
                      /
                      <span>17</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-05-13</span>
                    </div>
                    <span>Eric Raymond writes in "How to be a hacker" that learning  Lisp will make you a better programmer for the rest of  your days. And this book shows why. With Lisp (actually Scheme, but never mind that), your programs match your  problem statement. Programming is no longer a mystical experience where "it suddenly works". With this book (and Scheme) you understand *why* it works. In this day and age, it is exactly the book that freshmen should see .. especially those who think they already know how to program. Thanks for writing this book. It will make my teaching easier.</span>
                  
                    <div class="CustomerReviewSummary">This is "the book" on programming</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>18</span>
                      /
                      <span>18</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-04-29</span>
                    </div>
                    <span>This book is going to be a classic. Unlike other introductory books on programming, it focuses on ideas not examples. It teaches students to organize their thoughts. It emphasizes  thinking through problems. It pushes students to formulate  concise comments, illustrate them with concrete examples, and test their programs systematically and automatically. I have  not seen anything like this before. If you want to know the "why" and not just play with examples, buy this book!  Note: It uses Scheme, which isn't widely used in industry (yet?) but don't let this deter you. The language is free, and it is very simple.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262541483'>
                      The Scheme Programming Language : Third Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 0 based on 0 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=026256100X'>
                      The Seasoned Schemer
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 2 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262560992'>
                      The Little Schemer - 4th Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 15 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262011530'>
                      Structure and Interpretation of Computer Programs - 2nd Edition (MIT Electrical Engineering and Computer Science)
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 140 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262692201'>
                      Instructor's Manual t/a Structure and Interpretation of Computer Programs - 2nd Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 3 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

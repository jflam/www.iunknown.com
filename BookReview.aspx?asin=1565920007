
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: lex & yacc, 2nd Edition (A Nutshell Handbook)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=1565920007" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8xNTY1OTIwMDA3LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPGxleCAmIHlhY2MsIDJuZCBFZGl0aW9uIChBIE51dHNoZWxsIEhhbmRib29rKTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8Sm9obiBMZXZpbmUsIFRvbnkgTWFzb24sIERvdWcgQnJvd247Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQyOS45NTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDE5Ljc3Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0LjA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDI5Oz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzE1NjU5MjAwMDcvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDxwPHA8bDxWaXNpYmxlOz47bDxvPGY+Oz4+Oz47bDxpPDA+O2k8MT47PjtsPHQ8QDxcZTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8XGU7Pj47Pjs7Pjs+Pjs+Pjs+Pjs+cxu+d+RiID+BOApxFvMYKobGNuU=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/1565920007.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">lex & yacc, 2nd Edition (A Nutshell Handbook)</span>
        <div class="ItemDetail">By
          <span id="Authors">John Levine, Tony Mason, Doug Brown</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$29.95</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$19.77</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.0</span>
          based on
          <span id="TotalReviews">29</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/1565920007/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">ok, but there is a better LEX/YACC book</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-04-26</span>
                    </div>
                    <span>To keep it simple, the book "Introduction to Compiler Construction in UNIX" introduces and explains LEX/YACC far better than this book. It uses a more realistic example and shows the error handling in more detail. This book is ok for a quick intro, but for a 'real" user, refer to the book I mentioned above.</span>
                  
                    <div class="CustomerReviewSummary">Still the best lex/yacc intorduction out there!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-04-22</span>
                    </div>
                    <span>Like many O'Reilly books, this is really just an introduction to<br>something that is hard to get intorduced to.  The book is not a<br>definitive guide, but a definitive guide has no starting point.<br>After reading this book, you should be able to construct some<br>simple scanners with lex/flex and parsers with yacc/bison, but<br>more importantly, you should be able to read more definitive<br>documentation.</span>
                  
                    <div class="CustomerReviewSummary">Disappointing</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-12</span>
                    </div>
                    <span>This book was disappointing. I had hoped for a tutorial and reference on Lex/Yacc Flex/Bison for building language recognisers, but in the tradition of "yet another boring and useless reverse polish notation" calculator - it gives us a desktop infix expression calculator. (How could I have possibly guessed?)<p>The book presents some interesting material for those who want to parse SQL, but if you're eager to learn about translating programming languages, this book is nearly useless. It gives superficial and confusing treatment of language constructs like "if-then-else" statements, and gives only an exercise for recognising a function call and "playing it back."  (I feel these are cop-outs.)  It also fails to explain clearly how to construct unambiguous grammars, or use facilities for operator precedence or whatver to control the ambiguity.<p>To be fair, I am guessing this was meant as a reference for Lex/Yacc for those who already know how to construct language recognisers and have some knowledge of using these tools.  But then why bother to give especially bad tutorial material in the early chapters if this were the case?<p>This books is also in need of a new edition.</span>
                  
                    <div class="CustomerReviewSummary">This acts as a Helping hand for compiler developrs</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-12-26</span>
                    </div>
                    <span>Firstly there are not many books on Lex & Yacc.<br>Unix programming by Kernighan & Pike provides<br>some necessary information but it is not sufficient<br>to write a complex parser or scanner. In these circumstances<br>this book acts like a God given gift for compiler developers.<p>The examples which introduce the tools are very good.<br>But the theory behind these examples is not well explained.<br>Probably NFA/DFA concepts add more strenght to the<br>book. Adding more and more concepts and examples<br>will make this as a unique book in the Market.<p>Many guys who desire jobs as compiler developers<br>follow this book. So some contemporary examples that<br>I expect from future editions of this book are <br>A) Parsing a Gate level design<br>B) A small simulator which simulates an analog/digital design<br>C) An assembler etc<br>D) Relational algebra tutor etc.<p>Hope the authors can consider this request.</span>
                  
                    <div class="CustomerReviewSummary">Not good, but beggars can't be choosers</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-10-09</span>
                    </div>
                    <span>There is too much repetition of basic ideas in the first few chapters of the book, and not enough coverage of more advanced topics (like how to use marker nonterminals, how to use $<>$ constructs, etc).<p>The discussion of shift/reduce and reduce/reduce conflicts in chaper 8 is pretty good though and would make a fine introduction for a beginner wanting to learn /basic/ concepts.<p>Good error handling is definitely a black art, but I still would have liked to have been given more information about it in chapter 9.  The examples were also a bit too soft.<p>Chapters 4 and 5 have some interesting (and highly unusual)examples for scanning and parsing applications, but they do not show off many of the advanced capabilites of lex and yacc. What this book really needs are couple of examples that demonstrate how to overcome classic scanning and parsing horrors (like how to do type checking in, say, C); a chapter like this instead of one of chapters 4 or 5 would be great.<p>Even today lex and yacc are very important tools in the computer scientist's toolkit. They were designed 25 (or so) years ago, but /real/ documentation is still nonexistant. This means that unfortunately, this book is one of the best.<p>I think that the FSF's Bison manual is much better value for money. It also does not cover advanced topics in enough depth, but what is does explain, it explains quite clearly.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=188211423X'>
                      Bison: The Yacc-Compatible Parser Generator, September 2003, Bison Version 1.875,
                    </a>
                    <div class="SimilarItemRatings">Rating: 0 based on 0 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471597546'>
                      Constructing Language Processors for Little Languages
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 2 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=155860698X'>
                      Engineering a Compiler
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201100886'>
                      Compilers
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 47 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471113530'>
                      Writing Compilers and Interpreters
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 17 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

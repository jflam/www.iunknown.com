
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Thinking in C++, Vol. 2: Practical Programming, Second Edition
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0130353132" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMTMwMzUzMTMyLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoaW5raW5nIGluIEMrKywgVm9sLiAyOiBQcmFjdGljYWwgUHJvZ3JhbW1pbmcsIFNlY29uZCBFZGl0aW9uOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxCcnVjZSBFY2tlbCwgQ2h1Y2sgQWxsaXNvbjs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDU0Ljk1Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMzYuMjc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDUuMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8Njs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMTMwMzUzMTMyL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8Qm9vayBEZXNjcmlwdGlvbjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8XDxQXD5cPEgzXD4gVGhlIGxvbmcgYXdhaXRlZCBzZXF1ZWwgdG8gdGhlIGhpZ2hseSBzdWNjZXNzZnVsIFRoaW5raW5nIGluIEMrKy4gTW9yZSBjb3ZlcmFnZSBvZiBhZHZhbmNlZCB0b3BpY3MgcHJvZmVzc2lvbmFsIGRldmVsb3BlcnMgbXVzdCBtYXN0ZXIuICAgXDwvSDNcPlw8VUxcPlw8TElcPiBFbXBoYXNpcyBvbiBhZHZhbmNlZCB0ZXN0aW5nIHRlY2huaXF1ZXMgdG8gcHJvZHVjZSBvcHRpbWl6ZWQgZXJyb3IgZnJlZSBjb2RlLiAgIFw8L0xJXD5cPExJXD4gSW4gZGVwdGggY292ZXJhZ2Ugb2YgU1RMIHdpdGggcmVhbCB3b3JsZCByZXVzYWJsZSBjb2RlIGV4YW1wbGVzLiAgIFw8L0xJXD5cPExJXD4gU2ltcGxlIHNob3J0IGV4ZXJjaXNlcyB0aGF0IHNpbXBsaWZ5IGNvbXBsZXggcHJvZ3JhbW1pbmcgcm91dGluZXMuICAgXDwvTElcPlw8TElcPiBCb3RoIGF1dGhvcnMgYXJlIGhpZ2hseSByZXNwZWN0ZWQgYW5kIHdpZGVseSBrbm93bi4gICAgXDwvTElcPlw8L1VMXD47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+gSKO0tO4haBKHXzT8/68+dYSQHI=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0130353132.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Thinking in C++, Vol. 2: Practical Programming, Second Edition</span>
        <div class="ItemDetail">By
          <span id="Authors">Bruce Eckel, Chuck Allison</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$54.95</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$36.27</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">5.0</span>
          based on
          <span id="TotalReviews">6</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0130353132/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1"><P><H3> The long awaited sequel to the highly successful Thinking in C++. More coverage of advanced topics professional developers must master.   </H3><UL><LI> Emphasis on advanced testing techniques to produce optimized error free code.   </LI><LI> In depth coverage of STL with real world reusable code examples.   </LI><LI> Simple short exercises that simplify complex programming routines.   </LI><LI> Both authors are highly respected and widely known.    </LI></UL></span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">The only other C++ book you would need</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-04</span>
                    </div>
                    <span>There are plenty of C++ books out there. When it comes down to it, one would really need two books on C++. Well, this is the second book you need; with the first one being any of many classics including the first volume of this book. Just when you think you have read or have a reference to all the C++ topics, Eckel and Allison come out with their continuation of a classic - volume two of Thinking in C++. <P>Exceptions, Templates, STL, Design Patterns, Multiple Inheritance, concurrency and parallel programming are just some of the main topics covered in this book. With the book being over 800 pages, one can imagine how deep each of these topics must have been covered. Exceptions grab you right off the bat. Just when you think you know all about exceptions, the authors throw you a curve ball with "Exception Specification", and how to handle the "unexpected". You are blown away by the true control that C++ gives you. . <BR>Strings, along with examples given to depict the string class in full - as part of the standard template library (STL) of C++, begin the authors' discussion of the Standard Template Library. Vectors, sets, lists and many other features of the STL have their own dedicated section which talks about generic containers. The authors set the stage for STL by describing the containers as:<P>"Container classes are the solution to a specific kind of code reuse problem. ...A container class describes an object that holds other objects..."<P>The authors then continue on to cover the very important and broad topic in C++ - containers. Examples after examples are used to convey the details and the tricky parts of the C++ STL. The key by reading this chapter is to portray and teach efficient techniques to common problems using the generic container classes. Not only the reader can learn most of what s/he needs to know about containers in this book, a small introduction is also given to show how to actually write a generic container - a linked list. The example is simple, yet powerful in conveying to the reader the ins and outs of writing generic containers. Speaking of generic, generic algorithms are covered very well in this book. All of the algorithms currently in the C++ library are covered with an accompanying example for each one. A special attention is given to the use of function objects as the means of customizing these algorithms. <P>"A function object is an instance of a class that overloads operator(), the function call operator. This operator allows an object to be used with function call syntax"<P>Probably the simplest and the easiest definition of algorithm complexity theory is given in this book. The authors make the concept so easy to understand that even a non-programmer or mathematician can understand the reason and the complexity of complexity theory! <BR>Templates are probably my favorite topics in this book. Next to the C++ template "bible" by Vaqndervoorde and Josuttis, this book is the best source for generic programming and templates. The authors cover the three main topics of templates well:	<BR>1)	Templates with types as parameters<BR>2)	Templates with compile-time constant as values<BR>3)	Templates with other templates as values. <BR>The authors start with small and simple examples and build on top of them. Templates are generally a difficult topics to cover and to convey, but the authors do a great job in depicting the examples and teaching the reader how templates work and to create powerful programs with them. <BR>The advanced topics in this book (multiple inheritance, runtime type identification, design patterns, and concurrent programming) are my favorite topics. Multiple Inheritance is covered in depth, better than any other book that I have seen out there. The authors do caution the readers regarding the difficulties and the pitfalls of multiple inheritance, but they also explain with examples, pictures, etc... how a developer can overcome these difficulties (using upcast to resolve naming conflicts for example or avoiding the diamond-shaped inheritance tree).<BR>Concurrency and concurrent programming is one of the more difficult things to do in C++. Threads are usually used to achieve such task, but it takes practice and lots of sleepless nights to debug threaded programs and resolve deadlock issues with threads. The advantages of threads (ability to run multiple tasks concurrently, very low context switching relative to processes, allow better code organization and the added convenience to the user specially for graphical user interface tasks) are depicted and shown thru a number of examples. The most important part of this section is how the authors use examples to show what the right way of doing something is as oppose to simply putting bunch of source code together to fill in the blank pages. The examples are priceless to me and very beneficial to any programmer.<P>All and all, Bruce Eckel and Chuck Allison did a great job putting this book together. The topics covered are very beneficial to any serious C++ programmer or anyone wishing to become one. I particularly like the examples and "how-to's" given throughout the book as they are a valuable source when I am stuck with a programming challenge.</span>
                  
                    <div class="CustomerReviewSummary">Defies the First Law of Technical Documentation</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-04-07</span>
                    </div>
                    <span>The First Law of Technical Documentation states that:<BR>"The more complicated the subject, the less will be written about it, and the more likely there will be errors in what is written".<P>This explains why typical programming books will have fifteen pages on If statements, but only a paragraph that says that "Interrupts can be serviced".<P>Bruce does a masterful job of building the readers up so they are able to gradually yet thoroughly assimilate the subject matter. Thanks to years of putting on seminars and taking comments from readers, he teaches in useful and productive increments without overwhelming the readers. His examples are well thought out and useful. He actually responds to questions and comments. Please don't spam him, he seems like a genuinely nice guy! I look forward to taking one of his seminars in person.</span>
                  
                    <div class="CustomerReviewSummary">Deliver as promised</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-04-06</span>
                    </div>
                    <span>This is a fabulous book for learning<BR>the advanced capabilities of C++ so you <BR>can be as expressive and creative as you <BR>want when creating projects in C++.<P>I could have not completed a C++ project<BR>at work if I had not had this book.<P>This is a terrific book.</span>
                  
                    <div class="CustomerReviewSummary">Excellent followup to volume one</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-22</span>
                    </div>
                    <span>Volume Two picks up where the first left off, without skipping a beat. It starts by covering exceptions and unit tests, both of which should see more use in the real world. It then goes onto cover the standard C++ library in more depth that the first book. He then covers templates in a chapter that he calls 'Templates in Depth'. Yes, the coverage is long, about one hundred pages, but I would rename the chapter 'Templates at a practical level', which is exactly the where the coverage should be left. Templates, like macros, can be overused and have had whole books that cover the topic. Eckel chooses, and I think wisely so, to cover the topical to the extent that it would help you write practical templates yourself and to be able to use template libraries such as the Standard Template Library (STL).<P>The STL is covered, well, in the two chapters that follow the template chapter. Once again the coverage is not absolutely complete because of the grand scope of the field. There are long books on the STL, but these chapters provide a pragmatic and thorough introduction which should serve for most practical purposes. <P>The final chapters cover advanced topics. Notable are the chapters on Design Patterns which are designs for templates and classes what are considered industry 'best practice'. So instead of redesigning the wheel you use a design pattern, where appropriate. If you get into design patterns you should also read the extremely popular Design Patterns book, now in it's 25th printing.<P>In the final chapters is also a discussion on multiple inheritance and threading. Both of which are covered at a pragmatic level and have whole books dedicated to the subject.<P>This is an excellent, and needed addition to the original Thinking in C++ book. Both of the books are written in an accessible style and cover the topics at a practical level without rat-holing. For aspiring C++ programmers there is probably no better set of books to read as an introduction to C++.</span>
                  
                    <div class="CustomerReviewSummary">I've waited this book so long!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-02-19</span>
                    </div>
                    <span>I've love his 'Thinking in ~' series from the first time<BR>I read his 'Thinking in Java, 1st ed.'<P> This book, Thinking in C++, vol2, as you know from the sub title 'Pratical Programming', cover pratical features like<BR>Standard teplate library, Generic Algorithm, Generic Container, <BR>Design Pattern and MultiThreading.<P> A few years ago, I tried to study c++ standard libray with this<BR>book of electronic version(you can get it from http://www.mindview.net), but it was not so easy to study with electronic book. <BR> <BR> So I studied with 'The C++ Standard Libray : A tutorial and Reference'. But if this book had released at that time, I <BR>would have chosen this one. <P> I've really waited this book so long...</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201700735'>
                      The C++ Programming Language (Special 3rd Edition)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 232 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201379260'>
                      The C++ Standard Library : A Tutorial and Reference
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.8 based on 64 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131002872'>
                      Thinking in Java (3rd Edition)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 266 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201924889'>
                      Effective C++: 50 Specific Ways to Improve Your Programs and Design (2nd Edition)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.9 based on 88 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=020170353X'>
                      Accelerated C++: Practical Programming by Example
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 51 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

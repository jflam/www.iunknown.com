
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Lean Software Development: An Agile Toolkit for Software Development Managers
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0321150783" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMzIxMTUwNzgzLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPExlYW4gU29mdHdhcmUgRGV2ZWxvcG1lbnQ6IEFuIEFnaWxlIFRvb2xraXQgZm9yIFNvZnR3YXJlIERldmVsb3BtZW50IE1hbmFnZXJzOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxNYXJ5IFBvcHBlbmRpZWNrLCBUb20gUG9wcGVuZGllY2s7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQzOS45OTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDM0LjU0Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw0LjY7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDExOz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzAzMjExNTA3ODMvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDxwPHA8bDxWaXNpYmxlOz47bDxvPGY+Oz4+Oz47bDxpPDA+O2k8MT47PjtsPHQ8QDxcZTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8XGU7Pj47Pjs7Pjs+Pjs+Pjs+Pjs+QcMyWVFiydqt4tAn03Afov9M10k=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0321150783.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Lean Software Development: An Agile Toolkit for Software Development Managers</span>
        <div class="ItemDetail">By
          <span id="Authors">Mary Poppendieck, Tom Poppendieck</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$39.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$34.54</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.6</span>
          based on
          <span id="TotalReviews">11</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0321150783/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Excellent book that teaches how to think agilely</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>13</span>
                      /
                      <span>14</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-06-01</span>
                    </div>
                    <span>Books written during the first phase of agile software development have been about very specific practices we should employ. There are some excellent books on the Extreme Programming, Feature-Driven Development and Scrum agile processes. These books teach us "do a, b, and c if you want to do Extreme Programming" or "do x, y and z if you want to do Scrum."<P>In the last year we've seen books by Highsmith (Agile Software Development Ecosystems) and Cockburn (Agile Software Development) that represent the second wave of agile software development-that of learning to think agilely rather than following a prescribed set of agile rules. Mary and Tom Poppendieck's book is the latest and best book for teaching how to think agilely.<P>The book contains 22 "thinking tools." The thinking tools are drawn from the world of lean manufacturing where they have helped improve product delivery speed, quality and cost. Each tool is presented as a guideline. Each thinking tool is described with enough detail that you can put it into practice; but, more importantly, the reasons supporting each are made explicit. So, instead of simply reading that it is good to "deliver as fast as possible" we learn how rapid delivery is supported by pull systems (where work is pulled into the current step from the prior step), how queuing theory helps us identify bottlenecks, and how to calculate the cost of delay (to see which bottlenecks are worth removing).<P>This book is the perfect blend of highly actionable instructions and descriptions of why those actions work. I highly recommend this book to anyone who wishes to improve his or her software development process. The authors' ideas are applicable both to projects using agile approaches today and to more traditional, plan-driven projects.</span>
                  
                    <div class="CustomerReviewSummary">Get the information elsewhere</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>16</span>
                      /
                      <span>28</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-08-09</span>
                    </div>
                    <span>The authors attempt to apply lean manufacturing principles and techniques to software development. Despite repeatedly warning the reader that manufacturing is different than software development, most of the examples are not from software development. Some examples were mildly interesting, but they just didn't apply. This had the weird effect of casting doubt on the whole concept they were trying to exemplify. The effort seemed forced, and the focus on manufacturing detracted from providing a clear and practical guide to software development.<P>The authors present some relevant tools (delaying decisions, eliminating waste, etc.) but these are not new and are presented in a more accessible format in other books. Some of the tools just did not register. Value Stream Mapping, for instance, showed delays were usually instigated by the customer, and we all serve at the pleasure of the customer. Queueing Theory is a long-winded and confusing way of saying what we already know from other agile exponents - that small batches are better. Despite the slimness (under 200 pages), it seemed like a lot of reading for very little information.<P>Still, I have to give at least two stars for any book that is aligned with agile practices.</span>
                  
                    <div class="CustomerReviewSummary">Not just for Agile Development</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-22</span>
                    </div>
                    <span>Although this book is from the Agile-series, the approach and advice extends to any methodology from the heavy (and still used) waterfall SDLC, to XP and agile methods.<P>Key steps in this book will show you how to streamline your development methodology in accordance with lean thinking:<BR>- Eliminate waste by cutting the fat out of processes, reducing rework, viewing your SDLC as a value stream.<BR>- Amplify learning, with an emphasis on iterative planning, feedback loops and team communications.<BR>- Decide as late as possible, which is enabled by concurrent activities, depth-first versus breadth-first problem solving, and other effective tools and techniques.<BR>- Deliver as fast as possible, based on analogies between manufacturing pull systems and scheduling, and how to accomplish the same in development.<BR>- Empower the team, which is a fundamental element of lean thinking. The tools and techniques presented in this section of the book are a mixture of common sense, leadership and management.<BR>- Build integrity in. If ever there were a direct connection between the lean thinking approach to manufacturing and software development, it is here. Tools and techniques given include model-driven development, refactoring and testing techniques. <BR>- See the whole, which emphasizes system thinking, metrics, optimization, and the supporting tools and techniques.<P>Any or all of the above can be effectively applied to any SDLC or methodology and produce results. Lean thinking was developed by Toyota as a manufacturing paradigm, which has been extended through that company and is applied to business processes outside of the manufacturing domain. That this team of authors has applied it to software development is not as unnatural as it may seem at first glance given how vastly different software is to create versus cars, for example. But, the paradigm has been proven outside of manufacturing before this book was written, and the basic philosophy and principles can be applied - which this book evidences.<P>If you want to look at development from an entirely unique perspective purge the words agile, XP and any other methodology from your mind while reading this book. I can almost guarantee that you'll find something in every chapter that you can put to immediate use in your own organization. As an aside, a book on software testing that is consistent with lean thinking in many ways, and closely aligned to the content of this book is "Software Testing Fundamentals: Methods and Metrics" ISBN 047143020X.</span>
                  
                    <div class="CustomerReviewSummary">Awesome book!</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-03-27</span>
                    </div>
                    <span>I had pretty much the same feeling reading this book and Lean Thinking, as I did when I first started reading up on agile methods. It all felt like common sense and that's a comment I hear from a lot of people new to lean/agile. However, I feel, and have experienced, that there is a huge gap between viewing or perceiving something as common sense and actually applying that common sense to the work you are doing. Also, both this book and Lean Thinking put these principles and practices into a different perspective by showing how they have worked in the manufacturing business. Seeing the parallels between the work done in manufacturing a bicycle and crafting a software program is pretty powerful.<P>Mary and Tom do a great job in the book of presenting specific tools for applying all this "common sense". They start by introducing the seven principles of lean thinking when applied to software development:<P> 1. Eliminate waste<BR> 2. Amplify learning<BR> 3. Decide as late as possible<BR> 4. Deliver as fast as possible<BR> 5. Empower the team<BR> 6. Build integrity in<BR> 7. See the whole<P>The rest of the book presents the 22 thinking tools that are all tied to the seven principles. Mary and Tom use a lot of real world examples of the usage of these tools and they do a very good job of explaining how each of them could fit into an agile ecosystem. <P>The book is pretty compact and the authors have clearly eliminated all waste from it because I was never bored.<P>I can't recommend it enough!</span>
                  
                    <div class="CustomerReviewSummary">Agile is good, provided there are proper safeguards</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-27</span>
                    </div>
                    <span>There is no doubt in my mind that keeping your options open as long as possible is always the best approach to solving any problem. That in essence, is what agile (lean) software development is. When it is possible and done right, agile methods can lead to a dramatic improvement in the quality of the software you create and the amount of profit that it generates. <BR> The authors make a convincing case for agile methods, citing many cases where the techniques have been successfully used, and not all are in software development. One example is Nucor, which operates a collection of profitable steel mills in the United States, at a time when the majority of steel companies are in severe financial straits. Another example is Xerox, and how their repair technicians were able to share their expertise. <BR> The primary example used outside the software industry is from the auto industry. In the early days, all auto production was via the assembly line, where the goal was to have nearly all workers engage in mindless routine. Rather than be critical of the assembly line, the emphasis here is on the fact that it was a necessary strategy for the times. In 1915, shortly after the assembly line was introduced, there were 7,000 workers at the Highland Park, Michigan plant, speaking fifty different languages. Most of the workers were immigrants who understood little or no English, so the cost of training them for complex tasks would have been prohibitive. The only solution was to train each worker to do one task, one that could be demonstrated several times until they understood. If necessary, a translator could also be present during the training for questions and comments, but given the simplicity of the task, a worker could be completely trained in a matter of minutes. Furthermore, since the product was new, the consuming public was not as demanding in terms of style options as it is now. <BR> However, the times have changed, and now people want cars to be custom made as much as possible, and segments of the auto industry have responded. However, this requires that two fundamental changes be made in the production process. The first is that where there are options, each of the possibilities is always available, and no choice significantly alters the flow of development. The second is that there be dynamic lines of communication always open, so the request accurately arrives at the production site as soon as possible.<BR> These two changes are the fundamentals of lean software development. Rather than create the complete blueprint for the software and then stamp out each part in succession, where one must be connected before the next, a general outline is used. Options for construction are developed and there is near-constant communication between the software developers and all the stakeholders. The best situation is a "How's this?" format, where the developers perform a build and ask everyone with a stake what they think about it. <BR> However, there are two primary problems to avoid, and both are fundamental to human nature. While delaying decisions until the last possible moment is an important feature of lean software development, the problem lies in determining when the last possible moment has arrived. In situations where delay is considered good, it is all too easy to go too far. While the authors' do a good job in emphasizing how decisions should be delayed, a bit more time could have been spent on knowing when it is time to move. I was reminded of the wise saying from legendary basketball coach John Wooden. He was constantly telling his players, "Be quick, but don't hurry." In other words, examine your options as long as you can, and then act as quickly as possible. <BR> The second is avoiding the "looking over their shoulders" situation. If you talk to mechanics, they will tell you that the signs that say "Due to insurance reasons, customers are not allowed in the work area" are there for more than customer safety. They also allow the mechanic to do the work without the customer interfering in any way. Therefore, for any structure that allows for continuous customer input to work, there must be a mechanism whereby the customer (including management), can be told to, "Go wait in the lobby." <BR> The information in this book is excellent, there are many good ideas that can help nearly all software development teams improve their performance. However, options always introduce additional complexity and managing some of that additional complexity is not thoroughly examined.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=073561993X'>
                      Agile Project Management with Scrum (Microsoft Professional)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321186125'>
                      Balancing Agility and Discipline: A Guide for the Perplexed
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131111558'>
                      Agile and Iterative Development: A Manager's Guide
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 12 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131424602'>
                      Agile Management for Software Engineering: Applying the Theory of Constraints for Business Results
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.4 based on 10 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321219775'>
                      Agile Project Management : Creating Innovative Products (Agile Software Development Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.9 based on 11 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Less is better comments on Second Drop of RubyCLR</title>
    <link>http://www.iunknown.com/</link>
    <language>en-us</language>
    <ttl>40</ttl>
    <description>Less is better comments</description>
    <item>
      <title>"Second Drop of RubyCLR": comment by Eirik</title>
      <description>&lt;p&gt;Great stuff! I've been waiting for Ruby on the CLR - but now that I have seen this I realize this is what I really wanted ;). &lt;/p&gt;

&lt;p&gt;Are you going to set up a project on rubyforge? &lt;/p&gt;</description>
      <pubDate>Wed, 15 Mar 2006 04:58:53 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-189</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-189</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Jeem</title>
      <description>&lt;p&gt;This f'n rocks.&lt;/p&gt;</description>
      <pubDate>Fri, 03 Mar 2006 14:04:50 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-175</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-175</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by piggy</title>
      <description>&lt;p&gt;Awesome! Not only the beautiful GUI, it also means I can optimize hungry-for-speed part of my ruby code into various .Net languages (such as Boo). Great work! Thanks.&lt;/p&gt;</description>
      <pubDate>Sun, 26 Feb 2006 01:09:09 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-161</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-161</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Justin</title>
      <description>&lt;p&gt;Ouch, RedCloths bizarre formatting strikes again. I'll just email you ;)&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 19:01:23 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-145</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-145</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Justin</title>
      <description>&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;I also found some crashing bugs. Here are the unit tests. Note that when these run they crash the interpreter. &lt;/p&gt;

&lt;p&gt;require 'test/unit'
require 'rubyclr'&lt;/p&gt;

&lt;p&gt;RubyClr::reference 'System'
RubyClr::reference 'System.Windows.Forms'&lt;/p&gt;

&lt;p&gt;include System::Windows::Forms&lt;/p&gt;

&lt;h1&gt;If any of these tests are run, the ruby interpreter crashes!&lt;/h1&gt;

&lt;p&gt;class CrashyTests &amp;lt; Test::Unit::TestCase&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_send
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;amp;lt;&amp;amp;lt; form
  def init
    self.send(:Text=, "test_form_meta_send")
  end
end

form.init
assert(form.Text == "test_form_meta_send")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_init
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;amp;lt;&amp;amp;lt; form
  def init
    self.Text = "test_form_meta_min"
  end
end

form.init
assert(form.Text == "")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_min
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;amp;lt;&amp;amp;lt; form
end

form.Text = "test_form_meta_min"
assert(form.Text == "test_form_meta_min")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;per_class
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def form.init
  self.Text = "test_form_per_class"
end

form.init
assert(form.Text == "test_form_per_class")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;end&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 19:00:35 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-144</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-144</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Justin</title>
      <description>&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;OK, I played around this some more and I have some deeper questions. How do I override the initialize method for all controls? I'd like to do something like this:&lt;/p&gt;

&lt;p&gt;Control.class_eval do
 def initialize
   super
   MessageBox.Show("Overriding initialize")
 end
end&lt;/p&gt;

&lt;p&gt;and have that MessageBox show up each time I create a control:&lt;/p&gt;

&lt;p&gt;Button.new
TextBox.new&lt;/p&gt;

&lt;p&gt;However, it doesn't work that way. If I override each control class individually , it does. &lt;/p&gt;

&lt;p&gt;Any suggestions?&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 18:58:47 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-143</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-143</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by John Lam</title>
      <description>&lt;p&gt;Oh yeah, I forgot to disable that. You'll see from looking at the source that the event handler binds to a non-existant grid object (it was there earlier, but I forget to delete the code from that event handler).&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 18:53:23 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-142</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-142</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Scott Hanselman</title>
      <description>&lt;p&gt;Great stuff! Question...when I click "Go":&lt;/p&gt;

&lt;p&gt;C:\hold&amp;gt;ruby rssreader.rb
./ruby&lt;em&gt;dynamic&lt;/em&gt;method.rb:138:in &lt;code&gt;method_missing': undefined local variable or me
thod&lt;/code&gt;grid' for #&amp;lt;MainForm:0x506be30&amp;gt; (NameError)
        from rssreader.rb:406:in &lt;code&gt;initialize'
        from rssreader.rb:404:in&lt;/code&gt;call'
        from ./rubyclr.rb:275:in &lt;code&gt;Run'
        from ./rubyclr.rb:275:in&lt;/code&gt;send'
        from ./rubyclr.rb:275:in &lt;code&gt;method_missing'
        from ./winforms.rb:23:in&lt;/code&gt;Run'
        from rssreader.rb:434&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 18:22:50 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-141</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-141</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by John Lam</title>
      <description>&lt;p&gt;Thanks for the feedback, Justin!&lt;/p&gt;

&lt;p&gt;I'm planning on providing a switch somewhere where I would automatically map ruby-casing to CamelCasing. So:&lt;/p&gt;

&lt;p&gt;form.back_color would map to form.BackColor&lt;/p&gt;

&lt;p&gt;This is more in line with how some of the Rails ActiveRecord stuff works. I have to think more about that though ...&lt;/p&gt;

&lt;p&gt;The delegate problem you're having is a bit disconcerting though. If you could come up with a repro, that would rock. I recently added some code to deal with holding references onto Ruby blocks to prevent them from being GC'd - this might be causing your problem, though I'm not sure.&lt;/p&gt;

&lt;p&gt;The enumeration suggestion sounds cool, but I'm not sure how to implement it. It might be possible by fiddling with scope resolution but I'd have to check with folks who know a lot more about Ruby than I do :)&lt;/p&gt;

&lt;p&gt;Keep the comments coming!&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 16:51:33 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-140</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-140</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Justin</title>
      <description>&lt;p&gt;Got a chance to play with this. Fantastic. I'll post my program in the Google News Group. A little feedback here tho:&lt;/p&gt;

&lt;p&gt;1) Would be nice if it was a little more forgiving on casing. I know Ruby isn't, either, but it would be cool if form.Controls.add worked (instead of Add)&lt;/p&gt;

&lt;p&gt;2) Delegates seem flakey but I don't have a better error report. Just seemed like sometimes my button wouldn't respond to clicks. Is there a delay in hoooking those up somewhere or is it all single-threaded?&lt;/p&gt;

&lt;p&gt;3) Automatic determinination of enumeration being used. E.g.:&lt;/p&gt;

&lt;p&gt;textBox.AnchorStyles = Left | Right | Top&lt;/p&gt;

&lt;p&gt;instead of &lt;/p&gt;

&lt;p&gt;textBox.AnchorStyle = AnchorStyles::Left | AnchorStyles::Right | AnchorStyles::Top&lt;/p&gt;

&lt;p&gt;Again, really fantastic stuff!&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 16:44:10 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-139</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-139</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Justin</title>
      <description>&lt;p&gt;Wow, really, really impressive. I hope to be able to play with this over the next couple of weeks. Thanks for all your hard work - this is great stuff!&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 12:00:28 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-138</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-138</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by John Lam</title>
      <description>&lt;p&gt;Yes - that's absolutely a goal for this project. A secondary goal for myself (or hopefully someone I can recruit to this project) is to implement the CodeDOM support required to serialize designer output to Ruby. This would let folks use the VS 2005 designers to generate all of the 'goo' that I had to write by hand in that sample.&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 09:06:56 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-137</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-137</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Thibaut Barr??re</title>
      <description>&lt;p&gt;Hi!&lt;/p&gt;

&lt;p&gt;This all looks very, very promising!&lt;/p&gt;

&lt;p&gt;I'd love to be able to write an application UI in .Net (comfortable use of the designer in VS.Net), while writing the core application in Ruby (so terse, so nice to write, so easy to create DSLs!).&lt;/p&gt;

&lt;p&gt;Do you think this will be doable ?&lt;/p&gt;</description>
      <pubDate>Tue, 21 Feb 2006 04:15:01 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-136</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-136</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR": comment by Michael Trier</title>
      <description>&lt;p&gt;Wow! Impressive John, very impressive.  I look forward to playing with all the bits.&lt;/p&gt;</description>
      <pubDate>Mon, 20 Feb 2006 21:02:30 Eastern Standard Time</pubDate>
      <guid>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-135</guid>
      <link>http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-135</link>
    </item>
    <item>
      <title>"Second Drop of RubyCLR" by jlam</title>
      <description>&lt;p&gt;It&amp;#8217;s alive and it&amp;#8217;s real:&lt;/p&gt;


	&lt;p&gt;&lt;img src="http://static.flickr.com/43/102353551_a14d82507d_o.png" alt="" /&gt;&lt;/p&gt;


	&lt;p&gt;This second release of my RubyCLR bridge contains a non-trivial Windows Forms 2.0 application written &lt;strong&gt;entirely in Ruby&lt;/strong&gt;. If you don&amp;#8217;t want to download the entire drop, you can &lt;a href="http://www.iunknown.com/images/rssreader.rb"&gt;click here&lt;/a&gt; to look at the source.&lt;/p&gt;


	&lt;p&gt;If you thought you&amp;#8217;ve seen this application before, you&amp;#8217;re right &amp;#8211; it&amp;#8217;s a partial port of Joe Stegman&amp;#8217;s &lt;a href="http://www.windowsforms.net/Default.aspx?tabindex=4&amp;#38;tabid=49"&gt;RSS Reader application&lt;/a&gt; that was designed to show off some of the more interesting features of Windows Forms 2.0.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;m pretty sure I could have finished porting the rest of the app, but I think I ported enough of it to demonstrate that you can actually use this drop to build a real app.&lt;/p&gt;


	&lt;p&gt;There are now 106 tests and 165 assertions in the unit test suite. They all pass.&lt;/p&gt;


	&lt;p&gt;This build now contains release builds of &lt;code&gt;RbDynamicMethod.dll&lt;/code&gt; and &lt;code&gt;RubyClrTests.dll&lt;/code&gt;, so it should run on any computer that has Ruby 1.8.2 and .NET Frameworks 2.0 &lt;span class="caps"&gt;RTM&lt;/span&gt; installed.&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://www.iunknown.com/images/RbDynamicMethod.zip"&gt;Get the bits here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;Enjoy.&lt;/p&gt;

</description>
      <pubDate>Mon, 20 Feb 2006 17:19:00 Eastern Standard Time</pubDate>
      <guid>&lt;a href="/articles/2006/02/20/second-drop-of-rubyclr"&gt;Second Drop of RubyCLR&lt;/a&gt;</guid>
      <link>&lt;a href="/articles/2006/02/20/second-drop-of-rubyclr"&gt;Second Drop of RubyCLR&lt;/a&gt;</link>
    </item>
  </channel>
</rss>

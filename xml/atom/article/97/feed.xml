<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <title>Less is better: A few quick observations</title>
  <subtitle type="html">John Lam on software</subtitle>
  <id>tag:www.iunknown.com,2005:Typo</id>
  <generator uri="http://www.typosphere.org" version="4.0">Typo</generator>
  <link href="http://www.iunknown.com/xml/atom/article/97/feed.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.iunknown.com/articles/2006/03/23/a-few-quick-observations" rel="alternate" type="text/html"/>
  <updated>2006-08-21T15:55:41-07:00</updated>
  <entry>
    <author>
      <name>John Lam</name>
      <email>jlam@iunknown.com</email>
    </author>
    <id>urn:uuid:e44eb131db136aaa65223d33ed172b9f</id>
    <published>2006-03-23T21:37:00-08:00</published>
    <updated>2006-08-21T15:55:41-07:00</updated>
    <title type="html">A few quick observations</title>
    <link href="http://www.iunknown.com/articles/2006/03/23/a-few-quick-observations" rel="alternate" type="text/html"/>
    <category term="links" scheme="http://www.iunknown.com/articles/category/links" label="Props"/>
    <summary type="html">&lt;p&gt;&lt;span class="caps"&gt;IE7&lt;/span&gt; finally renders my blog correctly! You can &lt;a href="http://www.microsoft.com/windows/ie/ie7/tour/default.mspx"&gt;get it here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve been pretty disappointed with Firefox 1.5 recently &amp;#8211; I just killed it when memory consumption hit 300MB an hour ago. I still need my Firefox extensions though, so I&amp;#8217;ll keep it around, but I suspect I&amp;#8217;ll be spending a bit more time in &lt;span class="caps"&gt;IE7&lt;/span&gt; for the next little while.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve been spending a lot of time using &lt;a href="http://www.activestate.com/komodo/"&gt;Komodo&lt;/a&gt; as my Ruby text editor. I love the tabbed editing, the project browser, and the reasonable Intellisense support. &lt;a href="http://blogs.activestate.com/ericp/"&gt;Eric Promislow&lt;/a&gt; has already fixed the string inline expression syntax highlighting bug, but we&amp;#8217;ll all have to wait for a packaged release to get this last feature that ruby-mode in emacs has over Komodo.&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://blog.segment7.net/"&gt;Eric Hodel&lt;/a&gt; pointed me to &lt;a href="http://rubyforge.org/projects/parsetree/"&gt;parsetree&lt;/a&gt;, which is a Ruby C extension that lets me serialize Ruby&amp;#8217;s &lt;span class="caps"&gt;AST&lt;/span&gt; (apparently with limitations). I&amp;#8217;ve been thinking about writing some code to improve how &lt;a href="http://www.rubygarden.org/ruby?Irb/TipsAndTricks"&gt;irb&lt;/a&gt; behaves, and serializing the &lt;span class="caps"&gt;AST&lt;/span&gt; might be a first step in that project.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;span class="caps"&gt;IE7&lt;/span&gt; finally renders my blog correctly! You can &lt;a href="http://www.microsoft.com/windows/ie/ie7/tour/default.mspx"&gt;get it here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve been pretty disappointed with Firefox 1.5 recently &amp;#8211; I just killed it when memory consumption hit 300MB an hour ago. I still need my Firefox extensions though, so I&amp;#8217;ll keep it around, but I suspect I&amp;#8217;ll be spending a bit more time in &lt;span class="caps"&gt;IE7&lt;/span&gt; for the next little while.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;ve been spending a lot of time using &lt;a href="http://www.activestate.com/komodo/"&gt;Komodo&lt;/a&gt; as my Ruby text editor. I love the tabbed editing, the project browser, and the reasonable Intellisense support. &lt;a href="http://blogs.activestate.com/ericp/"&gt;Eric Promislow&lt;/a&gt; has already fixed the string inline expression syntax highlighting bug, but we&amp;#8217;ll all have to wait for a packaged release to get this last feature that ruby-mode in emacs has over Komodo.&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://blog.segment7.net/"&gt;Eric Hodel&lt;/a&gt; pointed me to &lt;a href="http://rubyforge.org/projects/parsetree/"&gt;parsetree&lt;/a&gt;, which is a Ruby C extension that lets me serialize Ruby&amp;#8217;s &lt;span class="caps"&gt;AST&lt;/span&gt; (apparently with limitations). I&amp;#8217;ve been thinking about writing some code to improve how &lt;a href="http://www.rubygarden.org/ruby?Irb/TipsAndTricks"&gt;irb&lt;/a&gt; behaves, and serializing the &lt;span class="caps"&gt;AST&lt;/span&gt; might be a first step in that project.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>John Lam</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-03-25T03:15:42-08:00</published>
    <updated>2006-08-21T19:08:29-07:00</updated>
    <title type="html">Comment on A few quick observations by John Lam</title>
    <link href="http://www.iunknown.com/articles/2006/03/23/a-few-quick-observations#comment-411" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Don't worry, Justin. I'm just looking around for ideas to create another killer sample for Drop 4 :)&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-03-24T14:40:06-08:00</published>
    <updated>2006-08-21T19:08:28-07:00</updated>
    <title type="html">Comment on A few quick observations by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/03/23/a-few-quick-observations#comment-410" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;No! You must continue working on RubyCLR - don't get distracted now! Not while I still can't do meta programming on my Windows Forms classes :(&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Eric Hodel</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-03-24T02:10:55-08:00</published>
    <updated>2006-08-21T19:08:27-07:00</updated>
    <title type="html">Comment on A few quick observations by Eric Hodel</title>
    <link href="http://www.iunknown.com/articles/2006/03/23/a-few-quick-observations#comment-409" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;You can't get serialize any code that's not a method (but blocks/procs can be turned into methods).  Code at the class level is all gone by the time that ParseTree can be run.&lt;/p&gt;</content>
  </entry>
</feed>

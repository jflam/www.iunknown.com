<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <title>Less is better: Script# - Does it make sense?</title>
  <subtitle type="html">John Lam on software</subtitle>
  <id>tag:www.iunknown.com,2005:Typo</id>
  <generator uri="http://www.typosphere.org" version="4.0">Typo</generator>
  <link href="http://www.iunknown.com/xml/atom/article/150/feed.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.iunknown.com/articles/2006/05/24/script-does-it-make-sense" rel="alternate" type="text/html"/>
  <updated>2006-08-21T15:55:42-07:00</updated>
  <entry>
    <author>
      <name>John Lam</name>
      <email>jlam@iunknown.com</email>
    </author>
    <id>urn:uuid:ee2009411ac124057f830668d092cb52</id>
    <published>2006-05-24T13:47:00-07:00</published>
    <updated>2006-08-21T15:55:42-07:00</updated>
    <title type="html">Script# - Does it make sense?</title>
    <link href="http://www.iunknown.com/articles/2006/05/24/script-does-it-make-sense" rel="alternate" type="text/html"/>
    <category term="thoughts" scheme="http://www.iunknown.com/articles/category/thoughts" label="Thoughts"/>
    <summary type="html">&lt;p&gt;I just saw that &lt;a href="http://www.nikhilk.net/Entry.aspx?id=121"&gt;Nikhil Kothari&lt;/a&gt; has posted his work on creating a C# to JavaScript compiler. This is quite similar to the &lt;a href="http://code.google.com/webtoolkit/"&gt;Google Web Toolkit&lt;/a&gt; that &lt;a href="http://www.iunknown.com/articles/2006/05/17/google-web-toolkit"&gt;I posted about earlier&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;While I like some of the ideas about &lt;span class="caps"&gt;GWT&lt;/span&gt; and Script# &amp;#8211; avoiding the context switch away from your primary programming language, it feels like the wrong thing to do. Rails &lt;a href="http://api.rubyonrails.org/classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html"&gt;&lt;span class="caps"&gt;RJS&lt;/span&gt; Templates&lt;/a&gt; is a superior solution because it avoids trying to map Ruby 1:1 to JavaScript. Instead it maps to Rails&amp;#8217; domain specific language for describing client-side / server interactions.&lt;/p&gt;


	&lt;p&gt;I wonder if it will help novice JavaScript developers though, and whether that help will be worth it. It steers them away from JavaScript and back towards C#, but they&amp;#8217;re going to have to learn the semantics of the browser object model + add-on libraries in any event. Those semantics (not to mention most of the docs / samples they&amp;#8217;re likely to find via Google) are going to mesh far better with JavaScript than with C#).&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I just saw that &lt;a href="http://www.nikhilk.net/Entry.aspx?id=121"&gt;Nikhil Kothari&lt;/a&gt; has posted his work on creating a C# to JavaScript compiler. This is quite similar to the &lt;a href="http://code.google.com/webtoolkit/"&gt;Google Web Toolkit&lt;/a&gt; that &lt;a href="http://www.iunknown.com/articles/2006/05/17/google-web-toolkit"&gt;I posted about earlier&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;While I like some of the ideas about &lt;span class="caps"&gt;GWT&lt;/span&gt; and Script# &amp;#8211; avoiding the context switch away from your primary programming language, it feels like the wrong thing to do. Rails &lt;a href="http://api.rubyonrails.org/classes/ActionView/Helpers/PrototypeHelper/JavaScriptGenerator/GeneratorMethods.html"&gt;&lt;span class="caps"&gt;RJS&lt;/span&gt; Templates&lt;/a&gt; is a superior solution because it avoids trying to map Ruby 1:1 to JavaScript. Instead it maps to Rails&amp;#8217; domain specific language for describing client-side / server interactions.&lt;/p&gt;


	&lt;p&gt;I wonder if it will help novice JavaScript developers though, and whether that help will be worth it. It steers them away from JavaScript and back towards C#, but they&amp;#8217;re going to have to learn the semantics of the browser object model + add-on libraries in any event. Those semantics (not to mention most of the docs / samples they&amp;#8217;re likely to find via Google) are going to mesh far better with JavaScript than with C#).&lt;/p&gt;</content>
  </entry>
</feed>

<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <title>Less is better: reference_file bug in third drop of RubyCLR</title>
  <subtitle type="html">John Lam on software</subtitle>
  <id>tag:www.iunknown.com,2005:Typo</id>
  <generator uri="http://www.typosphere.org" version="4.0">Typo</generator>
  <link href="http://www.iunknown.com/xml/atom/article/101/feed.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.iunknown.com/articles/2006/03/29/reference_file-bug-in-third-drop-of-rubyclr" rel="alternate" type="text/html"/>
  <updated>2006-08-21T15:55:41-07:00</updated>
  <entry>
    <author>
      <name>John Lam</name>
      <email>jlam@iunknown.com</email>
    </author>
    <id>urn:uuid:093292c273213cccdc2379f38fe7f0b8</id>
    <published>2006-03-29T00:09:00-08:00</published>
    <updated>2006-08-21T15:55:41-07:00</updated>
    <title type="html">reference_file bug in third drop of RubyCLR</title>
    <link href="http://www.iunknown.com/articles/2006/03/29/reference_file-bug-in-third-drop-of-rubyclr" rel="alternate" type="text/html"/>
    <category term="thoughts" scheme="http://www.iunknown.com/articles/category/thoughts" label="Thoughts"/>
    <summary type="html">&lt;p&gt;I just found a bug in RubyCLR that could potentially break the way enumerations (and potentially generic types) are handled. If you call &lt;code&gt;RubyClr::reference_file&lt;/code&gt; more than once for the same assembly, I&amp;#8217;ll parse the assembly more than once (this is the bug).&lt;/p&gt;


	&lt;p&gt;Here&amp;#8217;s a patch that will fix this bug. You&amp;#8217;ll need to replace the method body for &lt;code&gt;reference_file&lt;/code&gt; in &lt;code&gt;core.rb&lt;/code&gt;.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def self.reference_file(assembly_path)
  @@assembly_filenames ||= []
  if @@assembly_filenames.include?(assembly_path)
    false
  else
    generate_modules(internal_reference_file(assembly_path))
    @@assembly_filenames &amp;lt;&amp;lt; assembly_path
    true
  end
end
&lt;/code&gt;&lt;/pre&gt;

	&lt;p&gt;Yes, I&amp;#8217;m working on getting the source loaded into rubyforge, but I need to carve out some time to make that happen.&lt;/p&gt;


	&lt;p&gt;Please let me know if you have any problems with the bridge. jlam at this domain or via the comments.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I just found a bug in RubyCLR that could potentially break the way enumerations (and potentially generic types) are handled. If you call &lt;code&gt;RubyClr::reference_file&lt;/code&gt; more than once for the same assembly, I&amp;#8217;ll parse the assembly more than once (this is the bug).&lt;/p&gt;


	&lt;p&gt;Here&amp;#8217;s a patch that will fix this bug. You&amp;#8217;ll need to replace the method body for &lt;code&gt;reference_file&lt;/code&gt; in &lt;code&gt;core.rb&lt;/code&gt;.&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;
def self.reference_file(assembly_path)
  @@assembly_filenames ||= []
  if @@assembly_filenames.include?(assembly_path)
    false
  else
    generate_modules(internal_reference_file(assembly_path))
    @@assembly_filenames &amp;lt;&amp;lt; assembly_path
    true
  end
end
&lt;/code&gt;&lt;/pre&gt;

	&lt;p&gt;Yes, I&amp;#8217;m working on getting the source loaded into rubyforge, but I need to carve out some time to make that happen.&lt;/p&gt;


	&lt;p&gt;Please let me know if you have any problems with the bridge. jlam at this domain or via the comments.&lt;/p&gt;</content>
  </entry>
</feed>

<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <title>Less is better: Second Drop of RubyCLR</title>
  <subtitle type="html">John Lam on software</subtitle>
  <id>tag:www.iunknown.com,2005:Typo</id>
  <generator uri="http://www.typosphere.org" version="4.0">Typo</generator>
  <link href="http://www.iunknown.com/xml/atom/article/74/feed.xml" rel="self" type="application/atom+xml"/>
  <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr" rel="alternate" type="text/html"/>
  <updated>2006-08-21T15:55:41-07:00</updated>
  <entry>
    <author>
      <name>John Lam</name>
      <email>jlam@iunknown.com</email>
    </author>
    <id>urn:uuid:4d12ef399db6da8cdbb4133091c5d4a0</id>
    <published>2006-02-20T17:19:00-08:00</published>
    <updated>2006-08-21T15:55:41-07:00</updated>
    <title type="html">Second Drop of RubyCLR</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr" rel="alternate" type="text/html"/>
    <category term="thoughts" scheme="http://www.iunknown.com/articles/category/thoughts" label="Thoughts"/>
    <summary type="html">&lt;p&gt;It&amp;#8217;s alive and it&amp;#8217;s real:&lt;/p&gt;


	&lt;p&gt;&lt;img src="http://static.flickr.com/43/102353551_a14d82507d_o.png" alt="" /&gt;&lt;/p&gt;


	&lt;p&gt;This second release of my RubyCLR bridge contains a non-trivial Windows Forms 2.0 application written &lt;strong&gt;entirely in Ruby&lt;/strong&gt;. If you don&amp;#8217;t want to download the entire drop, you can &lt;a href="http://www.iunknown.com/images/rssreader.rb"&gt;click here&lt;/a&gt; to look at the source.&lt;/p&gt;


	&lt;p&gt;If you thought you&amp;#8217;ve seen this application before, you&amp;#8217;re right &amp;#8211; it&amp;#8217;s a partial port of Joe Stegman&amp;#8217;s &lt;a href="http://www.windowsforms.net/Default.aspx?tabindex=4&amp;#38;tabid=49"&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt; Reader application&lt;/a&gt; that was designed to show off some of the more interesting features of Windows Forms 2.0.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;m pretty sure I could have finished porting the rest of the app, but I think I ported enough of it to demonstrate that you can actually use this drop to build a real app.&lt;/p&gt;


	&lt;p&gt;There are now 106 tests and 165 assertions in the unit test suite. They all pass.&lt;/p&gt;


	&lt;p&gt;This build now contains release builds of &lt;code&gt;RbDynamicMethod.dll&lt;/code&gt; and &lt;code&gt;RubyClrTests.dll&lt;/code&gt;, so it should run on any computer that has Ruby 1.8.2 and .NET Frameworks 2.0 &lt;span class="caps"&gt;RTM&lt;/span&gt; installed.&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://www.iunknown.com/images/RbDynamicMethod.zip"&gt;Get the bits here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;Enjoy.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;It&amp;#8217;s alive and it&amp;#8217;s real:&lt;/p&gt;


	&lt;p&gt;&lt;img src="http://static.flickr.com/43/102353551_a14d82507d_o.png" alt="" /&gt;&lt;/p&gt;


	&lt;p&gt;This second release of my RubyCLR bridge contains a non-trivial Windows Forms 2.0 application written &lt;strong&gt;entirely in Ruby&lt;/strong&gt;. If you don&amp;#8217;t want to download the entire drop, you can &lt;a href="http://www.iunknown.com/images/rssreader.rb"&gt;click here&lt;/a&gt; to look at the source.&lt;/p&gt;


	&lt;p&gt;If you thought you&amp;#8217;ve seen this application before, you&amp;#8217;re right &amp;#8211; it&amp;#8217;s a partial port of Joe Stegman&amp;#8217;s &lt;a href="http://www.windowsforms.net/Default.aspx?tabindex=4&amp;#38;tabid=49"&gt;&lt;span class="caps"&gt;RSS&lt;/span&gt; Reader application&lt;/a&gt; that was designed to show off some of the more interesting features of Windows Forms 2.0.&lt;/p&gt;


	&lt;p&gt;I&amp;#8217;m pretty sure I could have finished porting the rest of the app, but I think I ported enough of it to demonstrate that you can actually use this drop to build a real app.&lt;/p&gt;


	&lt;p&gt;There are now 106 tests and 165 assertions in the unit test suite. They all pass.&lt;/p&gt;


	&lt;p&gt;This build now contains release builds of &lt;code&gt;RbDynamicMethod.dll&lt;/code&gt; and &lt;code&gt;RubyClrTests.dll&lt;/code&gt;, so it should run on any computer that has Ruby 1.8.2 and .NET Frameworks 2.0 &lt;span class="caps"&gt;RTM&lt;/span&gt; installed.&lt;/p&gt;


	&lt;p&gt;&lt;a href="http://www.iunknown.com/images/RbDynamicMethod.zip"&gt;Get the bits here&lt;/a&gt;.&lt;/p&gt;


	&lt;p&gt;Enjoy.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>csikung (chi kung, qigong)</name>
    </author>
    <id>urn:uuid:191dbd4c-c07d-49c4-9df9-795dcdb9f4ba</id>
    <published>2006-11-20T15:05:03-08:00</published>
    <updated>2006-12-06T03:39:10-08:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by csikung (chi kung, qigong)</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-1260" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Thanks, its realy awsome!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Michael Leung</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-07-06T09:17:04-07:00</published>
    <updated>2006-08-21T19:05:19-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Michael Leung</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-566" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Very cool. :)&lt;/p&gt;

&lt;p&gt;One other thing, and this may be in a blog post you wrote or in the sample code (haven't had a chance to look at it thorougly enough yet):&lt;/p&gt;

&lt;p&gt;How do you handle interfaces, since Ruby doesn't support them?&lt;/p&gt;

&lt;p&gt;We're creating an extensibility (add-in) architecture, and it would be really killer to write add-ins for our application in Ruby using Ruby CLR, but my only concern is the add-in will need to implement the specific memembers of a .NET interface.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>John Lam</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-07-06T00:35:39-07:00</published>
    <updated>2006-08-21T19:05:18-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by John Lam</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-565" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;I don't have any explicit scenarios where I "hoist" the Ruby runtime into an existing .NET app. All of my supported scenarios involve delay-loading the CLR into an existing Ruby Win32 process.&lt;/p&gt;

&lt;p&gt;This will be something to look at down the road, however, since embedding Ruby as a scripting language for an existing .NET application is another scenario that I'd like to address.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Michael Leung</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-07-05T19:19:44-07:00</published>
    <updated>2006-08-21T19:05:15-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Michael Leung</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-563" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;That's awesome John! &lt;/p&gt;

&lt;p&gt;Ruby CLR is looking really sweet!&lt;/p&gt;

&lt;p&gt;Do you have any examples of using the bridge the other way in .NET to access Ruby? I'm thinking about implementing the bridge in my project. &lt;/p&gt;

&lt;p&gt;Thanks. :)&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Eirik</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-03-15T04:58:53-08:00</published>
    <updated>2006-08-21T19:08:26-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Eirik</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-397" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Great stuff! I've been waiting for Ruby on the CLR - but now that I have seen this I realize this is what I really wanted ;). &lt;/p&gt;

&lt;p&gt;Are you going to set up a project on rubyforge? &lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Jeem</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-03-03T14:04:50-08:00</published>
    <updated>2006-08-21T20:57:30-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Jeem</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-384" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;This f'n rocks.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>piggy</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-26T01:09:09-08:00</published>
    <updated>2006-08-21T20:57:26-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by piggy</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-370" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Awesome! Not only the beautiful GUI, it also means I can optimize hungry-for-speed part of my ruby code into various .Net languages (such as Boo). Great work! Thanks.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T19:01:23-08:00</published>
    <updated>2006-08-21T20:57:32-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-354" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Ouch, RedCloths bizarre formatting strikes again. I'll just email you ;)&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T19:00:35-08:00</published>
    <updated>2006-08-21T20:57:31-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-353" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;I also found some crashing bugs. Here are the unit tests. Note that when these run they crash the interpreter. &lt;/p&gt;

&lt;p&gt;require 'test/unit'
require 'rubyclr'&lt;/p&gt;

&lt;p&gt;RubyClr::reference 'System'
RubyClr::reference 'System.Windows.Forms'&lt;/p&gt;

&lt;p&gt;include System::Windows::Forms&lt;/p&gt;

If any of these tests are run, the ruby interpreter crashes!

&lt;p&gt;class CrashyTests &amp;lt; Test::Unit::TestCase&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_send
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;lt;&amp;lt; form
  def init
    self.send(:Text=, "test_form_meta_send")
  end
end

form.init
assert(form.Text == "test_form_meta_send")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_init
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;lt;&amp;lt; form
  def init
    self.Text = "test_form_meta_min"
  end
end

form.init
assert(form.Text == "")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;meta_min
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class &amp;lt;&amp;lt; form
end

form.Text = "test_form_meta_min"
assert(form.Text == "test_form_meta_min")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;def test&lt;em&gt;form&lt;/em&gt;per_class
    form = Form.new&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def form.init
  self.Text = "test_form_per_class"
end

form.init
assert(form.Text == "test_form_per_class")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end&lt;/p&gt;

&lt;p&gt;end&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T18:58:47-08:00</published>
    <updated>2006-08-21T20:57:30-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-352" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;John,&lt;/p&gt;

&lt;p&gt;OK, I played around this some more and I have some deeper questions. How do I override the initialize method for all controls? I'd like to do something like this:&lt;/p&gt;

&lt;p&gt;Control.class_eval do
 def initialize
   super
   MessageBox.Show("Overriding initialize")
 end
end&lt;/p&gt;

&lt;p&gt;and have that MessageBox show up each time I create a control:&lt;/p&gt;

&lt;p&gt;Button.new
TextBox.new&lt;/p&gt;

&lt;p&gt;However, it doesn't work that way. If I override each control class individually , it does. &lt;/p&gt;

&lt;p&gt;Any suggestions?&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>John Lam</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T18:53:23-08:00</published>
    <updated>2006-08-21T20:57:29-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by John Lam</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-351" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Oh yeah, I forgot to disable that. You'll see from looking at the source that the event handler binds to a non-existant grid object (it was there earlier, but I forget to delete the code from that event handler).&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Scott Hanselman</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T18:22:50-08:00</published>
    <updated>2006-08-21T20:57:28-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Scott Hanselman</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-350" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Great stuff! Question...when I click "Go":&lt;/p&gt;

&lt;p&gt;C:\hold&gt;ruby rssreader.rb
./ruby&lt;em&gt;dynamic&lt;/em&gt;method.rb:138:in &lt;code&gt;method_missing': undefined local variable or me
thod&lt;/code&gt;grid' for # (NameError)
        from rssreader.rb:406:in &lt;code&gt;initialize'
        from rssreader.rb:404:in&lt;/code&gt;call'
        from ./rubyclr.rb:275:in &lt;code&gt;Run'
        from ./rubyclr.rb:275:in&lt;/code&gt;send'
        from ./rubyclr.rb:275:in &lt;code&gt;method_missing'
        from ./winforms.rb:23:in&lt;/code&gt;Run'
        from rssreader.rb:434&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>John Lam</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T16:51:33-08:00</published>
    <updated>2006-08-21T20:57:27-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by John Lam</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-349" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Thanks for the feedback, Justin!&lt;/p&gt;

&lt;p&gt;I'm planning on providing a switch somewhere where I would automatically map ruby-casing to CamelCasing. So:&lt;/p&gt;

&lt;p&gt;form.back_color would map to form.BackColor&lt;/p&gt;

&lt;p&gt;This is more in line with how some of the Rails ActiveRecord stuff works. I have to think more about that though ...&lt;/p&gt;

&lt;p&gt;The delegate problem you're having is a bit disconcerting though. If you could come up with a repro, that would rock. I recently added some code to deal with holding references onto Ruby blocks to prevent them from being GC'd - this might be causing your problem, though I'm not sure.&lt;/p&gt;

&lt;p&gt;The enumeration suggestion sounds cool, but I'm not sure how to implement it. It might be possible by fiddling with scope resolution but I'd have to check with folks who know a lot more about Ruby than I do :)&lt;/p&gt;

&lt;p&gt;Keep the comments coming!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T16:44:10-08:00</published>
    <updated>2006-08-21T20:57:26-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-348" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Got a chance to play with this. Fantastic. I'll post my program in the Google News Group. A little feedback here tho:&lt;/p&gt;

&lt;p&gt;1) Would be nice if it was a little more forgiving on casing. I know Ruby isn't, either, but it would be cool if form.Controls.add worked (instead of Add)&lt;/p&gt;

&lt;p&gt;2) Delegates seem flakey but I don't have a better error report. Just seemed like sometimes my button wouldn't respond to clicks. Is there a delay in hoooking those up somewhere or is it all single-threaded?&lt;/p&gt;

&lt;p&gt;3) Automatic determinination of enumeration being used. E.g.:&lt;/p&gt;

&lt;p&gt;textBox.AnchorStyles = Left | Right | Top&lt;/p&gt;

&lt;p&gt;instead of &lt;/p&gt;

&lt;p&gt;textBox.AnchorStyle = AnchorStyles::Left | AnchorStyles::Right | AnchorStyles::Top&lt;/p&gt;

&lt;p&gt;Again, really fantastic stuff!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Justin</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T12:00:28-08:00</published>
    <updated>2006-08-21T20:57:24-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Justin</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-347" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Wow, really, really impressive. I hope to be able to play with this over the next couple of weeks. Thanks for all your hard work - this is great stuff!&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>John Lam</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T09:06:56-08:00</published>
    <updated>2006-08-21T20:57:00-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by John Lam</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-346" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Yes - that's absolutely a goal for this project. A secondary goal for myself (or hopefully someone I can recruit to this project) is to implement the CodeDOM support required to serialize designer output to Ruby. This would let folks use the VS 2005 designers to generate all of the 'goo' that I had to write by hand in that sample.&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Thibaut Barr??re</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-21T04:15:01-08:00</published>
    <updated>2006-08-21T20:56:59-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Thibaut Barr??re</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-345" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Hi!&lt;/p&gt;

&lt;p&gt;This all looks very, very promising!&lt;/p&gt;

&lt;p&gt;I'd love to be able to write an application UI in .Net (comfortable use of the designer in VS.Net), while writing the core application in Ruby (so terse, so nice to write, so easy to create DSLs!).&lt;/p&gt;

&lt;p&gt;Do you think this will be doable ?&lt;/p&gt;</content>
  </entry>
  <entry>
    <author>
      <name>Michael Trier</name>
    </author>
    <id>urn:uuid:</id>
    <published>2006-02-20T21:02:30-08:00</published>
    <updated>2006-08-21T20:56:58-07:00</updated>
    <title type="html">Comment on Second Drop of RubyCLR by Michael Trier</title>
    <link href="http://www.iunknown.com/articles/2006/02/20/second-drop-of-rubyclr#comment-344" rel="alternate" type="text/html"/>
    <content type="html">&lt;p&gt;Wow! Impressive John, very impressive.  I look forward to playing with all the bits.&lt;/p&gt;</content>
  </entry>
</feed>

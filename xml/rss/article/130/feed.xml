<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="/stylesheets/rss.css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Less is better: Do you have a spare 20 minutes to become a better programmer?</title>
    <link>http://www.iunknown.com/articles/2006/05/09/do-you-have-a-spare-20-minutes-to-become-a-better-programmer</link>
    <language>en-us</language>
    <ttl>40</ttl>
    <description>John Lam on software</description>
    <item>
      <title>Do you have a spare 20 minutes to become a better programmer?</title>
      <description>&lt;p&gt;If you, then you should head on over and &lt;a href="http://defmacro.org/ramblings/lisp.html"&gt;read this article on how to become a better programmer.&lt;/a&gt;&lt;/p&gt;


	&lt;p&gt;Seriously. This is by far the most approachable article that I&amp;#8217;ve read to motivate &lt;strong&gt;why&lt;/strong&gt; Lisp is still the gold standard of language design. It does so in a very non-threatening way by way of &lt;span class="caps"&gt;XML&lt;/span&gt; and &lt;a href="http://ant.apache.org/"&gt;Ant&lt;/a&gt;, as well as the C preprocessor and &lt;a href="http://www.codegeneration.net"&gt;code generation&lt;/a&gt;. He even mentions data access layers, C# and &lt;span class="caps"&gt;LINQ&lt;/span&gt; to prove that he&amp;#8217;s not living in a shack in the wilds of Montana.&lt;/p&gt;


	&lt;p&gt;Perhaps the most insightful part of this article is the realization of &lt;em&gt;why&lt;/em&gt; XML enabled Ant to become so popular. &lt;span class="caps"&gt;XML&lt;/span&gt; is enormously flexible (at the cost of being enormously verbose), and it permitted the injection of new &lt;em&gt;semantics&lt;/em&gt; into the build language, that would not be as approachable using Java alone.&lt;/p&gt;


	&lt;p&gt;Once you&amp;#8217;ve read (and understood) this article, you&amp;#8217;ll be well on your way to understanding why metaprogramming and domain specific languages are so powerful. This will make you a far better programmer even if you use a relatively pedestrian language like Ruby :)&lt;/p&gt;


	&lt;p&gt;If you want to read more about Lisp, you can begin by &lt;a href="http://www.gigamonkeys.com/book/"&gt;reading this wonderful online book.&lt;/a&gt;&lt;/p&gt;</description>
      <pubDate>Tue, 09 May 2006 23:54:00 -0700</pubDate>
      <guid isPermaLink="false">urn:uuid:751330450ae0da34b129e15d4a8c7192</guid>
      <author>jlam@iunknown.com (John Lam)</author>
      <link>http://www.iunknown.com/articles/2006/05/09/do-you-have-a-spare-20-minutes-to-become-a-better-programmer</link>
      <category>Props</category>
    </item>
    <item>
      <title>"Do you have a spare 20 minutes to become a better programmer?" by Thibaut Barrere</title>
      <description>&lt;p&gt;Thanks for those links - the article is really good, I'm definitely going to look into the online book.&lt;/p&gt;

&lt;p&gt;cheers and keep up with the good work on RubyCLR.&lt;/p&gt;</description>
      <pubDate>Fri, 12 May 2006 03:31:17 -0700</pubDate>
      <guid isPermaLink="false">urn:uuid:</guid>
      <link>http://www.iunknown.com/articles/2006/05/09/do-you-have-a-spare-20-minutes-to-become-a-better-programmer#comment-470</link>
    </item>
    <item>
      <title>"Do you have a spare 20 minutes to become a better programmer?" by Thibaut Barrere</title>
      <description>&lt;p&gt;Thanks for those links - the article is really good, I'm definitely going to look into the online book.&lt;/p&gt;

&lt;p&gt;cheers and keep up with the good work on RubyCLR.&lt;/p&gt;</description>
      <pubDate>Fri, 12 May 2006 03:30:25 -0700</pubDate>
      <guid isPermaLink="false">urn:uuid:</guid>
      <link>http://www.iunknown.com/articles/2006/05/09/do-you-have-a-spare-20-minutes-to-become-a-better-programmer#comment-469</link>
    </item>
  </channel>
</rss>

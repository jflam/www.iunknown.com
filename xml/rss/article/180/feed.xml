<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="/stylesheets/rss.css"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Less is better: The Power of the Marginal</title>
    <link>http://www.iunknown.com/articles/2006/06/28/the-power-of-the-marginal</link>
    <language>en-us</language>
    <ttl>40</ttl>
    <description>John Lam on software</description>
    <item>
      <title>The Power of the Marginal</title>
      <description>&lt;p&gt;Paul Graham&amp;#8217;s latest essay, &lt;a href="http://www.paulgraham.com/marginal.html"&gt;The Power of the Marginal&lt;/a&gt; contains some great insights, as I have come to expect from his writing. Here&amp;#8217;s one quote in particular that I really love, when he talks about how to find good problems to solve:&lt;/p&gt;


	&lt;blockquote&gt;
		&lt;p&gt;One especially good groove to span is the one between tools and things made with them. For example, programming languages and applications are usually written by different people, and this is responsible for a lot of the worst flaws in programming languages. I think every language should be designed simultaneously with a large application written in it, the way C was with Unix.&lt;/p&gt;
	&lt;/blockquote&gt;


	&lt;p&gt;If you substitute &lt;strong&gt;&lt;a href="http://www.rubyonrails.com"&gt;framework&lt;/a&gt;&lt;/strong&gt; for programming language you&amp;#8217;ll arrive at the same conclusion.&lt;/p&gt;</description>
      <pubDate>Wed, 28 Jun 2006 23:00:00 -0700</pubDate>
      <guid isPermaLink="false">urn:uuid:294f07c4a9744e2baafc03bf5dff3859</guid>
      <author>jlam@iunknown.com (John Lam)</author>
      <link>http://www.iunknown.com/articles/2006/06/28/the-power-of-the-marginal</link>
      <category>Props</category>
    </item>
  </channel>
</rss>

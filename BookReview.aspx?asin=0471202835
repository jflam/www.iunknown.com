
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Agile Database Techniques : Effective Strategies for the Agile Software Developer (Wiley Application Development S.)
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0471202835" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wNDcxMjAyODM1LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEFnaWxlIERhdGFiYXNlIFRlY2huaXF1ZXMgOiBFZmZlY3RpdmUgU3RyYXRlZ2llcyBmb3IgdGhlIEFnaWxlIFNvZnR3YXJlIERldmVsb3BlciAoV2lsZXkgQXBwbGljYXRpb24gRGV2ZWxvcG1lbnQgUy4pOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxTY290dCAgQW1ibGVyOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDAuMDA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQyNi40MDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NC41Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDw1Oz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzA0NzEyMDI4MzUvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDw7bDxpPDA+O2k8MT47PjtsPHQ8QDxCb29rIERlc2NyaXB0aW9uOz47Oz47dDxwPHA8bDxUZXh0Oz47bDwqIERlc2NyaWJlcyBBZ2lsZSBNb2RlbGluZyBEcml2ZW4gRGVzaWduIChBTUREKSBhbmQgVGVzdC1Ecml2ZW4gRGVzaWduIChUREQpIGFwcHJvYWNoZXMsIGRhdGFiYXNlIHJlZmFjdG9yaW5nLCBkYXRhYmFzZSBlbmNhcHN1bGF0aW9uIHN0cmF0ZWdpZXMsIGFuZCB0b29scyB0aGF0IHN1cHBvcnQgZXZvbHV0aW9uYXJ5IHRlY2huaXF1ZXNcPGJyXD4gICAqIEFnaWxlIHNvZnR3YXJlIGRldmVsb3BlcnMgb2Z0ZW4gdXNlIG9iamVjdCBhbmQgcmVsYXRpb25hbCBkYXRhYmFzZSAoUkRCKSB0ZWNobm9sb2d5IHRvZ2V0aGVyIGFuZCBhcyBhIHJlc3VsdCBtdXN0IG92ZXJjb21lIHRoZSBpbXBlZGFuY2UgbWlzbWF0Y2hcPGJyXD4gICAqIFRoZSBhdXRob3IgY292ZXJzIHRlY2huaXF1ZXMgZm9yIG1hcHBpbmcgb2JqZWN0cyB0byBSREJzIGFuZCBmb3IgaW1wbGVtZW50aW5nIGNvbmN1cnJlbmN5IGNvbnRyb2wsIHJlZmVyZW50aWFsIGludGVncml0eSwgc2hhcmVkIGJ1c2luZXNzIGxvZ2ljLCBzZWN1cml0eSBhY2Nlc3MgY29udHJvbCwgcmVwb3J0cywgYW5kIFhNTFw8YnJcPiAgICogQW4gYWdpbGUgZm91bmRhdGlvbiBkZXNjcmliZXMgZnVuZGFtZW50YWwgc2tpbGxzIHRoYXQgYWxsIGFnaWxlIHNvZnR3YXJlIGRldmVsb3BlcnMgcmVxdWlyZSwgcGFydGljdWxhcmx5IEFnaWxlIERCQXNcPGJyXD4gICAqIEluY2x1ZGVzIG9iamVjdCBtb2RlbGluZywgVU1MIGRhdGEgbW9kZWxpbmcsIGRhdGEgbm9ybWFsaXphdGlvbiwgY2xhc3Mgbm9ybWFsaXphdGlvbiwgYW5kIGhvdyB0byBkZWFsIHdpdGggbGVnYWN5IGRhdGFiYXNlc1w8YnJcPiAgICogU2NvdHQgVy4gQW1ibGVyIGlzIGF1dGhvciBvZiBBZ2lsZSBNb2RlbGluZyAoMDQ3MTIwMjgyNyksIGEgY29udHJpYnV0aW5nIGVkaXRvciB3aXRoIFNvZnR3YXJlIERldmVsb3BtZW50ICh3d3cuc2RtYWdhemluZS5jb20pLCBhbmQgYSBmZWF0dXJlZCBzcGVha2VyIGF0IHNvZnR3YXJlIGNvbmZlcmVuY2VzIHdvcmxkd2lkZTs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz6P7imB8Gv7yeXVPk7GXC/EkQrsVg==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0471202835.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Agile Database Techniques : Effective Strategies for the Agile Software Developer (Wiley Application Development S.)</span>
        <div class="ItemDetail">By
          <span id="Authors">Scott  Ambler</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$40.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$26.40</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">5</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0471202835/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">* Describes Agile Modeling Driven Design (AMDD) and Test-Driven Design (TDD) approaches, database refactoring, database encapsulation strategies, and tools that support evolutionary techniques<br>   * Agile software developers often use object and relational database (RDB) technology together and as a result must overcome the impedance mismatch<br>   * The author covers techniques for mapping objects to RDBs and for implementing concurrency control, referential integrity, shared business logic, security access control, reports, and XML<br>   * An agile foundation describes fundamental skills that all agile software developers require, particularly Agile DBAs<br>   * Includes object modeling, UML data modeling, data normalization, class normalization, and how to deal with legacy databases<br>   * Scott W. Ambler is author of Agile Modeling (0471202827), a contributing editor with Software Development (www.sdmagazine.com), and a featured speaker at software conferences worldwide</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Reconciles Relational and OO DB</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-08</span>
                    </div>
                    <span>I fully agree with the other reviewers who have given detailed and glowing descriptions of this book and why it is an important work that addresses the real challenges of developing to a relational model in OO environments. Agile techniques are also interwoven into this book,  but it is in overcoming the relational-OO challenges that I found this book to be most valuable.<p>The first part of the book, "Foundational Skills and Knowledge", covers the challenges and how to meet them with eight excellent chapters that truly give the foundational knowledge. The next part, "Evolutionary Database Development", is comprised of seven chapters that introduce Agile techniques as they relate to DB development. Among the two strongest chapters in this part of the book are the ones covering DB refactoring and mapping objects to relational databases. This material, to me, clarified a lot of issues I had before reading this book. Part 3 is more focused on development techniques, with excellent information about concurrency control, access controls and related topics.  The final part of the book is specific to general Agile implementation.  You need not embrace Agile methods to learn an enormous amount from this book.<p>If you want to know more about this book's contents you will find a great deal of information on the author's Agile Data web site (paste the ASIN, B0000A3527, into the search box at the top of this page, select All Products and click GO).  I also recommend Clifton Nock's "Data Access Patterns: Database Interactions in Object-Oriented Applications" (ISBN 0131401572), which augments this book in many respects.</span>
                  
                    <div class="CustomerReviewSummary">Plenty of dog-eared pages...</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>8</span>
                      /
                      <span>9</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-02-03</span>
                    </div>
                    <span>"Agile Database Techniques" is aptly subtitled "Effective Strategies for the Agile Software Developer".  Take special note of the word "strategies", because what you will not find within is pages of code and implementation details.  This is not a bad thing as there is so much ground to cover that getting caught up in the low-level details of how to implement a particular strategy in language (add yours here) would have limited the scope of the book.  Instead, what you will find is a detailed set of skills and development methodologies required by the developer who finds him or herself immersed in the details of modeling, implementing, and/or refactoring the database schema for their current application.<p>Should you buy this book? Well, try answering the following questions:<p>- Could you easily create a physical data model of your schema?<br>- Can you explain the difference between first and third normal form?<br>- What about first and third object normalization forms?<br>- Can you list the challenges in mapping an object model to a data model?<p>Did you answer honestly?  Because these are just some of the items covered in Part One of the book and unless you said yes to all of the above, you will walk away with plenty of ideas for improving your development after a single reading.  This is the core reason I would recommend this book.  It is full of ideas that you might never have thought to include in your development practices, and probably some that you had thought about but were not sure what the best approach might be.<p>My complaint with "Agile Database Techniques" is that it could use another iteration. In the introduction, the author states "When I first started writing this book, I intended its focus to be on the agile data method... Because I was taking an iterative and incremental approach to the development of the book, I quickly realized that the real value lay in detailed development techniques instead of yet another methodology."  While I can agree with and embrace the merits of applying agility to my development practices, I think there is an overabundance of methodology content in the book that only clouds its real value. <p>In summary, I think this is one of those books that will sit on my shelf for some time to come as a great reference for how to approach any number of application and database development related items.</span>
                  
                    <div class="CustomerReviewSummary">Good material, but too fragmented for my taste</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>8</span>
                      /
                      <span>8</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-01-23</span>
                    </div>
                    <span>Agile Database Techniques is a brilliant book. Already after reading the first chapter I felt like I had been run over by a truck, wondering why I haven't paid more attention to these issues before. Yet, it also has its flaws which I will go into further down.<p>Ambler starts laying out the groundwork for the second part of the book by introducing his Agile Data method, UML and data modeling. He also gives a very useful jump-start tutorial on data and class normalization and discusses the infamous object-relational impedance mismatch. Worth noting is that in each chapter (throughout the book) Ambler makes sure that the reader understands how the subjects relate to the role of an agile DBA and what should he be looking out for. The subjects in part one were introduced so well that I more than once thought, "I've never seen such a well-balanced and informative tutorial."<p>The second part of the book focuses a bit on how evolutionary software development is the reality and how techniques such as Agile Model-Driven Development and TDD can assist in surviving in this climate. The chapter on database refactoring is intriguing and the more comprehensive list of database refactorings, found in the appendices, is something I'll definitely Xerox and keep with me in my traveling tool bag. The second part also covers database encapsulation strategies and approaches to mapping objects to relational databases which, again, is a delightfully comprehensive tutorial, as well as touching on the topic of performance tuning.<p>The third part is a seemingly random collection of subjects such as finding objects in a relational database, referential integrity, concurrency, security, reports and XML with databases. The text is again of high quality and provides an entertaining walk through the woods, but I feel that these chapters had very little to contribute to the subject of the book. This disconnect is made even more clear when Ambler finishes with a 10-page guide on how to become agile and to introduce agility into the organization.<p>After reading the book, I feel confused. On the other hand, this book is full of little islands of useful insights that I wouldn't think twice recommending for others to read. On the other, the book as a whole is very fragmented and pretty far from what the book's title might suggest. If you pick up the book with an open mind like I did, you'll gain plenty. Otherwise, you'll probably be disappointed to find out that one half of the book probably talks about something you weren't expecting based on the title. After a long struggle, I'm giving this book "only" fours stars despite that it contains some very, very high quality material.</span>
                  
                    <div class="CustomerReviewSummary">A book for all seasons--and programmers and DBAs</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>8</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-17</span>
                    </div>
                    <span>Scott Ambler is uniquely qualified to write this book. He started his software life as a data modeler, and is now an industry thought-leader in agile, object-oriented software development practices. He wrote Agile Database Techniques to address a single issue that he is obviously passionate about: is it possible for data professionals to develop their data in an evolutionary way? Ambler answers this question with a resounding "yes"! And his book is a manifesto on how the data and object communities can lay down their weapons and join forces to create better software.<p>Part One addresses the basics of agile development, database concepts and data normalization, object concepts and object normalization ¯- which may be a new concept to some readers. If you are not a data person, you will get a good introduction to the data world-view. If you are not an object person, you will gain insight into why object people see the world from a behavioral view, not the data-centric view. What I found appealing was Ambler's willingness to leave out all the fluff and deliver just enough detail to equip us to move to the next part of his presentation: Evolutionary Database Development.<p>This second part of the book covers *a lot* of ground. After a well-crafted appeal for flexibility as a major success factor in software development, Ambler introduces the principles and practices of his own "Agile Model-Driven Development" approach, then a concise discussion of Test-Driven Development, also known as "test-first programming". This is a very brief chapter, and I wish Ambler had developed these concepts a bit more, but he has much bigger fish to fry in this book. His discussion of the need for, and practices of, database refactoring will be provocative for many data people. In my own consulting experience the "rot" or "smell" of database entropy is everywhere. The rigor of the original data models is lost under the pressure of schedule, or the inertia of inexperienced persons not taking the time to think about the downstream effects of reusing a table column for an obscure and transient purpose...which soon becomes permanent. The most significant chapter in the second part discusses mapping objects to relational databases. Ambler has written often and extensively about the object-relational "impedance mismatch", and this chapter offers the programmer and DBA much to think about.<p>A theme that runs throughout the entire book is what Ambler calls the "role of the agile DBA". These brief discussions, almost sidebars in their presentation, are aimed squarely at DBAs working on agile, OO projects. Most OO developers will kill for a DBA who actually supports the software effort rather than being an institutionalized impediment. Ambler's tips to the "agile DBA" are worth the price of the book, IMHO. <p>Part 3 is a collage of database concepts that are essential for software developers to understand if they are to be successful as a programming and data team. The topics include referential integrity, access control, concurrency issues and control, transactions and their ACID properties, with a brief discussion of both database transactions and object transactions -- and they are not the same. Very important stuff, and it is my experience that many application programmers have only the barest understanding of these critical technical issues--especially data-specific issues such as two-phase commits. It's all here.<p>The last part of the book reflects the beginning: how can you become agile, and how can you bring agility into your organization? Ahh, this is going to be hard for some people, and some companies. But it can be done, if approached patiently, with sensitivity for your existing corporate culture. And the reality of the cultural mismatch is something Ambler addresses throughout this book. This is why he calls the agile DBA a "peacemaker". This is why he calls upon us to be "generalizing specialists", so we can see that there is more to software than objects, and certainly more than data alone.</span>
                  
                    <div class="CustomerReviewSummary">If this was a novel they'd be bidding for the movie rights</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>8</span>
                      /
                      <span>10</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-10-22</span>
                    </div>
                    <span>This is the best book I've bought in years.  It starts with an overview of agile software development, something that every single IT professional needs to understand these days.  It also overviews basic skills such as data modeling, object modeling, and normalization.  Ambler is absolutely dead on with this material: everyone needs to understand the basics of both object development and database development if they're going to get the job done.  I'm really surprised how few object and data books actually deal with these basics, they always seem to focus on only one part of the overall picture.  Why hasn't someone written just this section before?????<p>More importantly the book has chapters on agile model driven development and test driven development, two topics that are critical to your success as an agile programmer.  Anyone doing XP needs to be up to speed on both these techniques. in particular TDD but just as importantly AMDD.<p>A really cool chapter talks about database refactoring, which is basically refactoring for relational databases.  Anyone who wants to be an effective DBA needs to learn this stuff.  There's also an appendix with a catalog of DB refactorings.  This material alone is worth the price of the book.<p>I didn't think that the chapters on basic programming issues such as concurrency control, referential integrity, database access, and reporting would be of interest.  Man was I wrong.  Ambler takes what I thought were dry subjects and shows how many implementation choices you actually have.  I can't remember how many arguments I've gotten into with DBAs, or programmers, who thought there was only one way to do these things.  Most importantly he discusses the tradeoffs of each strategy and tells you when they work best.  If you're designing a new application this material is critical.<p>If you're struggling to find ways for programmers and DBAs to work together effectively you really need this book.  It shows how to overcome the "people impedance mismatch" that you see in most companies.  DBAs need to work in agile ways, and this book tells how to do exactly this.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321125215'>
                      Domain-Driven Design: Tackling Complexity in the Heart of Software
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 15 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0131401572'>
                      Data Access Patterns: Database Interactions in Object-Oriented Applications
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0735619670'>
                      Code Complete, Second Edition
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 26 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471202827'>
                      Agile Modeling: Effective Practices for Extreme Programming and the Unified Process
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 22 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0521540186'>
                      The Object Primer : Agile Model-Driven Development with UML 2.0
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 6 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Hardcore Java
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0596005687" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wNTk2MDA1Njg3LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPEhhcmRjb3JlIEphdmE7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFxlOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMzkuOTU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQyNi4zNzs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8Mi43Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwxODs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wNTk2MDA1Njg3L3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8QW1hem9uLmNvbTs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8SnVzdCBhcyBzb2Z0d2FyZSBkZXZlbG9wbWVudCBpcyBhbiBpdGVyYXRpdmUgcHJvY2VzcyBpbiB3aGljaCBhbiBhcHBsaWNhdGlvbiBpcyBuZXZlciB0cnVseSAiZG9uZSwiIHRoZSBlZHVjYXRpb24gb2YgYSBkZXZlbG9wZXIgc2hvdWxkIGNvbnRpbnVlIGZvciB5ZWFycy4gWW91IGNhbiB1c2UgXDxJXD5IYXJkY29yZSBKYXZhXDwvSVw+IGFzIGEgZ3VpZGUgdG8gdGhlIHRyYW5zaXRpb24gZnJvbSBub3ZpY2UgSmF2YSBwcm9ncmFtbWVyIHRvIGpvdXJuZXltYW4sIG9yIGFzIGEgbWFwIHRvIHBhcnRzIG9mIHRoZSBsYW5ndWFnZSB5b3UgaGF2ZW4ndCBleHBsb3JlZCAob3IgZXhwbG9yZWQgYWRlcXVhdGVseSkgaW4geW91ciBkZXZlbG9wbWVudCB3b3JrIHRvIGRhdGUuIEJlY2F1c2Ugb2YgdGhvc2UgZGVzaWduIGdvYWxzLCB0aGlzIGJvb2sgaXMgc29tZXRoaW5nIG9mIGEgY2F0Y2gtYWxsLCBjb3ZlcmluZyBhYm91dCBhIGRvemVuIGdlbmVyYWwgdG9waWNzIHJhbmdpbmcgZnJvbSBleGNlcHRpb24taGFuZGxpbmcgdG8gbmVzdGVkIGNsYXNzZXMgKGFuZCBpbnRlcmZhY2VzISkgYW5kIHRoZSByZWZsZWN0aW9uIEFQSS4gVGhlIGNvdmVyYWdlIGNsZWFybHkgZGVyaXZlcyBmcm9tIHRoZSBhdXRob3IncyAibGVzc29ucyBsZWFybmVkIiBub3RlcywgYW5kIHRoZXkncmUgcmljaCB3aXRoIGluZm9ybWF0aW9uLiBJZiBub3RoaW5nIGluIHRoaXMgYm9vayBzdXJwcmlzZXMgeW91LCB5b3UncmUgcHJvYmFibHkgdmVyeSBleHBlcmllbmNlZCB3aXRoIEphdmEuXDxwXD4gIEluIGFkZGl0aW9uIHRvIHRoaXMgYm9vaydzIHR1dG9yaWFsIGZ1bmN0aW9uLCBcPElcPkhhcmRjb3JlIEphdmFcPC9JXD4gcHV0cyBmb3J0aCBhbmQgZGVmZW5kcyBhIG51bWJlciBvZiBvcGluaW9ucyBhYm91dCB0aGUgZGVzaWduIGFuZCBzdHlsZSBvZiBKYXZhIHNvZnR3YXJlLiBPbmUgZXhhbXBsZTogQWZ0ZXIgZXhwbGFpbmluZyBob3cgYml0IGZpZWxkcyB3b3JrLS1iaXQgZmllbGRzIGFyZW4ndCB3aWRlbHkgdXNlZCBpbiBKYXZhIHByb2dyYW1taW5nLCBhbmQgdGhlaXIgYWR2YW50YWdlcyBtYXkgYmUgaW50ZXJlc3RpbmcgdG8gc29tZSBwcm9ncmFtbWVycy0tUm9iZXJ0IFNpbW1vbnMgcG9pbnRzIG91dCB0aGF0IHRoZXkncmUgaW5oZXJlbnRseSBsaW1pdGVkIGluIHRoZWlyIGFiaWxpdHkgdG8gY29udGFpbiBkYXRhLCBhbmQgdGhhdCB0aGlzIGNhbiBjYXVzZSBwcm9ibGVtcy4gVGhpcyBpcyB0aGUga2luZCBvZiBkZXNpZ24gdHJhZGVvZmYgdGhhdCBtb3JlIGFkdmFuY2VkIEphdmEgcHJvZ3JhbW1lcnMgaGF2ZSB0byBjb25zaWRlciwgYW5kIFNpbW1vbnMgZG9lcyB0aGUgSmF2YSBjb21tdW5pdHkgYSBzZXJ2aWNlIGJ5IHNob3dpbmcgcHJvZ3JhbW1lcnMgaG93IHRvIHRoaW5rIGNyaXRpY2FsbHkgYWJvdXQgdGhlIGNhcGFiaWxpdGllcyBvZiB0aGVpciBsYW5ndWFnZS4gXDxJXD4tLURhdmlkIFdhbGxcPC9JXD5cPHBcPiAgXDxCXD5Ub3BpY3MgY292ZXJlZFw8L0JcPjogQWR2YW5jZWQgSmF2YSB0b3BpY3MsIGluY2x1ZGluZyBmaW5hbCBjb25zdGFudHMsIGNvbGxlY3Rpb25zLCBleGNlcHRpb24gaGFuZGxpbmcsIGFuZCBuZXN0ZWQgY2xhc3Nlcy4gVGhlcmUncyBhIHVzZWZ1bCBiaXQgYWJvdXQgZ2V0dGluZyBjdXN0b21lcnMgdG8gaGVscCB5b3UgZGVzaWduIHRoZSBkYXRhIG1vZGVscyB0aGV5IG5lZWQsIGFuZCB2ZXJ5IGV4dGVuc2l2ZSBjb3ZlcmFnZSBvZiByZWZsZWN0aW9uLjs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz4mq1UIifJDbxsvN5Cri2J0T23I0A==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0596005687.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Hardcore Java</span>
        <div class="ItemDetail">By
          <span id="Authors"></span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$39.95</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$26.37</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">2.7</span>
          based on
          <span id="TotalReviews">18</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0596005687/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Amazon.com:</DIV>
                <span id="Label1">Just as software development is an iterative process in which an application is never truly "done," the education of a developer should continue for years. You can use <I>Hardcore Java</I> as a guide to the transition from novice Java programmer to journeyman, or as a map to parts of the language you haven't explored (or explored adequately) in your development work to date. Because of those design goals, this book is something of a catch-all, covering about a dozen general topics ranging from exception-handling to nested classes (and interfaces!) and the reflection API. The coverage clearly derives from the author's "lessons learned" notes, and they're rich with information. If nothing in this book surprises you, you're probably very experienced with Java.<p>  In addition to this book's tutorial function, <I>Hardcore Java</I> puts forth and defends a number of opinions about the design and style of Java software. One example: After explaining how bit fields work--bit fields aren't widely used in Java programming, and their advantages may be interesting to some programmers--Robert Simmons points out that they're inherently limited in their ability to contain data, and that this can cause problems. This is the kind of design tradeoff that more advanced Java programmers have to consider, and Simmons does the Java community a service by showing programmers how to think critically about the capabilities of their language. <I>--David Wall</I><p>  <B>Topics covered</B>: Advanced Java topics, including final constants, collections, exception handling, and nested classes. There's a useful bit about getting customers to help you design the data models they need, and very extensive coverage of reflection.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Overall A Big Disappointment</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-07-06</span>
                    </div>
                    <span>While there are a few nuggets of wisdom sprinkled throughout the book, there is far too much fluff and error to make it a worthwhile read. As for the good, the earlier chapters have some good advice on good coding practices and detailed explanations of why these are good practices. However, most if not all of this advice is also contained in the book Effective Java by Joshua Bloch. As for the bad, there are gobs and gobs of errors throughout the book and there are at least 3 chapters that are of dubious value in a book entitled Hardcore Java (Data Modeling, Proxies, and the JDK 1.5 overview). And yes the back cover does in fact state, "... you'll master the art of writing and maintaining bulletproof and error-prone code ...". Bottom-line, not recommended.</span>
                  
                    <div class="CustomerReviewSummary">Very disappointing</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-30</span>
                    </div>
                    <span>In the preface, the author states that the goal of this book is to transform a developer from the intermediate level to a true guru. In the back cover it even promises that "you'll master the art of writing error-prone (sic!) code", and the reference to "error-prone code" sadly finds its confirmation once one starts reading.<P>It takes about two chapters to demolish the author's credibility as a guru, and you will be reading the rest of the book with a skeptical eye, doubting every assertion that looks questionable and suspecting that the author is talking well above his level of competence, and patronizing about it too!<P>The first chapters are an atrocious review of some Java concepts, densely packed with serious mistakes, not typos, mistakes (plenty of typos too).<P>As an example, on page 9 the definition of the 'for' statement is wrong, a simple check of the Java Language Specification would have spared the author some embarrassment.<P>On page 15 the author gives us wrong rules for labels in Java, and in the same page he confuses the logic of the 'break' and 'continue' statements, providing also a logically wrong code example, just to screw-up things even better.<P>I would not know how to describe the section on "Chained deferred initialization" on page 53, "raving" maybe. This one is cited in the errata page at oreilly.com, and the "author regrets that it slipped through the proverbial cracks". I am more concerned that something like that has been actually written (complete with code samples!), than that it has passed unscathed through editing and reviewing. Let's hope it was written by somebody else playing with the author's laptop. Somebody who does not know what JVM means.<P>There are also less severe but equally confidence-abating points, like, on page 25, the form:<P>new String("A button to show" + text);<P>which we should not find in books for guru wannabes.<P>The author is probably a productive software architect, some points, later in the book, are interesting, though nothing could be defined advanced, but he does not know Java better than an average developer, and this book does not add very much to an intermediate level, apart, maybe, from a warning about writing books: writing a book can transform you from a good developer into a bad author.<P>It is sad that we are flooded with such mediocre and unprofessional "error-prone"publications from such once reputable publishers, from time to time I still re-read and enjoy the conciseness, clarity and value of classics like K&R's "The C Programming Language" and I wonder why today's output is so vastly inferior.<P>As one of the few exceptions, I strongly recommend Bloch's "Effective Java" (Addison-Wesley) which is truly a book written by a guru. After reading that one, "Hardcore Java" will seem even emptier.</span>
                  
                    <div class="CustomerReviewSummary">Nice intro to slightly advanced Java...</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>0</span>
                      /
                      <span>0</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-28</span>
                    </div>
                    <span>The title "Hardcore Java" is definitely overkill. A better one may be "Stuff a new Java developer might not know yet".<P>This book is full is little nuggets of "oh, good idea" and "oh, I never knew that". But don't expect to be a guru after reading it by any means. Lean towards 'Effective Java Programming Language Guide' for a thorough, advanced discussion of the Java language.<P>For it's price, it's not bad, it seems relatively cheap compared to many books on the subject. It's easily a weekend read as well.</span>
                  
                    <div class="CustomerReviewSummary">Number of errors distracting and weak wrt "why do this"</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-26</span>
                    </div>
                    <span>A typo from the back cover sums things up, "Also, you'll master the art of writing and maintaining bulletproof and error-prone code...". I suggest going to the O'Reilly website and reading the errata before buying.<P>Another one of my favorite lines in the book is, "The only way to clear an entire bit...". Anyway, why is there a 5 page discussion on bit manipulation in a book entitled Harcore Java?<P>I wanted to like this book. There is some good advice here, but you have to sift through a lot of text to find it. The first chapter, of 42 pages, contains a lot of very basic beginner type information and could be reduced to:<BR>1. Chain constructors because...<BR>2. Don't hide exception information...<BR>3. Make the default case of an if/else or switch be an assert because...<BR>Discussions about every object descending from java.lang.Object, if statements, ternary expressions, for loops, break, continue, labels, and a reminder that System.exit() causes your program to exit, are misplaced in all but the most basic of books for beginners. That's not how this book is advertised.<P>The author mentions assert and takes a swipe at a discussion on assert versus the various runtime exceptions. A good opportunity to discuss Design by Contract and how it's core tenants will lead to asserts and NOT IllegalArgumentException (and it's ilk) is missed entirely. This is the kind of information I would expect in a Hardcore book.<P>The author appears to really like reflection. Too bad there are no good examples on why you would want to use reflection, such as dynamic mock objects, overcoming a few difficulties while unit testing, specific library implementations (making JMS messages look like function calls, for example), etc. Instead we get a toString() implementation, a discussion on beans/introspection, and an example unit test that has very limited scope. The author suggests mayby GUIs could be built using reflection, but fails to expound on this fantasy. Imagine every GUI looking like a simple properties editor. This is not the kind of statement you throw out and don't attempt to back it up. At least the reader is given a warning, although slight, about the performance of using reflection.<P>The chapter on Proxies is made up of a discussion on the Proxy Pattern and dynamic proxies. The first half of the chapter is a rehash of a well known pattern and there are no reasons given why you'd ever use a dynamic proxy. <P>The chapter on references covers no new ground. The one example of weak references in listener lists skips over the problem that, often, the only reference to the listener is in the list iteself. Otherwise, Sun could rewrite their listeners and clear up lots of leaks.<P>The chapter on JDK 1.5 contains some errors likely related to changes made while the book was in production. Anyway, there's nothing here you couldn't find online.<P>The chapter on immutable objects has good advice. Too bad examples later in the book don't follow the advice. In the section on Constraints the author calls them, "reusable and immutable objects", yet in the very next example doesn't make the private data final. Eat your own cooking before asking us to eat it too.<P>One last thing, the book is way over priced. It should be $20 and about 150 pages smaller. Of course, then it would have to be retitled, "A Few Java Tips".</span>
                  
                    <div class="CustomerReviewSummary">More Anecdotal Evidence Than Anything Else</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-05-19</span>
                    </div>
                    <span>While the intentions of the book are good, and it is an easy read, I haven't been convinced that the author really knows the JVM and its specs well enough to make the assertions in the book. I get the feeling that it's a collection of anecdotal evidence experiences the author has learned and picked up while programming. While most aren't necessarily wrong, no effort is made to explain the roots of the technique and why the condition is.<P>A lot of the discussion is based on techniques to use to reduce bugs. Also a noble goal. But I haven't seen one mention of Unit Tests at all. With so many programming tips to cut down on debugging time, one would think one of the tips would be, "Write unit tests for everything so you never have to start the hunt and debug process."<P>I'd want a version 2 of this book that is really hardcore. And by hardcore, I mean gives me a tip or pitfall and then goes into the JVM spec or Sun implementation and tells me _why_ I'm reading about this.<P>All in all, 2 stars. This is, though, a great book for beginners.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596005393'>
                      JavaServer Faces
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.0 based on 11 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596005725'>
                      Java Servlet & JSP Cookbook
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.7 based on 3 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596006411'>
                      Eclipse
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 6 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596007388'>
                      Java 1.5 Tiger : A Developer's Notebook (Developer's Notebook)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 1 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0596006764'>
                      Better, Faster, Lighter Java
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.2 based on 10 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

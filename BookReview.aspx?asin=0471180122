
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Object-Oriented Multithreading Using C++ 
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0471180122" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wNDcxMTgwMTIyLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPE9iamVjdC1PcmllbnRlZCBNdWx0aXRocmVhZGluZyBVc2luZyBDKysgOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxDYW1lcm9uICBIdWdoZXMsIFRyYWNleSAgSHVnaGVzOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNzUuMDA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ2OS41Njs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8My4zOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwxNDs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wNDcxMTgwMTIyL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8O2w8aTwwPjtpPDE+Oz47bDx0PEA8Qm9vayBEZXNjcmlwdGlvbjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8QSBkZXZlbG9wZXIncyBndWlkZSB0byB3cml0aW5nIHRocmVhZC1zYWZlIG9iamVjdC1vcmllbnRlZCBhcHBsaWNhdGlvbnMuXDxiclw+ICAgXDxiclw+ICAgRHJhd2luZyBvbiB5ZWFycyBvZiBwcm9ncmFtbWluZyBleHBlcmllbmNlLCBDYW1lcm9uIGFuZCBUcmFjZXkgSHVnaGVzIHByb3ZpZGUgYSBidWlsZGluZy1ibG9jayBhcHByb2FjaCB0byBkZXZlbG9waW5nIG11bHRpdGhyZWFkZWQgYXBwbGljYXRpb25zIGluIEMrKy4gVGhpcyBib29rIG9mZmVycyBwcm9ncmFtbWVycyB0aGUgZmlyc3QgY29tcHJlaGVuc2l2ZSBleHBsYW5hdGlvbiBvZiBtdWx0aXRocmVhZGluZyB0ZWNobmlxdWVzIGFuZCBwcmluY2lwbGVzIGZvciBvYmplY3RzIGFuZCBjbGFzcyBsaWJyYXJpZXMuIEl0IHRlYWNoZXMgQysrIHByb2dyYW1tZXJzIGV2ZXJ5dGhpbmcgdGhleSdsbCBuZWVkIHRvIGJ1aWxkIGFwcGxpY2F0aW9ucyB0aGF0IGNvb3BlcmF0ZSBmb3Igc3lzdGVtIHJlc291cmNlcyBpbnN0ZWFkIG9mIGNvbXBldGluZy5cPGJyXD4gICBcPGJyXD4gICBUaGlzIGludmFsdWFibGUgcmVmZXJlbmNlIHNob3dzIHlvdSBob3cgdG8gYXZvaWQgY29tbW9uIHBpdGZhbGxzIG9mIG11bHRpdGhyZWFkaW5nLCB3aGV0aGVyIHlvdSdyZSBwcm9ncmFtbWluZyBpbiBVTklYLCBXaW5kb3dzIE5ULCBvciBPUy8yIGVudmlyb25tZW50LiBBbGwgbWFqb3IgZXhhbXBsZXMgYXJlIGltcGxlbWVudGVkIGluIGVhY2ggZW52aXJvbm1lbnQgYW5kIHN1cHBvcnRlZCBieSB0aG9yb3VnaCBleHBsYW5hdGlvbnMgb2Ygb2JqZWN0LW9yaWVudGVkIG11bHRpdGhyZWFkIGFyY2hpdGVjdHVyZSBhbmQgaW5jcmVtZW50YWwgbXVsdGl0aHJlYWRpbmcuXDxiclw+ICAgXDxiclw+ICAgT24gdGhlIGRpc2sgeW91J2xsIGZpbmQ6XDxiclw+ICAgKiBBbGwgdGhlIHNvdXJjZSBjb2RlIGNvbnRhaW5lZCBpbiB0aGUgYm9va1w8YnJcPiAgICogSW1wb3J0YW50IHByb3RvY29scyBhbmQgaW5mb3JtYXRpb24gcmVzb3VyY2VzXDxiclw+ICAgKiBBIHZhcmlldHkgb2YgbXVsdGl0aHJlYWRlZCBjb21wb25lbnRzIHJlYWR5IHRvIGJ1aWxkIGludG8geW91ciBvd24gYXBwbGljYXRpb25zIG9yIGNsYXNzIGxpYnJhcnkuXDxiclw+ICAgXDxiclw+ICAgWW91J2xsIGZpbmQgYSB3ZWFsdGggb2YgY292ZXJhZ2Ugb24gaGlnaGx5IHByYWN0aWNhbCBidXQgbGl0dGxlIHVuZGVyc3Rvb2QgdG9waWNzIGxpa2U6XDxiclw+ICAgKiBUaHJlYWQtc2FmZSBjb250YWluZXIgY2xhc3Nlc1w8YnJcPiAgICogUE9TSVggdGhyZWFkcyBhbmQgdGhlIG5ldyB0aHJlYWQgc3RhbmRhcmQgMTAwMy4xY1w8YnJcPiAgICogU1RMIGFsZ29yaXRobXMgYW5kIGNvbnRhaW5lcnMgaW4gbXVsdGl0aHJlYWQgZW52aXJvbm1lbnRzXDxiclw+ICAgKiBDKysgc3luY2hyb25pemF0aW9uIGNvbXBvbmVudHNcPGJyXD4gICAqIE9iamVjdC1vcmllbnRlZCBtdXRleGVzIGFuZCBzZW1hcGhvcmVzXDxiclw+ICAgKiBBdm9pZGluZyBkZWFkbG9jayBhbmQgZGF0YSByYWNlIHRocm91Z2ggZW5jYXBzdWxhdGlvblw8YnJcPiAgICogTXVsdGl0aHJlYWRlZCBhcHBsaWNhdGlvbiBmcmFtZXdvcmtzXDxiclw+ICAgKiBPYmplY3Qtb3JpZW50ZWQgcGlwZSBzdHJlYW1zXDxiclw+ICAgXDxiclw+ICAgVmlzaXQgb3VyIFdlYiBzaXRlIGF0IHd3dy53aWxleS5jb20vY29tcGJvb2tzLzs+Pjs+Ozs+Oz4+Oz4+Oz4+Oz70a6NMmXbVTbjKiNLhVXPPN5ijpQ==" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0471180122.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Object-Oriented Multithreading Using C++ </span>
        <div class="ItemDetail">By
          <span id="Authors">Cameron  Hughes, Tracey  Hughes</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$75.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$69.56</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">3.3</span>
          based on
          <span id="TotalReviews">14</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0471180122/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">A developer's guide to writing thread-safe object-oriented applications.<br>   <br>   Drawing on years of programming experience, Cameron and Tracey Hughes provide a building-block approach to developing multithreaded applications in C++. This book offers programmers the first comprehensive explanation of multithreading techniques and principles for objects and class libraries. It teaches C++ programmers everything they'll need to build applications that cooperate for system resources instead of competing.<br>   <br>   This invaluable reference shows you how to avoid common pitfalls of multithreading, whether you're programming in UNIX, Windows NT, or OS/2 environment. All major examples are implemented in each environment and supported by thorough explanations of object-oriented multithread architecture and incremental multithreading.<br>   <br>   On the disk you'll find:<br>   * All the source code contained in the book<br>   * Important protocols and information resources<br>   * A variety of multithreaded components ready to build into your own applications or class library.<br>   <br>   You'll find a wealth of coverage on highly practical but little understood topics like:<br>   * Thread-safe container classes<br>   * POSIX threads and the new thread standard 1003.1c<br>   * STL algorithms and containers in multithread environments<br>   * C++ synchronization components<br>   * Object-oriented mutexes and semaphores<br>   * Avoiding deadlock and data race through encapsulation<br>   * Multithreaded application frameworks<br>   * Object-oriented pipe streams<br>   <br>   Visit our Web site at www.wiley.com/compbooks/</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Lots of Padding</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>5</span>
                      /
                      <span>6</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-02-25</span>
                    </div>
                    <span>When I purchased this book, I was already familiar with the basics of multithreading and synchronization. My hope was a complete, authoritative manual to help me better develop technique and methodology. In the end I was satisfied that I had learned quite a bit from the authors, but this book is hardly a good value.<P>First of all, a reader with an extremely rudimentary understanding of multi-tasking will find nothing but review in the first five chapters (out of twelve) of the book. To be fair, the authors state in the preface: "If the reader is familiar with the fundamental C++ class types and the basic operation system concepts needed to understand threads, then the reader can skip Chapter 1 through 4." This is a bit of an understatement, in my opinion. If a reader understands at a basic level what a thread is and how it differs from a process, he or she will find nothing but (tedious) review in the first five chapters. Don't be fooled by the table of contents; any aparently interesting topics in the first five chapters will be covered in such shallow, abstract detail that you will probably get nothing from them. Additionally if you have done any experimentation with threads and understand basically what a mutex/semaphore/event/critical section is you can probably skip chapter six as well.<P>For me things did not really get interesting or informative until chapter seven at the earliest, maybe even chapter eight. From there on out I would consider the book to be pretty good. Some of it was a little out of place for a book on multithreading. For instance there is a long-winded CSci 101 explanation of what an interface class is at the beginning of chapter seven, which struck me as odd since this is well-covered territory in any OOP C++ book, and familiarity with C++ and OOP in general is a stated pre-condition for reading this book. As for the allegedly poor grammar, I can't honestly say mine is any better so I found it all strangely comforting.<P>In conclusion, much of this book will be review to the average reader. This fact combined with the high price tag does not make this book a good value. It is nice to have on the shelf because it is pretty comprehensive in content, but keep in mind that much of that content is so fundamentally basic to multithreading that you will find it in many of the more thorough general programming books. If you are looking for money well spent, this probably shouldn't be your choice.</span>
                  
                    <div class="CustomerReviewSummary">Fits the pattern</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-06-03</span>
                    </div>
                    <span>I've read previous books by the same author (Streams, for example.) There seems to be pattern here: a few very good ideas totally spoiled by abysmal writing, lack of editing, and unjustifiably high price. Not a useless book by any means, but purchase ONLY upon a personal perusement. Buying blind may result in disappointment.</span>
                  
                    <div class="CustomerReviewSummary">Fair overview</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>19</span>
                      /
                      <span>25</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-06-16</span>
                    </div>
                    <span>The subject of concurrency in software development has taken on particular importance these days due to the emphasis on multitasking in application environments. Users are expecting to be able to perform many tasks at once, and therefore applications must be written that will allow these tasks to be initiated and managed. The strategy for delivering this multitasking is called multithreading and is the topic of this book, and the authors use C++ to implement the needed multithreading. In the book, they discuss mutex objects, anonymous and named pipe objects, thread objects, and container components. They define a concept called incremental multithreading to allow the construction of multithreaded components. The authors do not assume the reader to have any experience in multithreading, but a good background in C++ is assumed. The authors implement the code using POSIX pthreads, and there is an enclosed disk on the book jacket that contains the source code discussed in the book, although only snippets of code are inserted in the book. It is an overview only, and not a textbook, since no problem sets or coding assignments are given in the book. Thus it is not really suitable as a textbook for classroom use, but serves well as a reference. <P>	After a brief review of C++ and OO programming in chapter 1, the authors introduce the concept of a thread and a process in chapter 2. Defining a process as a program in execution, and the environment of a process as a collection of pointers defined by the system, the list the information different types of operating systems give about a process. Processes can be in nine different states with several possible transitions possible between the process states. The authors effectively employ state transition diagrams to illustrate the possibilities. They also discuss in detail the creation of child processes in various operating systems, the differences between synchronous and asynchronous processes, and how processes use available resources. <P>	In chapter 3, a thread is defined as a lightweight process, meaning that the OS does not have quite the burden to manage a thread versus a general process. A multithreaded process then has more than one thread, and the authors give a useful list of the differences between processes and threads. The advantages and disadvantages of threads are the discussed in detail and they classify threads as being sleepers, one shots, anticipating work, and deferring work. Thread control is detailed, along with a discussion of how to prioritize threads. And again, state transition diagrams are used to discuss the dynamics of the changes between different thread states, which are classified as ready, running, and blocked. <P>	Multitasking, which allows more than one process to execute at the same time, and multithreading, which allows a single process to perform many tasks at the same time, are discussed in the next chapter. The advantages of each are discussed, along with scheduling strategies. <P>	The most useful part of the book is the next chapter on interprocess and interthread communication, which are very important in designing concurrent applications. Piping is discussed in detail, along with shared memory and dynamic data exchange. They contrast, effectively using diagrams, the differences between types of communications used by threads, to the types used by processes. <P>	The intricacies and pitfalls behind writing multithreaded applications are discussed in chapter 6 which overviews the cooperation and synchronization of threads. This is where mutexes come in, and the authors do a good job of explaining how they are used. <P>	Interface classes are discussed in more detail in the next chapter, where they are implemented for interprocess communication. The authors could have skipped the generalities on these classes, and instead spend more time on how they assist in multithreading implementations. This chapter finally gets down to a OO approach to programming, and this is followed to a large extent in the next chapter on synchronization objects, where mutex classes are introduced. <P>	Object-oriented multithreaded architectures are discussed in chapter 9, where some multitier approaches are outlined, and a logical PRAM model is discussed. This is followed in the next chapter by how inheritance is used in class hierarchies to implement multithreading. The most useful part of this chapter is the discussion on casting the this pointer, to allow the passing of anything to the thread's main function. <P>	Chapter 11 discusses how C++ objects behave in a multithreaded environment. After a brief review of scoping in C++ and an example, the authors discuss in detail just how objects are created and destroyed in a multithreaded environment. This is followed by a discussion of thread-safe and unsafe functions, and how to use the Standard Template Library in a multithreaded architecture. <P>	In chapter 12, the authors discuss how to test multithreaded applications. The discussion is very general in the first half of the chapter, and not new to anyone who has done software development in a team environment. They do specialize the discussion somewhat to test cases for objects, and discuss the different thread models used when attempting to test multithreaded applications. The discussion however could really be expanded upon, due to its importance. The last chapter of the book is short and merely a wrap-up. The POSIX thread management specifications are given in an appendix to the book. <P>	The authors have done a fairly decent job, but some more advanced examples could have been included along with exercises and projects for the reader to test their understanding. Programming, using multithreading or not, cannot be learned unless code is written and executed by the learner.</span>
                  
                    <div class="CustomerReviewSummary">The complete guide for multithreaded application development</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2000-10-05</span>
                    </div>
                    <span>This is the ultimate book for any experienced C++ programmer who is new to the field of multi-threaded application development. If you are the kind of guy who learns by writing or reading lines of code then this book is not for you but if you want a solid foundation to build future multi threaded applications then look no further. The authors take you through all the concepts and the philosophies behind robust multi-threaded application development. I wish the authors had not included any APIs from any specific platforms. The building blocks and the techniques are all that are needed and you get them in abundance in this book. That would have reduced the price of the book. All the same money well spent.</span>
                  
                    <div class="CustomerReviewSummary">Good overview of Multithreading, covering too many OS.</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>1</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2000-02-22</span>
                    </div>
                    <span>I thoughly enjoyed this book. The illistrations and examples matched much of my experiences and aided my thoughts. This would be an excellent book for a college senior or as an overview of the principles of multithreading in multiple OS's. For people that haven't dealt with OS's except Windows, this might tend to just confuse rather than enlighten. I thought the writing flowed well and I could read large sections without getting tired or bored.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201442345'>
                      Multithreading Applications in Win32: The Complete Guide to Threads
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.7 based on 15 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=020163371X'>
                      More Effective C++: 35 New Ways to Improve Your Programs and Designs
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.4 based on 26 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201633922'>
                      Programming with POSIX(R) Threads
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.3 based on 16 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201924889'>
                      Effective C++: 50 Specific Ways to Improve Your Programs and Design (2nd Edition)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.9 based on 88 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201633612'>
                      Design Patterns
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 175 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

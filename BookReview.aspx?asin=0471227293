
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Patterns in Java: A Catalog of Reusable Design Patterns Illustrated with UML, 2nd Edition, Volume 1
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0471227293" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wNDcxMjI3MjkzLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFBhdHRlcm5zIGluIEphdmE6IEEgQ2F0YWxvZyBvZiBSZXVzYWJsZSBEZXNpZ24gUGF0dGVybnMgSWxsdXN0cmF0ZWQgd2l0aCBVTUwsIDJuZCBFZGl0aW9uLCBWb2x1bWUgMTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8TWFyayAgR3JhbmQsIE1hcmsgR3JhbmQ7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQ0NS4wMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDI5LjcwOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwzLjA7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDYwOz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzA0NzEyMjcyOTMvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDw7bDxpPDA+O2k8MT47PjtsPHQ8QDxCb29rIERlc2NyaXB0aW9uOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxUaGlzIGlzIHRoZSBiZXN0IGJvb2sgb24gcGF0dGVybnMgc2luY2UgdGhlIEdhbmcgb2YgRm91cidzIERlc2lnbiBQYXR0ZXJucy5cPGJyXD4gICBUaGUgYm9vayBtYW5hZ2VzIHRvIGJlIGEgcmVzb3VyY2UgZm9yIHRocmVlIG9mIHRoZSBtb3N0IGltcG9ydGFudCB0cmVuZHMgaW4gcHJvZmVzc2lvbmFsIHByb2dyYW1taW5nOiBQYXR0ZXJucywgSmF2YSwgYW5kIFVNTC4tTGFycnkgTydCcmllbiwgRm91bmRpbmcgRWRpdG9yLCBTb2Z0d2FyZSBEZXZlbG9wbWVudCBNYWdhemluZVw8YnJcPiAgIFNpbmNlIHRoZSByZWxlYXNlIG9mIERlc2lnbiBQYXR0ZXJucyBpbiAxOTk0LCBwYXR0ZXJucyBoYXZlIGJlY29tZSBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IG5ldyB0ZWNobm9sb2dpZXMgY29udHJpYnV0aW5nIHRvIHNvZnR3YXJlIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQuIEluIHRoaXMgdm9sdW1lIE1hcmsgR3JhbmQgcHJlc2VudHMgNDEgZGVzaWduIHBhdHRlcm5zIHRoYXQgaGVscCB5b3UgY3JlYXRlIG1vcmUgZWxlZ2FudCBhbmQgcmV1c2FibGUgZGVzaWducy4gSGUgcmV2aXNpdHMgdGhlIDIzICJHYW5nIG9mIEZvdXIiIGRlc2lnbiBwYXR0ZXJucyBmcm9tIHRoZSBwZXJzcGVjdGl2ZSBvZiBhIEphdmEgcHJvZ3JhbW1lciBhbmQgaW50cm9kdWNlcyBtYW55IG5ldyBwYXR0ZXJucyBzcGVjaWZpY2FsbHkgZm9yIEphdmEuIEVhY2ggcGF0dGVybiBjb21lcyB3aXRoIHRoZSBjb21wbGV0ZSBKYXZhIHNvdXJjZSBjb2RlIGFuZCBpcyBkaWFncmFtbWVkIHVzaW5nIFVNTC5cPGJyXD4gICBQYXR0ZXJucyBpbiBKYXZhLCBWb2x1bWUgMSBnaXZlcyB5b3U6XDxiclw+ICAgKiAxMSBCZWhhdmlvcmFsIFBhdHRlcm5zLCA5IFN0cnVjdHVyYWwgUGF0dGVybnMsIDcgQ29uY3VycmVuY3kgUGF0dGVybnMsIDYgQ3JlYXRpb25hbCBQYXR0ZXJucywgNSBGdW5kYW1lbnRhbCBEZXNpZ24gUGF0dGVybnMsIGFuZCAzIFBhcnRpdGlvbmluZyBQYXR0ZXJuc1w8YnJcPiAgICogUmVhbC13b3JsZCBjYXNlIHN0dWRpZXMgdGhhdCBpbGx1c3RyYXRlIHdoZW4gYW5kIGhvdyB0byB1c2UgdGhlIHBhdHRlcm5zXDxiclw+ICAgKiBJbnRyb2R1Y3Rpb24gdG8gVU1MIHdpdGggZXhhbXBsZXMgdGhhdCBkZW1vbnN0cmF0ZSBob3cgdG8gZXhwcmVzcyBwYXR0ZXJucyB1c2luZyBVTUxcPGJyXD4gICBUaGUgQ0QtUk9NIGNvbnRhaW5zOlw8YnJcPiAgICogSmF2YSBzb3VyY2UgY29kZSBmb3IgdGhlIDQxIGRlc2lnbiBwYXR0ZXJuc1w8YnJcPiAgICogVHJpYWwgdmVyc2lvbnMgb2YgVG9nZXRoZXIvSiBXaGl0ZWJvYXJkIEVkaXRpb24gZnJvbSBPYmplY3QgSW50ZXJuYXRpb25hbCAod3d3LnRvZ2V0aGVyai5jb20pXDsgUmF0aW9uYWwgUm9zZSA5OCBmcm9tIFJhdGlvbmFsIFNvZnR3YXJlICh3d3cucmF0aW9uYWwuY29tKVw7IFN5c3RlbSBBcmNoaXRlY3QgZnJvbSBQb3BraW4gU29mdHdhcmUgKHd3dy5wb3BraW4uY29tKVw7IGFuZCBPcHRpbWl6ZUl0IGZyb20gSW50dWl0aXZlIFN5c3RlbXMsIEluYy47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+F0XlAshH9+jE+qWXHqH3ZsQfP3A=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0471227293.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Patterns in Java: A Catalog of Reusable Design Patterns Illustrated with UML, 2nd Edition, Volume 1</span>
        <div class="ItemDetail">By
          <span id="Authors">Mark  Grand, Mark Grand</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$45.00</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$29.70</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">3.0</span>
          based on
          <span id="TotalReviews">60</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0471227293/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">This is the best book on patterns since the Gang of Four's Design Patterns.<br>   The book manages to be a resource for three of the most important trends in professional programming: Patterns, Java, and UML.-Larry O'Brien, Founding Editor, Software Development Magazine<br>   Since the release of Design Patterns in 1994, patterns have become one of the most important new technologies contributing to software design and development. In this volume Mark Grand presents 41 design patterns that help you create more elegant and reusable designs. He revisits the 23 "Gang of Four" design patterns from the perspective of a Java programmer and introduces many new patterns specifically for Java. Each pattern comes with the complete Java source code and is diagrammed using UML.<br>   Patterns in Java, Volume 1 gives you:<br>   * 11 Behavioral Patterns, 9 Structural Patterns, 7 Concurrency Patterns, 6 Creational Patterns, 5 Fundamental Design Patterns, and 3 Partitioning Patterns<br>   * Real-world case studies that illustrate when and how to use the patterns<br>   * Introduction to UML with examples that demonstrate how to express patterns using UML<br>   The CD-ROM contains:<br>   * Java source code for the 41 design patterns<br>   * Trial versions of Together/J Whiteboard Edition from Object International (www.togetherj.com); Rational Rose 98 from Rational Software (www.rational.com); System Architect from Popkin Software (www.popkin.com); and OptimizeIt from Intuitive Systems, Inc.</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">May be helpful</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>3</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-06-22</span>
                    </div>
                    <span>The help this offers is for students who haven't learned a lot of languages yet. For them, the effort of picking Java sense out of C++ or Smalltalk may defeat the rest of the pattern discussion. For them, Java code samples and references to familiar Java library elements can make all the difference.<p>For the rest of us, this book has decidedly mixed value. The real problem is that Grand seems to equate the terms "desgin pattern" and "good idea". Design patterns are good ideas, at least in the right context, but not all good ideas are design patterns. <p>For example, delegation of responsibility is a good idea. It's the basis of any system decomposition. I have trouble justifying that as a design pattern - you may as well say that passing function parameters is a design pattern. It's just too broad. At the other end of the spectrum, Grand points to "marker" interfaces, Java interfaces with identities but not content, as a design pattern. Again, this is a useful but language-dependent hack. Ada or C# would have done the same things with attributes, and C++ could have done the same using marker fields or values in the class. Language tricks aren't patterns.<p>Still, many of Grand's patterns are good ideas. The "Object Pool", for example, is a common and useful pattern. It's closely related to two GoF patterns. It's like a Singleton, except there's more than one of them. It's like a Flyweight, except the units aren't distinguishable or shareable.<p>One real annoyance is the tendency of this Volume I to refer to necessary information in Volume II. If the author is going to create independently saleable units of book, they should be independently readable. I do not appreciate the implicit plug for the author's other work.<p>I use this book, but mostly for its bad examples. Think hard about whether this is the way to spend your budget for DP books.</span>
                  
                    <div class="CustomerReviewSummary">Beware - Spammer on Board</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>1</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>5</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-10-17</span>
                    </div>
                    <span>About every month or so I get spammed by this author touting his great seminars so I thought I'd give his book a shot. I guess you could say that he finally wore me down. Luckily I actually purchased the book used for $2 and still think I was royally ripped off. <p>The book begins poorly and gets worse. Specifically, the author definitely has a pension for patronizing his audience. He speaks as though he invented Patterns and is delivering them to the masses after bringing them down from the mountains inscribed on clay tablets.<p>Now, I'm not a guy to worry too much about a few typos here and there. After all, mistakes are made in code and text alike. However, the author's examples are not at all practical to the point of being useless and far too many of them flat out don't work!! <p>I'm not so much upset about the measly two bucks as I am about the several hours lost trying to decipher what the author meant and working through the typos. Anyway, hopefully this review will save someone else the time I lost.</span>
                  
                    <div class="CustomerReviewSummary">Full of typo errors</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>3</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>1</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-08-18</span>
                    </div>
                    <span>Not as good as the GOF book, but much better than others. You'll be needing the GOF to understand plentifully the patterns. A nightmare the sea of typo errors throughout the whole book. As others reviewers wrote, the author should have paid more attention to the final draft before sending it to print.</span>
                  
                    <div class="CustomerReviewSummary">Disappointing</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>2</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>3</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-07-29</span>
                    </div>
                    <span>The first time I read this book was to look up the Decorator Pattern.  I went directly into the chapter and was highly disappointed by the numerous mismatches of class names found in the examples.  My head was spinning after reading the chapter and gave up the whole book altogether.  (I dont want to take the risk of writing another list of printing errors found in each chapter I read.  I am a reader not their proofreader!!!)<p>For example, the text refers to a name 'DoorController' but the diagram (Fig 7.28) only has 'DoorControllerIF', 'DoorControllerWrapperA', and 'DoorControllerWrapperB'.  What the hell does it refer to?<p>In Fig 7.30, the interface has 2 methods - 'Operation1()' and 'Operation2()', but all subclasses of it use the names 'Operation()' and 'Operation2()', instead.  Does it mean 'Operator1()' and 'Operation()' are 2 different methods?<p>The source code in P280 uses the type name 'SurveillanceMonitorIF' but there is no such a type ever found in the text - the closest match is 'surveillanceIF' only!!!!!<p>This *could* be a great book provided that the author/publisher pay SERIOUS attention to the importance of consistent naming.</span>
                  
                    <div class="CustomerReviewSummary">Helpful for learning</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>2</span>
                      /
                      <span>2</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2002-12-09</span>
                    </div>
                    <span>If you are a hands on Java programmer and want the design patterns explained as you can understand them in code, this book is worth it.  I notice other reviewers slate this book, picking up on what they consider to be "errors".  Well, ultimately GOF4 is always going to be the authority on patterns but GOF4 is very dry - this book gives a practical java code explanation of the patterns.  I often browse through it looking for ideas.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0764543857'>
                      Expert One-on-One J2EE Design and Development (Programmer to Programmer)
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 25 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471333158'>
                      Java Enterprise Design Patterns: Patterns in Java Volume 3 (With CD-ROM)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0130935387'>
                      Applied Java Patterns
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 19 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471258415'>
                      Patterns in Java, Volume 2
                    </a>
                    <div class="SimilarItemRatings">Rating: 1.5 based on 14 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201743973'>
                      Design Patterns Java Workbook
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.0 based on 20 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>

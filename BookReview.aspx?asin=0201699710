
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: The ACE Programmer's Guide: Practical Design Patterns for Network and Systems Programming
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=0201699710" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8wMjAxNjk5NzEwLjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFRoZSBBQ0UgUHJvZ3JhbW1lcidzIEd1aWRlOiBQcmFjdGljYWwgRGVzaWduIFBhdHRlcm5zIGZvciBOZXR3b3JrIGFuZCBTeXN0ZW1zIFByb2dyYW1taW5nOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxTdGVwaGVuIEQuIEh1c3RvbiwgSmFtZXMgQ0UgSm9obnNvbiwgVW1hciBTeXlpZDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8JDQ5Ljk5Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkNDIuNjM7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPDUuMDs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NDs+Pjs+Ozs+O3Q8QDxodHRwOi8vd3d3LmFtYXpvbi5jb20vZXhlYy9vYmlkb3MvQVNJTi8wMjAxNjk5NzEwL3JlZj1ub3NpbS9pdW5rbm93bmNvbS0yMDs+Ozs+O3Q8cDxwPGw8VmlzaWJsZTs+O2w8bzxmPjs+Pjs+O2w8aTwwPjtpPDE+Oz47bDx0PEA8XGU7Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFxlOz4+Oz47Oz47Pj47Pj47Pj47PplbE4NCi5/wbnVe9Y+DmRq7SBGE" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/0201699710.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">The ACE Programmer's Guide: Practical Design Patterns for Network and Systems Programming</span>
        <div class="ItemDetail">By
          <span id="Authors">Stephen D. Huston, James CE Johnson, Umar Syyid</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$49.99</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$42.63</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">5.0</span>
          based on
          <span id="TotalReviews">4</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/0201699710/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">What would you do with all this power?</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>6</span>
                      /
                      <span>9</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2004-01-05</span>
                    </div>
                    <span>This book is yet another great example of how the ACE framework can save you a lifetime of development. Within this book is the knowledge and experience to excell your applications to the next level and become more productive then ever. If your code base deals with networking or even if you just need to have cross platform compatibility then this book is a must have to teach you the ways of ACE.</span>
                  
                    <div class="CustomerReviewSummary">Tries to Decouple C++ from Specific OS details</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>16</span>
                      /
                      <span>18</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-04</span>
                    </div>
                    <span>Network programming can be very difficult, given such issues as latency and different hardware/operating systems on your net. At the very least, the latter can have different byte orderings an datatype sizes, if you write in C or C++. Now in C, by the late 1980s, such headaches caused several unix vendors (mainly Sun) to converge on supporting a key utility, rpcgen (and affiliated routines). This let you write common C code for client/server applications, and compile these on various platforms. Lo, things usually worked! <br> <br>But as software projects grew in complexity, writing in procedural language like C became harder. Hence the rise of C++. Well, wouldn't it be nice to reimplement and extend rpcgen? (It had numerous limitations.) The idea was to finesse/bury OS specific details at a lower level of the code, where you could often ignore it. You can imagine ACE as filling this need. I'm not saying that this is how or why ACE was developed. But I am trying to argue from YOUR background, which I assume is C++ and C. <br> <br>The book describes significantly more functionality in ACE than merely an extension of rpcgen. Even if you don't have a C++ networking application, but are writing a standalone application, ACE may be useful. It increases your chances of writing portable code. For one thing, it heavily downplays the use of OS-supplied compiler macros. In both C++ and C code that will be maintained on several platforms, this is a notorious source of bugs. Very brittle. Just having ACE subsume these issues should give a maintenance productivity gain. You won't see this immediately when coding the first version of your application. But experienced developers should see the payoff. <br> <br>Plus, ACE also offers higher level design patterns. Here, I don't know how applicable they might be to your specific problems. But just having the patterns increases your coding arsenal.</span>
                  
                    <div class="CustomerReviewSummary">... no better way to learn ACE</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>13</span>
                      /
                      <span>14</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-12-03</span>
                    </div>
                    <span>... than from the experts -- those who design / maintain / extend / port it, and some of those very same people were involved in the creation of this guide.<p>OK, we've all seen the problems with networked application development -- Windows does it differently than Solaris, which does it differently than Linux, which does it differently than VxWorks, which does it differently than Mac OSX , which does it differently than ... etc.  Sockets, threads, timers, mutexes, synchronization primitives, etc. are the bane of developers who want to make their applications connect and communicate with one another in heterogeneous environments.  Even the technologies that are cross-platform more or less (BSD sockets, pthreads, shared memory, etc.) are sometimes difficult to use and easy to introduce bugs with.  What is a networked application developer to do?<p>Enter ACE -- the ADAPTIVE Communication Environment, which aims (and largely succeeds) in providing a cross-platform, pattern-based systems framework that hides the platform specifics without sacrificing speed, makes BSD sockets, threads, and system APIs object-based, and allows the same code to be used on a variety of platforms.  ACE is used in many large projects around the world which needed to be highly scalable, predictable, portable and easily maintainable, all at once.  Enter this book, which does an admirable job both introducing ACE and many of the design patterns it implements to the newcomer, and making some of the finer points of ACE more cogent to those of us who have been working with it for awhile.  Each chapter has an introduction (which pattern we're covering now, what problems it solves, how ACE implements it), lots and lots (and lots and lots) of easy-to-read source code examples, and plenty of plain-english explanation as to how this stuff works.  In my continuing ACE education, this book (as well as the C++NP books and the ACE-users list) truly helps me to understand ACE, patterns, and all that they are capable of.  I am a far better developer as a result, and I cannot give this book any higher praise than that.</span>
                  
                    <div class="CustomerReviewSummary">Great way to learn the ACE Framework</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>23</span>
                      /
                      <span>25</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2003-11-21</span>
                    </div>
                    <span>This is probably the most practical book ever written on this topic.  I have read the C++ Network Programming books, and I believe that this Programmer's Guide is even better.  <p>ACE, the ADAPTIVE Communication Environment, has been around since the early 90's and thanks to over 1700 contributors over the past decade or so, it has become a very powerful, reusable, Object Oriented, beautifully engineered, designed, and developed framework that is creeping its way to the hearts of developers, project leads, and managers all around the world and in many industry verticals.  <p>ACE has made one of the hardest things to do as a developer, network programming much simpler, but that's not all.  That's where this book comes into play.  The other books focus on the network programming of ACE, and even though they cover the topic VERY well, they don't convey the other powerful features that ACE has:<br>	ACE Logging Facility<br>	ACE Runtime and configuration facility<br>	ACE (STL like) containers, allocators, etc...<p>Right of the bat, this book covers those details and shows the reader concrete examples and ways to apply these examples in real life.<br>The author spends the next 4 chapters (6-9) going over the IPC facilities of ACE.  It starts from basic SOCKET programming, to SIGNALS, to the use of TIMERS and it ends with the odds and ends of IPC.  These topics were covered in the C++ network programming books before, but this book, instead of talking about it, SHOWS the reader how things are done.  The Reactor and the Proactor frameworks are covered in chapters 7 and 8.  As the author mentions in chap 7:<br>The ACE reactor framework was designed to implement a flexible event-handling mechanism is such a way that applications need never write the central, platform-dependent code for their event-handling needs.<br>Then the author goes into an extensive detail of how this is done, and in its closing remarks, he says the following:<br>With little ingenuity, your reactor-based application can turn on the foyer light when someone pulls into your driveway or mute the television when the phone rings.<br>The Proactor framework is covered in full detail in the following chapter.  The author does a great job at telling and showing the differences between the two design patterns and when to use one vs. the other.  When all said and done, the author explains how these two design patterns can make a killer combo.<br>The book is more like a personal notebook that you would create for yourself in that you write down notes, hints, do's and don'ts and few lines of code at a time telling yourself how you made something to work properly. <p>In Part III, Processes and Threads are covered.  Even though the author has included these chapters after the IPC section, a great deal of detail was spent on showing the reader that these classes are not necessarily related to the IPC set of classes.  The reader can literally read part III of this book, and gain a good understanding of how to use the thread and the process management classes - remind you that these two topics are difficult to grasp and programming is a bit difficult, but the author shows how cleanly these two topics were covered in ACE.  The icing on the cake is the last chapter in Part III: Thread Pools.  Two threading models are covered:<br>	Half-sync/half-async model<br>	Leader/follower model<br>I will leave the details of these two models to the reader.  <p>Part IV covers the "advanced topics" such as shared memory, the configuration framework, timers, and the naming service.  Again, for each section an extensive example is given, which makes the topic easy to understand and to follow.  The configuration framework is a very well covered section, as it is something that any of us can benefit from in our next design.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0471606952'>
                      Pattern-Oriented Software Architecture, Volume 2, Patterns for Concurrent and Networked Objects
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 18 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201795256'>
                      C++ Network Programming, Volume 2: Systematic Reuse with ACE and Frameworks
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 22 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0321113586'>
                      C++ Coding Standards : 101 Rules, Guidelines, and Best Practices (C++ in Depth Series)
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 14 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201604647'>
                      C++ Network Programming, Vol. 1: Mastering Complexity with ACE and Patterns
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 11 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201379279'>
                      Advanced CORBA(R) Programming with C++
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 33 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>


<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
  <HEAD>
    <title>Recommended book: Clause and Effect: Prolog Programming for the Working Programmer
    </title>
    <meta content="JavaScript" name="vs_defaultClientScript">
    <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
    <LINK href="global.css" type="text/css" rel="stylesheet">
  </HEAD>
  <body MS_POSITIONING="GridLayout">
    <a href="Default.aspx">
      <img id="Image2" class="Logo" src="images/logo.png" alt="iunknown.com: building better software, faster" border="0" /></a>
    <form name="Form1" method="post" action="BookReview.aspx?asin=3540629718" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwxNzczMTIwMDYzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47aTw1PjtpPDc+O2k8OT47aTwxMT47aTwxMz47aTwxND47aTwxNz47PjtsPHQ8cDxwPGw8SW1hZ2VVcmw7PjtsPGh0dHA6Ly9pbWFnZXMuYW1hem9uLmNvbS9pbWFnZXMvUC8zNTQwNjI5NzE4LjAxLl9TQ01aWlpaWlpaXy5qcGc7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPENsYXVzZSBhbmQgRWZmZWN0OiBQcm9sb2cgUHJvZ3JhbW1pbmcgZm9yIHRoZSBXb3JraW5nIFByb2dyYW1tZXI7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPFcuIEYuIENsb2Nrc2luOz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwkMzQuOTU7Pj47Pjs7Pjt0PHA8cDxsPFRleHQ7PjtsPCQzNC45NTs+Pjs+Ozs+O3Q8cDxwPGw8VGV4dDs+O2w8NC41Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDwyOz4+Oz47Oz47dDxAPGh0dHA6Ly93d3cuYW1hem9uLmNvbS9leGVjL29iaWRvcy9BU0lOLzM1NDA2Mjk3MTgvcmVmPW5vc2ltL2l1bmtub3duY29tLTIwOz47Oz47dDw7bDxpPDA+O2k8MT47PjtsPHQ8QDxCb29rIERlc2NyaXB0aW9uOz47Oz47dDxwPHA8bDxUZXh0Oz47bDxUaGlzIHdvcmtib29rIGlzIGZvciBwcm9ncmFtbWVycyB3aG8gYXJlIG5ldyB0byBQcm9sb2cgYW5kIHdobyB3aXNoIHRvIHdyaXRlIHVzZWZ1bCBQcm9sb2cgcHJvZ3JhbXMuIFRoZSBlbXBoYXNpcyBpcyBvbiBhIHNpbXBsaWZpZWQgYW5kIGRpc2NpcGxpbmVkIG1ldGhvZG9sb2d5IGZvciBkaXNjZXJuaW5nIHRoZSBtYXRoZW1hdGljYWwgc3RydWN0dXJlcyByZWxhdGVkIHRvIGEgcHJvYmxlbSwgYW5kIHRoZW4gdHVybmluZyB0aGVzZSBzdHJ1Y3R1cmVzIGludG8gUHJvbG9nIHByb2dyYW1zLiBBIHJlbGF0aXZlbHkgcHVyZSBzdWJzZXQgb2YgUHJvbG9nIGlzIHVzZWQgYW5kIHRoZSBmb2N1cyBpcyBub3Qgb24gcGFydGljdWxhciBmZWF0dXJlcyBvZiB0aGUgbGFuZ3VhZ2UuIFRoZSBwcmVzZW50YXRpb24gaXMgbm92ZWwuIEFuIG91dGxpbmUgb2YgYmFzaWMgY29uY2VwdHMgaXMgaW50ZXJsZWF2ZWQgd2l0aCB3b3Jrc2hlZXRzLCB3aGljaCBhcmUgZ3JhZHVhdGVkIGluIHNjb3BlIGFuZCBnaXZlIGd1aWRhbmNlIGZvciBwcmFjdGlzaW5nIG5ldyBpZGVhcy4gRXh0ZW5kZWQgZXhhbXBsZXMgaW4gdGhlIGZvcm0gb2YgY2FzZSBzdHVkaWVzIHRoZW4gYXBwbHkgdGhlIGlkZWFzLiBUaGUgYm9vayBjYW4gYmUgYSB1c2VmdWwgY29tcGFuaW9uIHRvIHR3byBvdGhlciBTcHJpbmdlciBib29rcywgYXMgYSBzZXF1ZWwgdG8gdGhlIGF1dGhvcidzIGludHJvZHVjdG9yeSB0ZXh0ICJQcm9ncmFtbWluZyBpbiBQcm9sb2ciIGFuZCBhbG9uZ3NpZGUgdGhlIHJlZmVyZW5jZSBtYW51YWwgIlByb2xvZzogVGhlIFN0YW5kYXJkIi47Pj47Pjs7Pjs+Pjs+Pjs+Pjs+rzVELlU2s+WPZVT00Hg5wcdRhlY=" />

      <div class="BookReview"><img id="BookImage" class="BookReviewImage" src="http://images.amazon.com/images/P/3540629718.01._SCMZZZZZZZ_.jpg" alt="" border="0" />
        <span id="BookReviewTitle" class="BookReviewTitle">Clause and Effect: Prolog Programming for the Working Programmer</span>
        <div class="ItemDetail">By
          <span id="Authors">W. F. Clocksin</span></div>
        <div class="ItemDetail">
          <span class="ItemCaption">List price:</span>
          <span id="ListPrice" class="ListPrice">$34.95</span>
          <span class="ItemCaption">Our price:</span>
          <span id="OurPrice" class="OurPrice">$34.95</span>
        </div>
        <div class="ItemDetail">
          <span class="ItemCaption">Average customer review:</span>
          <span id="AverageReview">4.5</span>
          based on
          <span id="TotalReviews">2</span>
          reviews.
        </div>
        <div class="BuyButton">
          <a href='http://www.amazon.com/exec/obidos/ASIN/3540629718/ref=nosim/iunknowncom-20'>
            <img id="Image1" src="Images/buy_from_amazon.gif" alt="" border="0" /></a>
        </div>
        <table class="ReviewBody">
          <tr>
            <td class="ReviewColumn">
              <table id="EditorialReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Book Description:</DIV>
                <span id="Label1">This workbook is for programmers who are new to Prolog and who wish to write useful Prolog programs. The emphasis is on a simplified and disciplined methodology for discerning the mathematical structures related to a problem, and then turning these structures into Prolog programs. A relatively pure subset of Prolog is used and the focus is not on particular features of the language. The presentation is novel. An outline of basic concepts is interleaved with worksheets, which are graduated in scope and give guidance for practising new ideas. Extended examples in the form of case studies then apply the ideas. The book can be a useful companion to two other Springer books, as a sequel to the author's introductory text "Programming in Prolog" and alongside the reference manual "Prolog: The Standard".</span>
              
</td></tr></table>
              <table id="CustomerReviewsPanel" class="ReviewSection" cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td>
	
                <DIV class="ReviewHeading">Customer reviews:</DIV>
                
                    <div class="CustomerReviewSummary">Serves its purpose well</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>4</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>12</span>
                      /
                      <span>12</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-06-20</span>
                    </div>
                    <span>For those who have experience in logic programming, either with Prolog or some other language, such as Lisp, or even a high-level symbolic programming language like Mathematica or Maple, this book could serve as a first course or a summary of Prolog programming. Research in logic programming is still an active area, and the approach taken in logic programming languages seems more natural from the standpoint of mathematical (predicate) logic. The author, in this short book, gives the reader an appreciation of Prolog and the philosophy and constructions behind logic programming. Many examples are employed that illustrate how to code in Prolog and how useful it can be in real-world applications. <p>	In the first chapter, the author gives some justification for programming in Prolog, such as its symbol manipulation capability, automatic backtracking, the view that data structures and programs are of the same form, and the relational form of clauses. The syntax of Prolog is then discussed, and examples given of the three kinds of terms in Prolog. Readers with some background in category theory will appreciate the discussion more, as the author does employ some of this in the discussion, for example the view of addition as being a functor of a term. Terms are drawn in tree form in this chapter and throughout the book. The author then characterizes a Prolog program as a set of procedures, with each defining a predicate, and consisting of one or more (Horn) clauses. Unification of terms is discussed as a basic operation that determines when two clauses can be made equivalent by a substitution of variables. The execution of a program is viewed as a querying of the clauses, and the goal or e nd of the program is a proof that the goal is true. <p>	Data structures in Prolog are discussed in chapter 2 as generalizations of programs using compound terms instead of just constants and variables. Lists are defined and their syntax discussed, along with dot and bracket notation. The implementation of simple arithmetic in Prolog is discussed. Several effective examples are given to illustrate arithmetic and list manipulation in Prolog. <p>	Mappings, which are relations between two data structures, are the topic of chapter 3, and the author gives many examples illustrating how it is used to compose Prolog programs and how they act an both lists and more general trees. <p>	The built-in predicate "cut" is discussed in the next chapter as a predicate to allow backtracking control of the program. The author gives many examples illustrating the problems involved with the use of "cut". <p>	Difference structures are discussed in chapter 5 as a tool to simplify and increase program efficiency. A generalization of the idea of an accumulator, they allow one to work with "holes" in data structures during actual program execution. A list for example, can be viewed as "open" with its elements known only up to a point. It can then be filled in with an empty or a proper list. A difference list, discussed in the chapter, is then a list represented as a pair of "front" and "back", with the back being variable. <p>	Applications of term rewriting are given in chapter 6, with symbolic differentiation launching the discussion. This is the more popular example of what Prolog-type languages can do, and is usually the reason given for beginning the use of symbolic programming languages. The author also discussed matrix multiplication in this chapter. <p>	The next two chapters discuss the representation and manipulation of logical circuits using Prolog, including shift registers and coding circuits. This is followed in chapter 9 by an interesting discussion on how to write a compiler in Prolog, with the author discussing compilation for a single-accumulator computer, a RISC machine, and a stack machine. This is followed in chapter 10 by an even more interesting discussion on how to write a Fast Fourier transform in Prolog. <p>	The last chapter of the book discusses how to use higher-order functional programming techniques in Prolog. For individuals, like myself, who are convinced that functional and logic programming are the most effective programming paradigms, this chapter is very interesting reading. The author defines an evaluator written in Prolog for these higher-order functional programs. Functional programming views computation as a collection of function applications on an expression representing a particular problem, and these functions can then be viewed as arguments to other functions. The lambda calculus from mathematical logic serves as the foundation for functional programming, and the author reviews this quickly, along with the technique of currying, in order to obtain facilities for functional programming in Prolog. Although short, this chapter introduces the reader to a fascinating area, and helpful references are given at the end of the chapter.</span>
                  
                    <div class="CustomerReviewSummary">Ideal for a short course on Prolog</div>
                    <div>
                      <span class="ItemCaption">Rating: </span>
                      <span>5</span>
                      <span class="ItemCaption">Helpful: </span>
                      <span>4</span>
                      /
                      <span>4</span>
                      votes <span class="ItemCaption">Reviewed: </span>
                      <span>2001-04-25</span>
                    </div>
                    <span>For years I've tried to find a short Prolog text for my Computer languages course.  I cover Prolog in 4 weeks and so didn't want a huge 400+ page text.  Clause and Effect comes in at about 1/2 inch thick.  I've come to love this one for what it does.  It introduces some basic topics, then includes a number of "worksheets" at the end of each chapter.  It offers a "learning by doing" approach (the worksheets are short "lab exercises").  A word of warning - don't expect to learn everything about Prolog from this text.  It does not go into the philosophy and theory of Prolog and logic programming.  But for my needs it's perfect.</span>
                  
              
</td></tr></table>
            </td>
            <td class="ReviewSideBar">
              <div class="ItemCaption">Customers also bought:</div>
              
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=3540006788'>
                      Programming in Prolog : Using the ISO Standard
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 4 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262193388'>
                      The Art of Prolog, Second Edition: Advanced Programming Techniques (Logic Programming)
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 5 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0201403757'>
                      Prolog Programming for Artificial Intelligence
                    </a>
                    <div class="SimilarItemRatings">Rating: 5.0 based on 8 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=013138645X'>
                      Prolog Programming in Depth
                    </a>
                    <div class="SimilarItemRatings">Rating: 4.5 based on 3 reviews</div>
                  </div>
                
                  <div class="SimilarItem">
                    <a href='BookReview.aspx?asin=0262150395'>
                      The Craft of Prolog (Logic Programming)
                    </a>
                    <div class="SimilarItemRatings">Rating: 3.5 based on 3 reviews</div>
                  </div>
                
              <div class="GoogleBookAd">
                <script type="text/javascript"><!--
                google_ad_client = "pub-8264790134546506";
                google_ad_width = 160;
                google_ad_height = 600;
                google_ad_format = "160x600_as";
                google_ad_channel ="4375045039";
                google_color_border = "CCCCCC";
                google_color_bg = "FFFFFF";
                google_color_link = "000000";
                google_color_url = "666666";
                google_color_text = "333333";
                //--></script>
                <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                </script>
              </div>
            </td>
          </tr>
        </table>
      </div>
    </form>
  </body>
</HTML>
